0:00:00 DEB - argument: config=null (path to config file)
0:00:00 DEB - argument: download_dir=data/sources (download directory)
0:00:00 DEB - argument: area=planet (name of the extract to download if osm_url/osm_path not specified (i.e. 'monaco' 'rhode island' 'australia' or 'planet'))
0:00:00 INF - argument: stats=use in-memory stats
0:00:00 DEB - argument: madvise=true (default value for whether to use linux madvise(random) to improve memory-mapped read performance for temporary storage)
0:00:00 DEB - argument: storage=ram (default storage type for temporary data, one of [ram, mmap, direct])
0:00:00 DEB - argument: threads=180 (num threads)
0:00:00 DEB - argument: write_threads=6 (number of threads to use when writing temp features)
0:00:00 DEB - argument: process_threads=174 (number of threads to use when processing input features)
0:00:00 DEB - argument: bounds=Env[-180.0 : 180.0, -85.0511287798066 : 85.0511287798066] (bounds)
0:00:00 DEB - argument: polygon=null (a .poly file that limits output to tiles intersecting the shape)
0:00:00 DEB - argument: minzoom=0 (minimum zoom level)
0:00:00 DEB - argument: maxzoom=14 (maximum zoom level up to 15)
0:00:00 DEB - argument: render_maxzoom=14 (maximum rendering zoom level up to 15)
0:00:00 DEB - argument: tmpdir=data/tmp (temp directory)
0:00:00 DEB - argument: feature_read_threads=2 (number of threads to use when reading features at tile write time)
0:00:00 DEB - argument: tile_write_threads=1 (number of threads used to write tiles - only supported by [files, csv, tsv, proto, pbf, json])
0:00:00 DEB - argument: loginterval=10 seconds (time between logs)
0:00:00 DEB - argument: force=false (overwriting output file and ignore disk/RAM warnings)
0:00:00 DEB - argument: append=false (append to the output file - only supported by [files, csv, tsv, proto, pbf, json])
0:00:00 DEB - argument: gzip_temp=false (gzip temporary feature storage (uses more CPU, but less disk space))
0:00:00 DEB - argument: mmap_temp=true (use memory-mapped IO for temp feature files)
0:00:00 DEB - argument: sort_max_readers=6 (maximum number of concurrent read threads to use when sorting chunks)
0:00:00 DEB - argument: sort_max_writers=6 (maximum number of concurrent write threads to use when sorting chunks)
0:00:00 DEB - argument: nodemap_type=array (type of node location map, one of [noop, sortedtable, sparsearray, array])
0:00:00 DEB - argument: nodemap_storage=ram (storage for node location map, one of [ram, mmap, direct])
0:00:00 DEB - argument: nodemap_madvise=true (use linux madvise(random) for node locations)
0:00:00 DEB - argument: multipolygon_geometry_storage=ram (storage for multipolygon geometries, one of [ram, mmap, direct])
0:00:00 DEB - argument: multipolygon_geometry_madvise=true (use linux madvise(random) for temporary multipolygon geometry storage)
0:00:00 DEB - argument: http_user_agent=Planetiler downloader (https://github.com/onthegomap/planetiler) (User-Agent header to set when downloading files over HTTP)
0:00:00 DEB - argument: http_timeout=30 seconds (Timeout to use when downloading files over HTTP)
0:00:00 DEB - argument: http_retries=1 (Retries to use when downloading files over HTTP)
0:00:00 DEB - argument: download_chunk_size_mb=100 (Size of file chunks to download in parallel in megabytes)
0:00:00 DEB - argument: download_threads=1 (Number of parallel threads to use when downloading each file)
0:00:00 DEB - argument: download_max_bandwidth= (Maximum bandwidth to consume when downloading files in units mb/s, mbps, kbps, etc.)
0:00:00 DEB - argument: min_feature_size_at_max_zoom=0.0625 (Default value for the minimum size in tile pixels of features to emit at the maximum zoom level to allow for overzooming)
0:00:00 DEB - argument: min_feature_size=1.0 (Default value for the minimum size in tile pixels of features to emit below the maximum zoom level)
0:00:00 DEB - argument: simplify_tolerance_at_max_zoom=0.0625 (Default value for the tile pixel tolerance to use when simplifying features at the maximum zoom level to allow for overzooming)
0:00:00 DEB - argument: simplify_tolerance=0.1 (Default value for the tile pixel tolerance to use when simplifying features below the maximum zoom level)
0:00:00 DEB - argument: osm_lazy_reads=false (Read OSM blocks from disk in worker threads)
0:00:00 DEB - argument: skip_filled_tiles=false (Skip writing tiles containing only polygon fills to the output)
0:00:00 DEB - argument: tile_warning_size_mb=1.0 (Maximum size in megabytes of a tile to emit a warning about)
0:00:00 DEB - argument: color=null (Color the terminal output)
0:00:00 DEB - argument: keep_unzipped=false (keep unzipped sources by default after reading)
0:00:00 DEB - argument: tile_compression=gzip (the tile compression, one of [gzip, none])
0:00:00 DEB - argument: output_layerstats=false (output a tsv.gz file for each tile/layer size)
0:00:00 DEB - argument: debug_url=https://onthegomap.github.io/planetiler-demo/#{z}/{lat}/{lon} (debug url to use for displaying tiles with {z} {lat} {lon} placeholders)
0:00:00 DEB - argument: tile_weights=data/tile_weights.tsv.gz (tsv.gz file with columns z,x,y,loads to generate weighted average tile size stat)
0:00:00 DEB - argument: max_point_buffer=Infinity (Max tile pixels to include points outside tile bounds. Set to a lower value to reduce tile size for clients that handle label collisions across tiles (most web and native clients). NOTE: Do not reduce if you need to support raster tile rendering)
0:00:00 DEB - argument: log_jts_exceptions=false (Emit verbose details to debug JTS geometry errors)
0:00:00 DEB - argument: only_download=false (download source data then exit)
0:00:00 DEB - argument: download=false (download sources)
0:00:00 DEB - argument: download_osm_tile_weights=false (download OSM tile weights file)
0:00:00 DEB - argument: temp_nodes=data/tmp/node.db (temp node db location)
0:00:00 DEB - argument: temp_multipolygons=data/tmp/multipolygon.db (temp multipolygon db location)
0:00:00 DEB - argument: temp_features=data/tmp/feature.db (temp feature db location)
0:00:00 DEB - argument: osm_parse_node_bounds=false (parse bounds from OSM nodes instead of header)
0:00:00 DEB - argument: only_fetch_wikidata=false (fetch wikidata translations then quit)
0:00:00 DEB - argument: fetch_wikidata=false (fetch wikidata translations then continue)
0:00:00 DEB - argument: use_wikidata=true (use wikidata translations)
0:00:00 DEB - argument: wikidata_cache=data/sources/wikidata_names.json (wikidata cache file)
0:00:00 DEB - argument: lake_centerlines_path=data/sources/lake_centerline.shp.zip (lake_centerlines shapefile path)
0:00:00 DEB - argument: free_lake_centerlines_after_read=false (delete lake_centerlines input file after reading to make space for output (reduces peak disk usage))
0:00:00 DEB - argument: water_polygons_path=data/sources/water-polygons-split-3857.zip (water_polygons shapefile path)
0:00:00 DEB - argument: free_water_polygons_after_read=false (delete water_polygons input file after reading to make space for output (reduces peak disk usage))
0:00:00 DEB - argument: natural_earth_path=data/sources/natural_earth_vector.sqlite.zip (natural_earth sqlite db path)
0:00:00 DEB - argument: free_natural_earth_after_read=false (delete natural_earth input file after reading to make space for output (reduces peak disk usage))
0:00:00 DEB - argument: natural_earth_keep_unzipped=false (keep unzipped natural_earth after reading)
0:00:00 DEB - argument: osm_path=data/sources/planet.osm.pbf (osm OSM input file path)
0:00:00 DEB - argument: free_osm_after_read=false (delete osm input file after reading to make space for output (reduces peak disk usage))
0:00:00 DEB - argument: output=planet.pmtiles (output tile archive path)
0:00:00 DEB - argument: version=false (show version then exit)
0:00:00 INF - Planetiler build git hash: 328e1b4d536dd7da38a192e56f4014a18c23a63b
0:00:00 INF - Planetiler build version: 0.7-SNAPSHOT
0:00:00 INF - Planetiler build timestamp: 2024-01-21T12:08:38.997Z
0:00:00 DEB - argument: transliterate=true (attempt to transliterate latin names)
0:00:00 DEB - argument: languages=am,ar,az,be,bg,bn,br,bs,ca,co,cs,cy,da,de,el,en,eo,es,et,eu,fa,fi,fr,fy,ga,gd,he,hi,hr,hu,hy,id,is,it,ja,ja_kana,ja_rm,ja-Latn,ja-Hira,ka,kk,kn,ko,ko-Latn,ku,la,lb,lt,lv,mk,mt,ml,nl,no,oc,pa,pnb,pl,pt,rm,ro,ru,sk,sl,sq,sr,sr-Latn,sv,ta,te,th,tr,uk,ur,vi,zh,zh-Hant,zh-Hans (languages to use)
0:00:00 DEB - argument: only_layers= (Include only certain layers)
0:00:00 DEB - argument: exclude_layers= (Exclude certain layers)
0:00:00 DEB - argument: boundary_country_names=true (boundary layer: add left/right codes of neighboring countries)
0:00:00 DEB - argument: boundary_osm_only=false (boundary layer: only use OSM, even at low zoom levels)
0:00:00 DEB - argument: transportation_z13_paths=false (transportation(_name) layer: show all paths on z13)
0:00:00 DEB - argument: building_merge_z13=true (building layer: merge nearby buildings at z13)
0:00:00 DEB - argument: transportation_name_brunnel=false (transportation_name layer: set to false to omit brunnel and help merge long highways)
0:00:00 DEB - argument: transportation_name_size_for_shield=false (transportation_name layer: allow road names on shorter segments (ie. they will have a shield))
0:00:00 DEB - argument: transportation_name_limit_merge=false (transportation_name layer: limit merge so we don't combine different relations to help merge long highways)
0:00:00 DEB - argument: transportation_name_minor_refs=false (transportation_name layer: include name and refs from minor road networks if not present on a way)
0:00:00 DEB - argument: help=false (show arguments then exit)
0:00:00 DEB - argument: layer_stats=/data/planet.pmtiles.layerstats.tsv.gz (layer stats output path)
0:00:00 INF - Building OpenMapTilesProfile profile into file:///data/planet.pmtiles in these phases:
0:00:00 INF -   lake_centerlines: Process features in data/sources/lake_centerline.shp.zip
0:00:00 INF -   water_polygons: Process features in data/sources/water-polygons-split-3857.zip
0:00:00 INF -   natural_earth: Process features in data/sources/natural_earth_vector.sqlite.zip
0:00:00 INF -   osm_pass1: Pre-process OpenStreetMap input (store node locations then relation members)
0:00:00 INF -   osm_pass2: Process OpenStreetMap nodes, ways, then relations
0:00:00 INF -   sort: Sort rendered features by tile ID
0:00:00 INF -   archive: Encode each tile and write to TileArchiveConfig[format=PMTILES, scheme=FILE, uri=file:///data/planet.pmtiles, options={}]
0:00:00 INF - no wikidata translations found, run with --fetch-wikidata to download
0:00:00 DEB - ✓ 260G storage on /data (tmpfs) requested for read phase disk, 457G available
0:00:00 DEB -  - 260G used for temporary feature storage
0:00:00 DEB - ✓ 390G storage on /data (tmpfs) requested for write phase disk, 457G available
0:00:00 DEB -  - 260G used for temporary feature storage
0:00:00 DEB -  - 130G used for archive output
0:00:00 DEB - ✓ 124G JVM heap requested for read phase, 214G available
0:00:00 DEB -  - 88G used for array node location cache (switch to sparsearray to reduce size)
0:00:00 DEB -  - 11G used for multipolygon way geometries
0:00:00 DEB -  - 23G used for temporary profile storage
0:00:00 DEB - ✓ 0 temporary files and 545G of free memory for OS to cache them
0:00:00 DEB - argument: archive_name=OpenMapTiles ('name' attribute for tileset metadata)
0:00:00 DEB - argument: archive_description=A tileset showcasing all layers in OpenMapTiles. https://openmaptiles.org ('description' attribute for tileset metadata)
0:00:00 DEB - argument: archive_attribution=<a href="https://www.openmaptiles.org/" target="_blank">&copy; OpenMapTiles</a> <a href="https://www.openstreetmap.org/copyright" target="_blank">&copy; OpenStreetMap contributors</a> ('attribution' attribute for tileset metadata)
0:00:00 DEB - argument: archive_version=3.14.0 ('version' attribute for tileset metadata)
0:00:00 DEB - argument: archive_type=baselayer ('type' attribute for tileset metadata)
0:00:00 DEB - argument: archive_format=pbf ('format' attribute for tileset metadata)
0:00:00 INF - Using merge sort feature map, chunk size=2000mb max workers=180
0:00:00 INF [lake_centerlines] - 
0:00:00 INF [lake_centerlines] - Starting...
0:00:02 INF [lake_centerlines] -  read: [  59k 100%  34k/s ] write: [    0    0/s ] 0    
    cpus: 2.2 gc:  2% heap: 179M/214G direct: 262k postGC: 211M
    ->     (0/4) -> read( -%  -%) ->  (0/1.1k) -> processk) -> write( -%  -%  -%  -%  -%  -%)
0:00:02 INF [lake_centerlines] - Finished in 3s cpu:9s avg:3.5
0:00:02 INF [lake_centerlines] -   read     2x(17% 0.4s done:2s)
0:00:02 INF [lake_centerlines] -   process 174x(0% 0s wait:2s)
0:00:02 INF [lake_centerlines] -   write    6x(0% 0s wait:2s)
0:00:02 INF [water_polygons] - 
0:00:02 INF [water_polygons] - Starting...
0:00:13 INF [water_polygons] -  read: [ 5.6k  39%  566/s ] write: [  32M 3.2M/s ] 12G  
    cpus: 90.8 gc:  6% heap: 4.6G/214G direct: 54M postGC: 3.8G
    ->     (0/4) -> read(93%) ->  (0/1.1k) -> process(49% 48% 48% 33% 46% 42% 68% 23% 29% 63% 56% 38% 55% 55% 37% 44% 35% 37% 47% 53% 73% 73% 25% 55% 28% 50% 48% 37% 38% 49% 65% 50% 35% 61% 31% 58% 32% 48% 70% 45% 48% 61% 56% 66% 27% 30% 61% 50% 37% 27% 77% 46% 32% 54% 54% 43% 53% 65% 46% 37% 44% 68% 40% 56% 43% 41% 49% 32% 39% 75% 41% 54% 41% 51% 48% 53% 30% 36% 61% 37% 40% 27% 49% 41% 37% 39% 41% 60% 65% 70% 85% 42% 30% 43% 41% 51% 84% 29% 64% 45% 58% 65% 45% 47% 53% 28% 66% 63% 42% 33% 49% 56% 42% 23% 80% 28% 53% 68% 34% 50% 48% 52% 34% 59% 44% 28% 39% 52% 57% 63% 41% 40% 41% 62% 61% 41% 49% 42% 58% 41% 47% 34% 50% 46% 44% 39% 46% 40% 50% 34% 74% 50% 72% 51% 42% 39% 26% 41% 35% 34% 61% 24% 44% 65% 48% 46% 46% 66% 42% 59% 86% 39% 32% 40%) -> (143k/230k) -> write(28% 28% 28% 28% 28% 27%)
0:00:23 INF [water_polygons] -  read: [  10k  70%  441/s ] write: [ 120M 8.6M/s ] 15G  
    cpus: 29.4 gc:  1% heap: 5.8G/214G direct: 54M postGC: 1.8G
    ->     (0/4) -> read(11%) -> (1k/1.1k) -> process( 6% 52% 10%  6%  7%  6%  4%  4%  6% 21% 25%  5%  5% 15% 12% 25% 14%  4% 10%  3%  4% 16% 38%  9%  4%  8% 10%  7%  5% 10%  9%  5% 11% 10% 13%  5%  8%  9% 10%  4%  6%  5% 10% 28%  8% 20%  7% 15%  8%  6% 16% 51%  5% 30% 13% 13%  6%  5% 16%  4% 20%  7% 15%  4% 12%  6%  7% 20%  5%  6%  6%  4%  5%  3%  9%  4%  7% 14%  7%  9%  5%  3% 11%  6%  9%  6% 16% 10% 13% 11% 31%  4% 17%  5% 15%  4% 17%  5%  4% 29% 12%  7%  6% 26%  8% 18%  4% 15% 33%  4% 15% 18%  4% 27% 60%  5% 18% 11%  6%  9%  5%  8% 18%  7% 10%  5%  3% 60%  8% 10%  8% 11%  9% 18%  8% 89%  8% 15%  6%  4%  5%  5%  4%  5%  4%  6%  6% 13% 47% 24%  5% 22% 29%  6%  5% 11%  6%  5%  8% 11% 12%  6% 39%  5% 11%  4% 15% 30% 48% 40% 20% 13% 20% 49%) -> (226k/230k) -> write(91% 91% 91% 91% 91% 91%)
0:00:33 INF [water_polygons] -  read: [  13k  95%  369/s ] write: [ 205M 8.4M/s ] 17G  
    cpus: 9.6 gc:  0% heap: 30G/214G direct: 54M postGC: 1.7G
    ->     (0/4) -> read( -%) -> (665/1.1k) -> process( 2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  3%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  3%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2% 10%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%  3%  2%  2%  2%  2%  2%  2%  2%  2%  2%  2%) -> (225k/230k) -> write(100% 100% 100% 100% 100% 100%)
0:00:35 INF [water_polygons] -  read: [  14k 100%  294/s ] write: [ 222M 7.7M/s ] 10G  
    cpus: 9 gc:  0% heap: 7.5G/214G direct: 54M postGC: 1.7G
    ->     (0/4) -> read( -%) ->  (0/1.1k) -> processk) -> write( -%  -%  -%  -%  -%  -%)
0:00:35 INF [water_polygons] - Finished in 32s cpu:22m5s avg:40.9
0:00:35 INF [water_polygons] -   read     2x(16% 5s wait:9s done:18s)
0:00:35 INF [water_polygons] -   process 174x(20% 6s wait:25s)
0:00:35 INF [water_polygons] -   write    6x(74% 24s wait:8s)
0:00:35 INF [natural_earth] - 
0:00:35 INF [natural_earth] - Starting...
0:00:35 INF [natural_earth] - unzipping /data/data/sources/natural_earth_vector.sqlite.zip to data/tmp/%2Fnatural_earth_vector.sqlite%2Fpackages%2Fnatural_earth_vector.sqlite
0:00:38 INF [natural_earth] - unzipping /data/data/sources/natural_earth_vector.sqlite.zip to data/tmp/%2Fnatural_earth_vector.sqlite%2Fpackages%2Fnatural_earth_vector.sqlite
0:00:48 INF [natural_earth] -  read: [ 304k  87%  30k/s ] write: [    0    0/s ] 22G  
    cpus: 2 gc:  0% heap: 14G/214G direct: 54M postGC: 1.7G
    ->     (0/4) -> read(63%) ->  (1/1.1k) -> process( 0%  1%  0%  0%  0%  1%  0%  0%  1%  0%  0%  0%  1%  1%  0%  1%  0%  1%  0%  0%  1%  0%  0%  1%  1%  1%  1%  0%  1%  1%  1%  0%  1%  0%  1%  0%  0%  0%  1%  0%  0%  1%  1%  0%  1%  0%  0%  0%  0%  1%  1%  0%  0%  1%  0%  1%  1%  1%  1%  0%  1%  1%  1%  0%  1%  0%  1%  9%  1%  1%  1%  1%  1%  1%  0%  0%  0%  0%  0%  0%  0%  1%  0%  0%  1%  0%  1%  0%  1%  1%  1%  0%  0%  0%  0%  1%  1%  1%  0%  0%  1%  0%  0%  1%  1%  1%  0%  0%  1%  0%  1%  0%  1%  1%  1%  0%  0%  0%  0%  1%  1%  1%  0%  0%  1%  1%  1%  0%  1%  1%  1%  1%  1%  1%  1%  1%  1%  1%  0%  1%  1%  1%  1%  1%  1%  1%  0%  1%  1%  1%  0%  0%  0%  0%  1%  0%  1%  0%  1%  0%  0%  0%  0%  1%  0%  0%  1%  1%  0%  1%  0%  0%  0%  0%) -> (27k/230k) -> write( 0%  0%  0%  0%  0%  0%)
0:00:49 INF [natural_earth] -  read: [ 349k 100%  36k/s ] write: [  33k  26k/s ] 10G  
    cpus: 1.6 gc:  0% heap: 15G/214G direct: 54M postGC: 1.7G
    ->     (0/4) -> read( -%) ->  (0/1.1k) -> processk) -> write( -%  -%  -%  -%  -%  -%)
0:00:49 INF [natural_earth] - Finished in 14s cpu:25s avg:1.7
0:00:49 INF [natural_earth] -   read     2x(24% 3s wait:2s done:9s)
0:00:49 INF [natural_earth] -   process 174x(0% 0.1s wait:11s done:3s)
0:00:49 INF [natural_earth] -   write    6x(0% 0s wait:11s done:3s)
0:00:49 INF [osm_pass1] - 
0:00:49 INF [osm_pass1] - Starting...
0:00:59 INF [osm_pass1] -  nodes: [ 2.2B 227M/s ] 24G   ways: [    0    0/s ] rels: [    0    0/s ] blocks: [ 9.1k  907/s ]
    cpus: 104.4 gc:  9% heap: 31G/214G direct: 57M postGC: 28G hppc:   1k
    read(76%) ->   (0/538) -> process(55% 54% 53% 54% 55% 50% 54% 53% 52% 54% 52% 52% 56% 57% 53% 52% 50% 52% 53% 49% 48% 55% 55% 52% 53% 49% 48% 52% 52% 52% 54% 54% 54% 53% 57% 52% 54% 52% 52% 51% 50% 49% 51% 54% 50% 53% 52% 56% 53% 52% 52% 54% 53% 53% 50% 52% 58% 54% 53% 50% 51% 53% 53% 55% 53% 52% 51% 54% 53% 52% 55% 54% 50% 53% 52% 52% 53% 53% 52% 52% 54% 54% 56% 54% 50% 53% 55% 58% 49% 54% 52% 55% 51% 52% 55% 52% 53% 52% 53% 55% 53% 53% 55% 54% 51% 52% 54% 54% 56% 56% 53% 52% 54% 54% 54% 54% 52% 51% 51% 53% 51% 50% 53% 60% 50% 55% 52% 52% 53% 51% 54% 54% 53% 53% 52% 49% 50% 52% 53% 55% 52% 54% 54% 52% 52% 51% 55% 48% 55% 52% 50% 54% 53% 52% 51% 55% 52% 53% 53% 55% 53% 53% 50% 51% 54% 51% 53% 52% 54% 52% 48% 54% 53% 56% 50% 50% 52% 53% 55%)
0:01:09 INF [osm_pass1] -  nodes: [ 5.5B 322M/s ] 57G   ways: [    0    0/s ] rels: [    0    0/s ] blocks: [  18k  936/s ]
    cpus: 100.9 gc: 12% heap: 111G/214G direct: 57M postGC: 60G hppc:   1k
    read(88%) ->   (0/538) -> process(48% 50% 49% 51% 48% 48% 49% 49% 47% 51% 50% 48% 51% 52% 49% 46% 49% 48% 49% 50% 49% 48% 49% 51% 49% 48% 50% 51% 50% 50% 51% 51% 45% 48% 51% 50% 49% 48% 50% 48% 46% 51% 48% 52% 45% 49% 47% 51% 49% 54% 49% 49% 48% 48% 47% 45% 48% 51% 51% 45% 47% 46% 51% 50% 54% 47% 47% 49% 50% 49% 49% 51% 50% 49% 50% 50% 48% 52% 52% 49% 48% 48% 47% 50% 50% 48% 49% 50% 46% 50% 48% 50% 49% 49% 51% 50% 48% 45% 48% 47% 49% 50% 49% 46% 49% 51% 50% 46% 49% 50% 50% 47% 51% 50% 48% 50% 46% 50% 49% 50% 47% 50% 52% 50% 49% 49% 49% 49% 50% 48% 49% 50% 51% 48% 49% 50% 48% 49% 50% 46% 50% 49% 50% 48% 51% 47% 48% 47% 50% 53% 50% 49% 49% 50% 50% 48% 49% 47% 50% 50% 48% 47% 51% 49% 49% 52% 50% 49% 48% 52% 50% 49% 50% 51% 49% 50% 47% 48% 51%)
0:01:19 INF [osm_pass1] -  nodes: [ 8.8B 331M/s ] 90G   ways: [    0    0/s ] rels: [    0    0/s ] blocks: [  27k  930/s ]
    cpus: 109.7 gc: 13% heap: 103G/214G direct: 57M postGC: 96G hppc:   1k
    read(85%) -> (277/538) -> process(53% 53% 55% 54% 50% 53% 51% 50% 53% 53% 48% 47% 51% 50% 51% 55% 51% 52% 50% 53% 50% 50% 56% 52% 50% 52% 49% 52% 48% 52% 53% 52% 49% 54% 54% 50% 49% 51% 51% 51% 47% 48% 50% 50% 52% 52% 50% 47% 49% 53% 52% 51% 50% 48% 49% 55% 49% 49% 53% 51% 48% 48% 51% 48% 50% 50% 50% 50% 49% 48% 53% 52% 52% 49% 52% 52% 51% 52% 51% 50% 51% 51% 53% 52% 52% 50% 52% 52% 50% 48% 53% 49% 49% 52% 49% 50% 51% 51% 51% 50% 48% 49% 50% 51% 48% 33% 51% 52% 52% 52% 52% 50% 55% 50% 49% 49% 49% 49% 51% 52% 52% 53% 51% 53% 52% 53% 54% 53% 51% 52% 52% 52% 51% 54% 54% 50% 52% 46% 38% 47% 52% 51% 51% 54% 51% 52% 50% 54% 51% 52% 48% 53% 54% 49% 49% 40% 55% 50% 51% 53% 49% 51% 51% 48% 46% 52% 50% 54% 54% 51% 52% 50% 52% 49% 51% 51% 53% 39% 49%)
0:01:20 INF [osm_pass1:process] - Finished nodes: 8,876,780,887 (295M/s) in 30s cpu:52m26s gc:3s avg:104.9
0:01:30 INF [osm_pass1] -  nodes: [ 8.8B   4M/s ] 92G   ways: [ 644M  64M/s ] rels: [    0    0/s ] blocks: [  37k   1k/s ]
    cpus: 138.6 gc:  5% heap: 162G/214G direct: 58M postGC: 105G hppc:   1k
    read(85%) ->   (3/538) -> process(71% 70% 68% 72% 67% 71% 69% 67% 71% 69% 68% 69% 68% 66% 67% 72% 72% 64% 69% 72% 69% 67% 71% 70% 66% 67% 69% 69% 68% 70% 72% 70% 71% 70% 67% 72% 71% 68% 65% 70% 70% 70% 72% 70% 71% 69% 67% 69% 70% 68% 70% 66% 73% 70% 69% 71% 70% 67% 68% 72% 63% 70% 69% 71% 70% 68% 72% 68% 65% 67% 69% 68% 71% 67% 70% 67% 74% 69% 72% 71% 69% 67% 66% 68% 69% 73% 66% 67% 65% 66% 73% 71% 68% 69% 68% 68% 67% 71% 73% 73% 68% 68% 69% 67% 69% 67% 71% 70% 66% 68% 71% 72% 70% 66% 66% 69% 68% 71% 69% 72% 67% 70% 70% 73% 67% 68% 68% 69% 69% 67% 71% 67% 68% 73% 67% 72% 69% 70% 65% 72% 68% 68% 71% 68% 66% 69% 71% 66% 66% 70% 69% 69% 68% 67% 71% 67% 71% 70% 65% 69% 70% 68% 68% 70% 70% 66% 70% 70% 68% 71% 70% 69% 69% 72% 69% 69% 68% 68% 71%)
0:01:34 INF [osm_pass1:process] - Finished ways: 993,607,585 (69M/s) in 14s cpu:33m25s avg:139.5
0:01:40 INF [osm_pass1] -  nodes: [ 8.8B    0/s ] 92G   ways: [ 993M  34M/s ] rels: [ 4.4M 440k/s ] blocks: [  42k  495/s ]
    cpus: 76.1 gc:  5% heap: 105G/214G direct: 54M postGC: 100G hppc: 321M
    read( -%) -> (129/538) -> process(37% 36% 39% 38% 38% 38% 37% 37% 37% 38% 36% 36% 34% 37% 41% 37% 37% 39% 36% 39% 36% 37% 39% 36% 36% 37% 36% 36% 38% 37% 40% 37% 36% 37% 40% 37% 37% 35% 37% 39% 36% 37% 35% 38% 38% 39% 37% 38% 37% 36% 39% 37% 39% 38% 37% 36% 38% 37% 38% 38% 38% 36% 37% 36% 38% 36% 35% 38% 37% 38% 38% 39% 38% 39% 37% 36% 38% 37% 35% 36% 38% 37% 36% 38% 37% 37% 36% 38% 39% 39% 38% 39% 39% 36% 36% 37% 37% 36% 39% 37% 40% 38% 39% 39% 38% 39% 38% 35% 38% 37% 36% 36% 37% 38% 37% 37% 35% 38% 36% 37% 35% 36% 37% 34% 36% 39% 39% 38% 36% 36% 39% 35% 37% 38% 38% 37% 36% 36% 41% 37% 38% 39% 39% 37% 38% 39% 36% 40% 38% 35% 36% 36% 37% 36% 39% 40% 36% 37% 38% 40% 37% 37% 40% 38% 36% 38% 39% 36% 36% 34% 40% 37% 36% 35% 37% 37% 40% 38% 36%)
0:01:47 INF [osm_pass1:process] - Finished relations: 11,749,466 (887k/s) in 13s cpu:4m16s avg:19.3
0:01:47 INF [osm_pass1] -  nodes: [ 8.8B    0/s ] 92G   ways: [ 993M    0/s ] rels: [  11M 955k/s ] blocks: [  43k   40/s ]
    cpus: 16.4 gc:  7% heap: 104G/214G direct: 54M postGC: 101G hppc: 708M
    read( -%) ->   (0/538) -> process
0:01:47 DEB [osm_pass1] - Processed 43,182 blocks:
0:01:47 DEB [osm_pass1] -   nodes: 8,876,780,887 (295M/s) in 30s cpu:52m26s gc:3s avg:104.9
0:01:47 DEB [osm_pass1] -   ways: 993,607,585 (69M/s) in 14s cpu:33m25s avg:139.5
0:01:47 DEB [osm_pass1] -   relations: 11,749,466 (887k/s) in 13s cpu:4m16s avg:19.3
0:01:47 INF [osm_pass1] - Finished in 58s cpu:1h30m37s gc:5s avg:94
0:01:47 INF [osm_pass1] -   read     1x(65% 38s wait:2s done:13s)
0:01:47 INF [osm_pass1] -   process 179x(45% 26s block:16s wait:11s done:1s)
0:01:47 INF [osm_pass2] - 
0:01:47 INF [osm_pass2] - Starting...
0:01:58 INF [osm_pass2] -  nodes: [ 785M   9%  78M/s ] 92G   ways: [    0   0%    0/s ] rels: [    0   0%    0/s ] features: [ 280M 5.7M/s ] 22G   blocks: [ 3.5k   8%  349/s ]
    cpus: 94.8 gc: 10% heap: 151G/214G direct: 57M postGC: 103G relInfo: 708M mpGeoms: 297  
    read(36%) ->  (28/262) -> process(49% 45% 43% 49% 54% 53% 53% 59% 44% 45% 58% 50% 58% 49% 56% 54% 47% 48% 49% 51% 40% 45% 48% 46% 41% 42% 45% 41% 58% 45% 50% 48% 46% 46% 42% 53% 53% 47% 50% 51% 63% 46% 46% 56% 50% 52% 52% 48% 49% 44% 42% 44% 46% 49% 50% 47% 52% 47% 49% 48% 48% 49% 45% 44% 47% 43% 48% 49% 44% 47% 47% 50% 45% 45% 42% 45% 45% 49% 50% 44% 45% 46% 49% 49% 43% 48% 53% 50% 42% 45% 48% 49% 42% 48% 43% 46% 51% 47% 43% 45% 46% 45% 47% 45% 51% 44% 49% 40% 50% 52% 51% 45% 49% 44% 60% 49% 46% 46% 49% 45% 45% 43% 44% 43% 52% 43% 45% 51% 49% 50% 46% 45% 48% 49% 43% 44% 46% 43% 51% 40% 50% 51% 47% 44% 48% 32% 48% 48% 50% 40% 42% 40% 42% 49% 48% 54% 45% 50% 45% 50% 46% 51% 43% 43% 46% 49% 42% 48% 42% 42% 46% 50% 46% 48%) -> (88k/230k) -> write(41% 42% 42% 42% 42% 42%)
0:02:11 INF [osm_pass2] -  nodes: [ 2.2B  26% 141M/s ] 92G   ways: [    0   0%    0/s ] rels: [    0   0%    0/s ] features: [ 351M 6.6M/s ] 30G   blocks: [ 9.2k  21%  523/s ]
    cpus: 122.2 gc: 10% heap: 143G/214G direct: 57M postGC: 101G relInfo: 708M mpGeoms: 297  
    read(63%) ->  (49/262) -> process(64% 70% 57% 64% 65% 61% 59% 57% 67% 64% 72% 64% 64% 60% 57% 61% 69% 60% 57% 70% 58% 64% 73% 68% 58% 62% 65% 63% 71% 60% 55% 62% 66% 55% 58% 69% 55% 65% 61% 63% 70% 58% 64% 71% 63% 65% 39% 65% 51% 66% 66% 64% 60% 55% 62% 53% 64% 62% 69% 63% 56% 64% 63% 61% 60% 62% 61% 64% 62% 63% 59% 59% 64% 60% 67% 62% 61% 61% 61% 64% 70% 64% 57% 62% 64% 63% 61% 60% 62% 67% 55% 64% 60% 62% 53% 66% 58% 59% 58% 60% 63% 60% 61% 62% 66% 70% 54% 64% 64% 63% 66% 65% 60% 65% 48% 55% 68% 53% 72% 68% 60% 57% 62% 63% 62% 66% 63% 62% 66% 63% 58% 64% 57% 68% 67% 53% 54% 60% 70% 61% 56% 63% 63% 67% 53% 55% 60% 60% 60% 65% 51% 60% 62% 68% 58% 64% 53% 63% 61% 64% 61% 69% 60% 56% 70% 67% 69% 65% 66% 66% 62% 65% 70% 60%) -> (107k/230k) -> write(71% 71% 70% 70% 71% 70%)
0:02:23 INF [osm_pass2] -  nodes: [ 4.6B  52% 171M/s ] 92G   ways: [    0   0%    0/s ] rels: [    0   0%    0/s ] features: [ 425M 5.5M/s ] 38G   blocks: [  16k  37%  505/s ]
    cpus: 124.9 gc:  4% heap: 176G/214G direct: 57M postGC: 100G relInfo: 708M mpGeoms: 297  
    read(76%) ->  (87/262) -> process(64% 63% 65% 60% 60% 71% 73% 58% 62% 59% 58% 56% 68% 62% 63% 61% 60% 61% 73% 62% 71% 56% 54% 54% 61% 65% 56% 57% 65% 71% 74% 58% 63% 63% 63% 53% 64% 67% 66% 67% 51% 57% 61% 60% 57% 64% 65% 69% 58% 66% 65% 66% 63% 68% 63% 69% 53% 69% 59% 56% 67% 66% 63% 58% 61% 50% 65% 71% 75% 62% 59% 67% 71% 66% 64% 66% 61% 61% 63% 48% 72% 57% 59% 58% 66% 62% 62% 67% 68% 63% 62% 64% 57% 69% 64% 61% 72% 57% 57% 60% 56% 57% 69% 61% 60% 62% 64% 66% 67% 63% 69% 60% 59% 57% 67% 66% 58% 68% 61% 56% 63% 68% 61% 59% 59% 62% 64% 61% 49% 68% 65% 64% 63% 60% 61% 69% 65% 58% 64% 63% 64% 59% 58% 66% 70% 63% 60% 59% 65% 59% 66% 69% 66% 61% 61% 60% 62% 68% 60% 66% 65% 65% 59% 61% 68% 63% 61% 58% 65% 65% 62% 64% 72% 67%) -> (90k/230k) -> write(62% 61% 63% 61% 62% 62%)
0:02:34 INF [osm_pass2] -  nodes: [ 6.6B  75% 176M/s ] 92G   ways: [    0   0%    0/s ] rels: [    0   0%    0/s ] features: [ 484M   5M/s ] 46G   blocks: [  21k  50%  497/s ]
    cpus: 148.6 gc:  4% heap: 185G/214G direct: 57M postGC: 100G relInfo: 708M mpGeoms: 297  
    read(82%) ->  (77/262) -> process(77% 76% 86% 78% 78% 83% 84% 74% 75% 74% 75% 77% 79% 75% 75% 78% 79% 81% 75% 78% 74% 81% 74% 80% 79% 75% 78% 83% 77% 73% 80% 80% 74% 78% 71% 72% 70% 74% 79% 79% 69% 85% 89% 68% 83% 74% 79% 63% 79% 80% 76% 74% 69% 80% 78% 73% 76% 74% 72% 75% 72% 71% 85% 81% 75% 73% 77% 77% 74% 71% 80% 71% 74% 74% 72% 81% 69% 72% 83% 77% 61% 72% 71% 81% 84% 80% 80% 80% 74% 76% 78% 78% 70% 74% 79% 79% 73% 73% 86% 71% 70% 76% 73% 78% 72% 77% 80% 72% 74% 77% 77% 71% 84% 81% 84% 73% 76% 77% 79% 78% 79% 80% 74% 86% 78% 77% 78% 80% 75% 76% 72% 73% 76% 74% 82% 78% 77% 84% 79% 82% 83% 79% 81% 77% 82% 75% 80% 83% 79% 78% 80% 78% 73% 75% 79% 78% 77% 75% 79% 78% 73% 86% 72% 76% 72% 71% 79% 76% 71% 71% 76% 71% 83% 77%) -> (108k/230k) -> write(70% 69% 70% 70% 69% 68%)
0:02:44 INF [osm_pass2] -  nodes: [ 8.5B  96% 174M/s ] 92G   ways: [    0   0%    0/s ] rels: [    0   0%    0/s ] features: [ 542M 5.4M/s ] 51G   blocks: [  26k  62%  488/s ]
    cpus: 152.1 gc:  3% heap: 177G/214G direct: 57M postGC: 99G relInfo: 708M mpGeoms: 297  
    read(79%) ->  (84/262) -> process(78% 85% 86% 77% 77% 76% 87% 81% 72% 73% 67% 82% 76% 78% 80% 84% 82% 81% 77% 76% 85% 81% 75% 83% 75% 79% 77% 75% 81% 82% 78% 79% 77% 75% 77% 75% 83% 68% 82% 76% 75% 80% 81% 76% 80% 85% 70% 78% 74% 70% 82% 74% 80% 81% 74% 79% 77% 80% 75% 81% 79% 82% 76% 81% 77% 82% 69% 83% 79% 80% 83% 75% 82% 78% 79% 78% 81% 68% 66% 85% 83% 80% 79% 80% 79% 82% 81% 80% 85% 68% 72% 76% 76% 70% 77% 80% 74% 76% 86% 76% 77% 71% 76% 74% 75% 85% 78% 69% 75% 77% 67% 78% 72% 73% 76% 80% 82% 71% 83% 82% 78% 71% 79% 77% 74% 76% 78% 85% 77% 67% 81% 82% 84% 75% 74% 69% 75% 83% 76% 75% 80% 77% 74% 80% 80% 82% 81% 80% 83% 75% 78% 76% 72% 77% 74% 83% 77% 77% 73% 79% 83% 80% 81% 73% 62% 79% 77% 80% 74% 76% 80% 80% 80% 78%) -> (92k/230k) -> write(73% 76% 74% 75% 74% 74%)
0:02:46 DEB [osm_pass2:process] - Sorting long long multimap...
0:02:47 INF [osm_pass2:process] - Finished nodes: 8,876,780,887 (150M/s) in 59s cpu:2h6m27s gc:4s avg:128.3
0:02:53 DEB [osm_pass2:process] - Sorted long long multimap 6s cpu:2m48s avg:26.3
0:02:54 INF [osm_pass2] -  nodes: [ 8.8B 100%  33M/s ] 92G   ways: [ 230k   0%  22k/s ] rels: [    0   0%    0/s ] features: [ 556M 1.3M/s ] 54G   blocks: [  27k  65%  104/s ]
    cpus: 55 gc:  1% heap: 114G/214G direct: 57M postGC: 103G relInfo: 573M mpGeoms: 3.1M 
    read(14%) ->  (88/262) -> process(18% 22% 24% 18% 23% 19% 23% 22% 24% 16% 22% 23% 20% 23% 19% 18% 21% 24% 23% 17% 20% 20% 20% 22% 24% 18% 18% 18% 16% 18% 24% 23% 18% 22% 26% 22% 16% 22% 23% 14% 19% 22% 24% 17% 15% 17% 19% 22% 24% 23% 23% 18% 22% 19% 25% 67% 22% 21% 22% 18% 20% 21% 20% 18% 23% 24% 23% 23% 14% 21% 22% 24% 17% 19% 22% 19% 19% 15% 18% 20% 19% 23% 21% 22% 25% 20% 19% 24% 20% 19% 22% 20% 20% 24% 22% 20% 20% 22% 20% 18% 20% 19% 22% 24% 20% 23% 18% 21% 24% 22% 22% 22% 23% 16% 20% 16% 19% 23% 15% 22% 19% 19% 24% 22% 17% 21% 21% 20% 21% 17% 18% 22% 23% 21% 23% 24% 21% 23% 23% 14% 15% 18% 17% 16% 24% 22% 19% 16% 17% 21% 23% 26% 22% 17% 20% 17% 21% 21% 18% 19% 21% 23% 22% 23% 21% 15% 21% 24% 19% 22% 19% 21% 17% 23%) -> (89k/230k) -> write(14% 14% 12% 14% 14% 14%)
0:03:05 INF [osm_pass2] -  nodes: [ 8.8B 100%    0/s ] 92G   ways: [  13M   1% 1.3M/s ] rels: [    0   0%    0/s ] features: [ 641M 8.2M/s ] 62G   blocks: [  28k  65%   21/s ]
    cpus: 93 gc:  3% heap: 104G/214G direct: 57M postGC: 101G relInfo: 573M mpGeoms: 177M 
    read( 2%) ->  (87/262) -> process(45% 45% 44% 48% 49% 49% 49% 46% 47% 37% 48% 47% 49% 47% 47% 42% 52% 48% 48% 42% 43% 45% 43% 47% 50% 43% 46% 47% 48% 43% 48% 52% 45% 49% 50% 47% 41% 51% 47% 48% 47% 47% 50% 39% 45% 33% 41% 49% 41% 48% 44% 48% 48% 45% 46% 37% 46% 44% 40% 47% 47% 47% 45% 46% 48% 46% 47% 47% 47% 49% 47% 49% 39% 41% 50% 48% 50% 43% 41% 47% 50% 46% 49% 50% 44% 43% 43% 46% 48% 46% 47% 46% 46% 50% 47% 44% 44% 49% 48% 46% 45% 48% 44% 49% 40% 49% 51% 45% 48% 46% 48% 43% 44% 38% 48% 49% 42% 50% 41% 47% 48% 45% 48% 50% 46% 49% 51% 49% 46% 48% 49% 49% 48% 52% 48% 46% 49% 50% 45% 47% 45% 48% 45% 39% 48% 48% 49% 47% 46% 51% 45% 46% 49% 45% 43% 41% 46% 49% 40% 48% 49% 52% 49% 47% 48% 37% 47% 46% 46% 48% 47% 48% 45% 49%) -> (176k/230k) -> write(77% 76% 76% 77% 77% 77%)
0:03:15 INF [osm_pass2] -  nodes: [ 8.8B 100%    0/s ] 92G   ways: [  31M   3% 1.6M/s ] rels: [    0   0%    0/s ] features: [ 726M 8.1M/s ] 69G   blocks: [  28k  66%   37/s ]
    cpus: 131.4 gc:  7% heap: 103G/214G direct: 58M postGC: 102G relInfo: 573M mpGeoms: 621M 
    read( 5%) ->  (87/262) -> process(68% 66% 61% 67% 69% 65% 63% 67% 65% 67% 71% 66% 66% 76% 60% 66% 63% 70% 69% 62% 68% 62% 63% 67% 64% 71% 67% 66% 62% 69% 60% 63% 66% 66% 68% 73% 63% 66% 65% 65% 68% 61% 64% 66% 62% 65% 66% 66% 67% 66% 61% 66% 67% 65% 61% 64% 63% 61% 62% 66% 68% 64% 69% 67% 67% 69% 66% 72% 68% 64% 63% 62% 69% 68% 64% 73% 65% 68% 66% 67% 67% 68% 64% 64% 74% 64% 66% 63% 64% 62% 61% 65% 65% 68% 65% 66% 70% 62% 69% 64% 67% 65% 64% 66% 66% 71% 64% 64% 64% 66% 73% 75% 66% 65% 67% 68% 65% 68% 64% 71% 66% 64% 69% 66% 64% 65% 70% 65% 74% 64% 67% 64% 68% 64% 66% 67% 68% 64% 65% 66% 72% 73% 61% 62% 67% 65% 66% 67% 66% 65% 67% 65% 73% 67% 70% 68% 68% 65% 72% 66% 62% 66% 61% 63% 69% 71% 65% 69% 64% 74% 64% 69% 73% 66%) -> (134k/230k) -> write(85% 85% 86% 85% 84% 85%)
0:03:26 INF [osm_pass2] -  nodes: [ 8.8B 100%    0/s ] 92G   ways: [  53M   5%   2M/s ] rels: [    0   0%    0/s ] features: [ 793M 6.4M/s ] 74G   blocks: [  29k  67%   39/s ]
    cpus: 157.7 gc:  6% heap: 195G/214G direct: 58M postGC: 139G relInfo: 573M mpGeoms: 909M 
    read(10%) ->  (88/262) -> process(78% 85% 84% 80% 81% 78% 79% 74% 82% 81% 80% 85% 81% 87% 80% 83% 79% 80% 81% 82% 80% 75% 77% 78% 84% 77% 78% 80% 77% 80% 82% 81% 79% 76% 83% 85% 76% 80% 85% 79% 79% 79% 82% 80% 84% 82% 84% 78% 83% 79% 81% 79% 79% 76% 81% 73% 79% 75% 82% 84% 82% 80% 87% 80% 80% 77% 78% 85% 79% 81% 80% 81% 81% 80% 78% 87% 80% 80% 76% 82% 79% 79% 83% 79% 87% 78% 79% 78% 80% 76% 81% 78% 84% 81% 82% 84% 82% 82% 84% 85% 77% 81% 83% 83% 81% 86% 83% 78% 77% 81% 81% 71% 79% 80% 83% 76% 79% 76% 80% 84% 83% 79% 80% 75% 81% 77% 76% 76% 89% 79% 81% 81% 87% 79% 79% 76% 78% 72% 83% 83% 85% 81% 73% 84% 84% 79% 81% 83% 79% 80% 82% 83% 73% 82% 84% 84% 80% 79% 84% 80% 77% 80% 80% 81% 81% 81% 81% 78% 81% 88% 77% 80% 82% 80%) -> (85k/230k) -> write(84% 85% 85% 86% 84% 85%)
0:03:37 INF [osm_pass2] -  nodes: [ 8.8B 100%    0/s ] 92G   ways: [  74M   7% 1.9M/s ] rels: [    0   0%    0/s ] features: [ 860M 6.3M/s ] 78G   blocks: [  29k  68%   36/s ]
    cpus: 157.5 gc:  6% heap: 147G/214G direct: 58M postGC: 102G relInfo: 573M mpGeoms: 1.2G 
    read( 8%) ->  (88/262) -> process(80% 81% 86% 85% 80% 81% 84% 84% 83% 81% 81% 79% 84% 76% 81% 84% 83% 83% 80% 83% 81% 82% 82% 83% 82% 84% 83% 83% 87% 80% 83% 86% 72% 82% 84% 85% 76% 86% 83% 77% 84% 79% 83% 83% 75% 76% 83% 77% 84% 86% 84% 84% 82% 81% 87% 83% 80% 85% 81% 81% 82% 76% 81% 83% 82% 84% 77% 84% 84% 79% 87% 82% 85% 83% 81% 78% 80% 85% 80% 83% 79% 78% 82% 82% 77% 82% 74% 86% 82% 85% 82% 80% 87% 81% 83% 85% 84% 83% 76% 77% 85% 75% 85% 79% 84% 87% 78% 83% 82% 79% 83% 84% 82% 81% 81% 78% 77% 83% 83% 81% 81% 80% 78% 85% 81% 83% 82% 85% 80% 75% 84% 71% 74% 80% 86% 82% 79% 84% 75% 80% 80% 78% 79% 78% 81% 81% 82% 84% 85% 84% 84% 83% 77% 83% 81% 79% 85% 79% 82% 87% 81% 84% 78% 82% 80% 81% 79% 84% 82% 77% 83% 71% 79% 80%) -> (105k/230k) -> write(84% 85% 86% 86% 85% 86%)
0:03:47 INF [osm_pass2] -  nodes: [ 8.8B 100%    0/s ] 92G   ways: [  99M  10% 2.3M/s ] rels: [    0   0%    0/s ] features: [ 940M 7.3M/s ] 85G   blocks: [  29k  69%   39/s ]
    cpus: 147.7 gc:  6% heap: 191G/214G direct: 58M postGC: 102G relInfo: 573M mpGeoms: 1.5G 
    read( 7%) ->  (88/262) -> process(75% 76% 76% 75% 77% 77% 77% 75% 72% 78% 78% 78% 72% 73% 74% 79% 75% 77% 77% 76% 72% 78% 75% 76% 77% 75% 79% 74% 74% 76% 76% 77% 76% 76% 75% 79% 76% 75% 76% 79% 79% 77% 76% 75% 77% 76% 78% 75% 76% 75% 74% 75% 77% 74% 77% 76% 76% 79% 76% 76% 77% 76% 77% 77% 75% 78% 77% 75% 70% 76% 72% 75% 79% 73% 75% 77% 75% 77% 75% 77% 76% 74% 75% 77% 75% 73% 74% 76% 74% 74% 74% 77% 75% 75% 75% 78% 75% 75% 76% 76% 74% 80% 76% 77% 75% 75% 75% 79% 77% 76% 75% 76% 75% 77% 76% 74% 76% 75% 76% 73% 73% 74% 75% 75% 75% 78% 75% 76% 77% 78% 79% 77% 76% 76% 76% 78% 77% 76% 79% 78% 75% 76% 76% 74% 76% 74% 75% 77% 72% 78% 74% 76% 77% 77% 74% 76% 73% 77% 76% 75% 76% 78% 76% 74% 76% 76% 79% 76% 70% 77% 79% 75% 78% 77%) -> (151k/230k) -> write(90% 90% 89% 89% 90% 90%)
0:03:57 INF [osm_pass2] -  nodes: [ 8.8B 100%    0/s ] 92G   ways: [ 123M  12% 2.3M/s ] rels: [    0   0%    0/s ] features: [   1B 7.4M/s ] 91G   blocks: [  30k  70%   40/s ]
    cpus: 143.7 gc:  6% heap: 114G/214G direct: 58M postGC: 102G relInfo: 573M mpGeoms: 1.8G 
    read( 7%) ->  (88/262) -> process(78% 75% 73% 73% 74% 74% 73% 74% 77% 75% 76% 71% 73% 75% 72% 73% 76% 73% 71% 74% 74% 70% 73% 79% 71% 74% 75% 76% 73% 70% 77% 77% 74% 73% 72% 71% 76% 74% 74% 74% 73% 75% 73% 72% 75% 71% 71% 74% 75% 74% 75% 72% 74% 76% 77% 73% 67% 74% 74% 73% 77% 74% 75% 75% 76% 75% 73% 75% 68% 77% 73% 71% 74% 74% 73% 74% 71% 71% 73% 73% 71% 73% 74% 75% 77% 75% 75% 75% 74% 74% 74% 74% 73% 73% 75% 69% 72% 72% 76% 75% 73% 74% 76% 73% 76% 77% 73% 73% 75% 68% 73% 75% 77% 75% 74% 74% 75% 75% 76% 74% 71% 75% 75% 73% 75% 72% 75% 74% 76% 75% 74% 75% 77% 74% 74% 74% 74% 75% 71% 74% 73% 74% 73% 76% 75% 74% 73% 74% 74% 75% 71% 72% 74% 73% 71% 74% 73% 66% 74% 74% 73% 75% 74% 75% 75% 74% 70% 76% 76% 72% 75% 72% 74% 73%) -> (124k/230k) -> write(88% 88% 88% 89% 90% 88%)
0:04:07 INF [osm_pass2] -  nodes: [ 8.8B 100%    0/s ] 92G   ways: [ 146M  15% 2.2M/s ] rels: [    0   0%    0/s ] features: [   1B   7M/s ] 95G   blocks: [  30k  71%   34/s ]
    cpus: 149 gc:  6% heap: 176G/214G direct: 58M postGC: 138G relInfo: 573M mpGeoms: 2.1G 
    read( 6%) ->  (88/262) -> process(78% 76% 75% 75% 74% 76% 79% 78% 77% 74% 77% 75% 77% 78% 76% 77% 77% 78% 79% 76% 73% 77% 77% 76% 77% 78% 78% 76% 74% 74% 76% 76% 75% 76% 74% 76% 75% 77% 76% 76% 79% 78% 75% 79% 78% 76% 77% 76% 77% 72% 77% 78% 78% 74% 76% 77% 76% 79% 75% 75% 75% 72% 75% 76% 76% 76% 73% 76% 77% 78% 79% 75% 77% 76% 76% 78% 76% 78% 78% 77% 73% 75% 78% 75% 76% 79% 77% 76% 77% 77% 76% 78% 79% 74% 79% 72% 74% 77% 76% 77% 74% 75% 74% 75% 78% 74% 75% 75% 74% 76% 74% 77% 78% 77% 77% 73% 76% 79% 76% 77% 78% 74% 78% 74% 74% 75% 75% 76% 77% 77% 77% 75% 77% 78% 73% 76% 74% 76% 78% 76% 80% 74% 79% 75% 77% 75% 73% 73% 76% 77% 75% 75% 74% 79% 75% 77% 77% 78% 75% 74% 78% 78% 72% 77% 75% 77% 77% 75% 77% 75% 77% 76% 77% 75%) -> (152k/230k) -> write(87% 88% 87% 89% 87% 87%)
0:04:17 INF [osm_pass2] -  nodes: [ 8.8B 100%    0/s ] 92G   ways: [ 169M  17% 2.2M/s ] rels: [    0   0%    0/s ] features: [ 1.1B 7.1M/s ] 100G  blocks: [  30k  72%   36/s ]
    cpus: 145.3 gc:  6% heap: 153G/214G direct: 58M postGC: 103G relInfo: 573M mpGeoms: 2.3G 
    read( 7%) ->  (88/262) -> process(74% 77% 74% 76% 75% 72% 75% 74% 73% 74% 75% 71% 75% 75% 72% 74% 78% 76% 73% 76% 72% 75% 73% 74% 74% 72% 76% 71% 71% 75% 74% 75% 72% 73% 76% 73% 73% 74% 72% 74% 74% 74% 75% 73% 72% 75% 75% 76% 77% 77% 77% 74% 74% 75% 77% 75% 76% 71% 75% 78% 75% 74% 75% 73% 75% 76% 72% 73% 74% 76% 76% 77% 78% 73% 73% 75% 75% 73% 77% 76% 75% 74% 74% 74% 76% 75% 73% 72% 76% 75% 72% 73% 72% 73% 75% 71% 73% 74% 75% 76% 77% 72% 76% 72% 72% 74% 74% 74% 75% 75% 76% 73% 76% 75% 74% 74% 73% 73% 73% 76% 69% 72% 74% 74% 73% 75% 77% 76% 74% 72% 76% 73% 73% 72% 74% 77% 75% 73% 75% 73% 76% 77% 73% 72% 74% 72% 75% 74% 76% 73% 72% 73% 74% 77% 69% 75% 76% 71% 73% 74% 75% 76% 73% 74% 72% 76% 75% 75% 73% 75% 74% 75% 74% 74%) -> (155k/230k) -> write(89% 89% 90% 89% 89% 89%)
0:04:27 INF [osm_pass2] -  nodes: [ 8.8B 100%    0/s ] 92G   ways: [ 192M  19% 2.3M/s ] rels: [    0   0%    0/s ] features: [ 1.2B   7M/s ] 105G  blocks: [  31k  73%   35/s ]
    cpus: 146.1 gc:  6% heap: 138G/214G direct: 58M postGC: 103G relInfo: 573M mpGeoms: 2.6G 
    read( 6%) ->  (88/262) -> process(75% 73% 74% 76% 72% 73% 76% 73% 73% 73% 76% 74% 72% 74% 74% 78% 74% 76% 75% 74% 74% 75% 76% 77% 73% 74% 76% 72% 77% 73% 76% 74% 75% 75% 73% 78% 70% 74% 76% 78% 74% 72% 73% 74% 77% 74% 76% 75% 76% 72% 82% 76% 73% 74% 75% 74% 74% 75% 73% 77% 77% 77% 74% 73% 77% 76% 78% 73% 76% 76% 74% 76% 74% 75% 75% 75% 74% 73% 73% 75% 78% 72% 76% 73% 80% 76% 73% 76% 75% 76% 74% 72% 72% 73% 74% 74% 74% 75% 76% 75% 73% 73% 73% 73% 74% 75% 77% 73% 74% 72% 74% 75% 72% 75% 75% 74% 75% 72% 75% 72% 78% 77% 76% 73% 77% 74% 75% 74% 76% 73% 73% 74% 74% 73% 70% 76% 77% 74% 77% 76% 75% 75% 75% 77% 77% 72% 75% 74% 72% 73% 74% 73% 74% 76% 77% 75% 73% 73% 70% 74% 79% 77% 75% 71% 76% 75% 73% 77% 74% 74% 75% 72% 73% 74%) -> (163k/230k) -> write(89% 90% 90% 90% 90% 89%)
0:04:38 INF [osm_pass2] -  nodes: [ 8.8B 100%    0/s ] 92G   ways: [ 216M  22% 2.3M/s ] rels: [    0   0%    0/s ] features: [ 1.2B 6.4M/s ] 109G  blocks: [  31k  73%   39/s ]
    cpus: 152.1 gc:  7% heap: 152G/214G direct: 58M postGC: 147G relInfo: 573M mpGeoms: 2.9G 
    read( 8%) ->  (88/262) -> process(79% 78% 77% 79% 79% 75% 76% 79% 74% 79% 79% 77% 80% 75% 80% 79% 78% 79% 77% 77% 80% 81% 78% 77% 76% 76% 75% 76% 78% 76% 78% 75% 75% 77% 79% 79% 77% 78% 79% 78% 79% 76% 76% 78% 78% 76% 75% 75% 78% 77% 79% 77% 80% 80% 77% 77% 76% 78% 78% 78% 75% 75% 78% 78% 76% 82% 77% 79% 76% 79% 78% 80% 77% 78% 75% 77% 76% 77% 77% 75% 78% 76% 75% 77% 78% 78% 75% 78% 77% 75% 79% 77% 76% 77% 78% 79% 77% 74% 77% 80% 77% 77% 78% 79% 77% 78% 79% 79% 78% 79% 77% 79% 78% 78% 77% 75% 75% 74% 78% 74% 79% 79% 77% 79% 80% 77% 75% 76% 79% 75% 76% 74% 77% 77% 78% 75% 77% 78% 79% 77% 80% 76% 78% 79% 78% 79% 76% 77% 77% 79% 81% 78% 76% 79% 78% 77% 78% 78% 75% 78% 78% 75% 78% 76% 78% 79% 77% 78% 77% 77% 75% 76% 78% 78%) -> (146k/230k) -> write(87% 87% 86% 88% 86% 88%)
0:04:48 INF [osm_pass2] -  nodes: [ 8.8B 100%    0/s ] 92G   ways: [ 240M  24% 2.3M/s ] rels: [    0   0%    0/s ] features: [ 1.3B 6.7M/s ] 113G  blocks: [  32k  74%   37/s ]
    cpus: 148.9 gc:  6% heap: 152G/214G direct: 58M postGC: 104G relInfo: 573M mpGeoms: 3.2G 
    read( 7%) ->  (88/262) -> process(76% 76% 76% 74% 78% 78% 76% 77% 74% 76% 77% 76% 77% 82% 78% 74% 74% 75% 79% 78% 79% 77% 77% 77% 76% 77% 75% 76% 77% 73% 74% 77% 75% 76% 76% 76% 73% 77% 74% 73% 78% 74% 76% 75% 74% 75% 75% 75% 76% 77% 75% 78% 79% 78% 78% 74% 77% 74% 77% 78% 75% 76% 75% 75% 76% 77% 76% 75% 79% 76% 76% 71% 76% 73% 76% 79% 75% 75% 77% 77% 75% 78% 76% 74% 76% 75% 74% 75% 76% 73% 75% 79% 77% 77% 75% 77% 78% 77% 75% 76% 76% 77% 74% 77% 75% 75% 75% 76% 76% 75% 74% 74% 75% 75% 75% 76% 76% 73% 74% 75% 76% 76% 77% 73% 72% 75% 75% 76% 75% 74% 76% 76% 77% 78% 75% 75% 74% 75% 74% 76% 76% 72% 75% 77% 75% 76% 75% 76% 75% 77% 75% 75% 76% 77% 76% 72% 75% 76% 75% 75% 72% 78% 76% 72% 73% 79% 76% 79% 74% 75% 77% 78% 77% 73%) -> (144k/230k) -> write(89% 85% 88% 86% 88% 88%)
0:04:58 INF [osm_pass2] -  nodes: [ 8.8B 100%    0/s ] 92G   ways: [ 263M  27% 2.3M/s ] rels: [    0   0%    0/s ] features: [ 1.4B 6.7M/s ] 118G  blocks: [  32k  75%   37/s ]
    cpus: 147.3 gc:  6% heap: 156G/214G direct: 58M postGC: 140G relInfo: 573M mpGeoms: 3.5G 
    read( 7%) ->  (88/262) -> process(75% 71% 77% 75% 79% 75% 75% 75% 74% 77% 77% 78% 76% 76% 73% 77% 72% 76% 73% 74% 76% 76% 74% 75% 75% 74% 73% 75% 74% 72% 78% 76% 71% 76% 77% 73% 78% 74% 73% 77% 75% 74% 74% 75% 76% 75% 76% 71% 72% 74% 77% 75% 75% 77% 75% 74% 78% 76% 73% 76% 76% 76% 76% 73% 74% 75% 78% 76% 75% 74% 75% 76% 78% 74% 74% 72% 77% 77% 74% 75% 76% 74% 76% 76% 74% 75% 76% 78% 75% 76% 77% 74% 76% 77% 73% 74% 76% 71% 74% 76% 75% 75% 77% 71% 76% 74% 75% 73% 77% 74% 76% 74% 75% 74% 77% 75% 76% 72% 75% 77% 75% 74% 75% 77% 73% 74% 74% 74% 74% 71% 70% 73% 73% 74% 77% 76% 75% 72% 73% 75% 77% 73% 76% 73% 75% 76% 73% 72% 76% 75% 73% 77% 74% 76% 77% 76% 74% 78% 71% 76% 77% 76% 77% 76% 77% 76% 72% 74% 75% 75% 76% 77% 76% 77%) -> (146k/230k) -> write(88% 88% 89% 88% 88% 88%)
0:05:08 INF [osm_pass2] -  nodes: [ 8.8B 100%    0/s ] 92G   ways: [ 289M  29% 2.5M/s ] rels: [    0   0%    0/s ] features: [ 1.5B 6.7M/s ] 122G  blocks: [  32k  76%   38/s ]
    cpus: 145.8 gc:  6% heap: 186G/214G direct: 58M postGC: 104G relInfo: 573M mpGeoms: 3.8G 
    read( 7%) ->  (88/262) -> process(75% 72% 71% 73% 72% 77% 74% 75% 74% 74% 75% 78% 73% 76% 71% 75% 73% 76% 71% 71% 73% 76% 74% 75% 70% 73% 75% 77% 72% 72% 72% 76% 75% 77% 76% 75% 76% 72% 76% 74% 73% 75% 72% 73% 76% 75% 74% 74% 72% 75% 73% 75% 71% 74% 72% 75% 76% 77% 77% 74% 74% 76% 73% 74% 77% 76% 76% 77% 75% 77% 75% 76% 74% 72% 74% 76% 75% 74% 76% 76% 78% 72% 76% 75% 73% 74% 79% 70% 74% 76% 76% 74% 70% 76% 68% 72% 73% 74% 71% 73% 76% 72% 76% 69% 71% 72% 77% 76% 75% 75% 74% 68% 75% 76% 75% 76% 70% 75% 77% 76% 75% 75% 75% 68% 71% 74% 73% 75% 76% 74% 71% 74% 76% 73% 75% 76% 78% 74% 76% 69% 73% 78% 72% 72% 78% 73% 72% 75% 73% 74% 77% 76% 73% 75% 76% 76% 74% 71% 78% 76% 75% 74% 77% 74% 69% 74% 74% 76% 78% 71% 77% 75% 75% 77%) -> (155k/230k) -> write(87% 89% 88% 89% 88% 88%)
0:05:18 INF [osm_pass2] -  nodes: [ 8.8B 100%    0/s ] 92G   ways: [ 314M  32% 2.4M/s ] rels: [    0   0%    0/s ] features: [ 1.5B 6.7M/s ] 126G  blocks: [  33k  77%   36/s ]
    cpus: 151 gc:  6% heap: 106G/214G direct: 58M postGC: 105G relInfo: 573M mpGeoms: 4.1G 
    read( 6%) ->  (88/262) -> process(78% 73% 77% 80% 77% 75% 76% 76% 78% 78% 77% 77% 76% 77% 80% 80% 79% 77% 78% 76% 77% 76% 77% 75% 77% 78% 77% 78% 77% 78% 79% 77% 78% 77% 76% 75% 77% 76% 75% 78% 75% 78% 79% 78% 76% 79% 75% 77% 78% 79% 76% 77% 79% 78% 79% 77% 74% 77% 77% 78% 76% 75% 78% 79% 78% 77% 76% 77% 74% 80% 77% 75% 79% 77% 79% 78% 78% 76% 79% 76% 76% 76% 79% 75% 78% 77% 77% 75% 80% 76% 78% 76% 75% 80% 78% 78% 78% 75% 77% 74% 77% 79% 77% 76% 78% 73% 77% 77% 80% 79% 78% 78% 78% 78% 76% 80% 76% 75% 78% 75% 77% 75% 76% 77% 78% 79% 76% 79% 76% 76% 77% 75% 77% 77% 76% 77% 77% 77% 79% 77% 79% 76% 79% 78% 75% 76% 77% 79% 74% 74% 78% 76% 77% 77% 78% 77% 79% 76% 74% 73% 78% 76% 80% 74% 75% 77% 77% 75% 76% 77% 76% 75% 78% 78%) -> (155k/230k) -> write(87% 87% 88% 88% 87% 87%)
0:05:28 INF [osm_pass2] -  nodes: [ 8.8B 100%    0/s ] 92G   ways: [ 339M  34% 2.5M/s ] rels: [    0   0%    0/s ] features: [ 1.6B 6.6M/s ] 130G  blocks: [  33k  78%   36/s ]
    cpus: 152.5 gc:  6% heap: 144G/214G direct: 58M postGC: 133G relInfo: 573M mpGeoms: 4.3G 
    read( 7%) ->  (88/262) -> process(77% 81% 77% 75% 75% 78% 80% 76% 77% 80% 79% 77% 78% 78% 78% 80% 79% 79% 77% 77% 79% 75% 80% 79% 76% 80% 80% 80% 77% 76% 78% 80% 75% 80% 77% 79% 82% 75% 79% 77% 76% 79% 79% 77% 75% 78% 80% 75% 77% 80% 78% 77% 79% 78% 79% 76% 77% 77% 76% 77% 78% 76% 80% 76% 78% 78% 80% 80% 80% 77% 77% 77% 79% 74% 79% 79% 78% 78% 75% 77% 81% 77% 78% 77% 78% 77% 76% 77% 78% 78% 79% 79% 76% 78% 78% 74% 75% 78% 78% 78% 78% 77% 82% 80% 80% 79% 80% 77% 79% 77% 76% 76% 76% 78% 77% 80% 78% 81% 79% 77% 79% 76% 76% 78% 79% 81% 80% 78% 76% 79% 76% 77% 78% 78% 79% 77% 77% 78% 78% 82% 79% 77% 80% 76% 79% 77% 78% 76% 80% 79% 78% 78% 79% 79% 77% 77% 79% 77% 78% 79% 76% 78% 79% 77% 78% 77% 78% 78% 81% 76% 77% 77% 78% 77%) -> (148k/230k) -> write(86% 86% 87% 87% 87% 87%)
0:05:38 INF [osm_pass2] -  nodes: [ 8.8B 100%    0/s ] 92G   ways: [ 365M  37% 2.5M/s ] rels: [    0   0%    0/s ] features: [ 1.7B 6.6M/s ] 134G  blocks: [  33k  79%   37/s ]
    cpus: 147.7 gc:  6% heap: 186G/214G direct: 58M postGC: 105G relInfo: 573M mpGeoms: 4.6G 
    read( 6%) ->  (88/262) -> process(75% 75% 76% 77% 75% 75% 76% 77% 75% 72% 75% 73% 76% 80% 78% 76% 77% 76% 73% 78% 76% 75% 75% 74% 74% 70% 75% 74% 75% 76% 78% 77% 76% 72% 76% 76% 77% 78% 72% 76% 74% 79% 75% 72% 73% 74% 76% 74% 78% 78% 72% 75% 72% 76% 75% 75% 76% 77% 75% 78% 71% 73% 75% 73% 74% 77% 72% 79% 76% 75% 73% 76% 76% 74% 71% 77% 78% 77% 77% 76% 76% 75% 75% 74% 80% 77% 77% 78% 74% 74% 76% 74% 75% 79% 76% 73% 74% 71% 74% 77% 76% 76% 74% 75% 72% 73% 72% 74% 75% 76% 74% 75% 76% 76% 76% 74% 73% 77% 78% 75% 77% 79% 77% 74% 77% 75% 71% 78% 76% 78% 77% 76% 76% 74% 76% 76% 74% 76% 75% 79% 72% 73% 77% 78% 78% 70% 77% 73% 77% 73% 77% 76% 73% 77% 75% 72% 76% 76% 74% 73% 78% 74% 76% 76% 73% 72% 74% 71% 74% 74% 76% 78% 77% 74%) -> (168k/230k) -> write(88% 86% 89% 86% 88% 89%)
0:05:48 INF [osm_pass2] -  nodes: [ 8.8B 100%    0/s ] 92G   ways: [ 390M  39% 2.5M/s ] rels: [    0   0%    0/s ] features: [ 1.7B 6.5M/s ] 138G  blocks: [  34k  80%   36/s ]
    cpus: 148.4 gc:  6% heap: 163G/214G direct: 58M postGC: 144G relInfo: 573M mpGeoms: 5G   
    read( 6%) ->  (88/262) -> process(76% 77% 72% 77% 73% 77% 75% 75% 74% 74% 77% 76% 72% 77% 74% 76% 76% 78% 76% 75% 74% 75% 75% 77% 77% 74% 77% 74% 77% 76% 76% 74% 74% 77% 72% 77% 76% 77% 77% 75% 71% 74% 78% 74% 75% 78% 78% 76% 77% 76% 74% 76% 77% 77% 77% 76% 80% 75% 76% 76% 78% 77% 73% 78% 74% 75% 77% 74% 76% 76% 75% 76% 75% 76% 75% 75% 72% 76% 76% 75% 76% 77% 77% 69% 78% 75% 72% 76% 76% 76% 73% 76% 75% 74% 78% 75% 74% 78% 75% 78% 77% 75% 77% 76% 78% 75% 76% 77% 80% 72% 78% 77% 74% 76% 77% 76% 75% 74% 76% 77% 75% 75% 75% 76% 74% 76% 75% 77% 71% 75% 75% 75% 76% 73% 74% 78% 76% 76% 79% 74% 74% 75% 77% 74% 76% 77% 78% 75% 74% 76% 75% 76% 77% 75% 77% 76% 74% 77% 76% 76% 75% 75% 75% 75% 75% 78% 72% 76% 77% 74% 76% 76% 74% 77%) -> (146k/230k) -> write(88% 88% 86% 87% 88% 86%)
0:05:58 INF [osm_pass2] -  nodes: [ 8.8B 100%    0/s ] 92G   ways: [ 418M  42% 2.6M/s ] rels: [    0   0%    0/s ] features: [ 1.8B 6.7M/s ] 142G  blocks: [  34k  80%   35/s ]
    cpus: 150.4 gc:  6% heap: 144G/214G direct: 58M postGC: 136G relInfo: 573M mpGeoms: 5.2G 
    read( 6%) ->  (88/262) -> process(78% 76% 74% 76% 76% 79% 75% 78% 78% 77% 76% 80% 76% 76% 78% 74% 79% 78% 80% 79% 76% 77% 76% 79% 78% 77% 75% 76% 76% 79% 79% 77% 78% 73% 75% 77% 77% 79% 75% 79% 74% 77% 80% 78% 79% 76% 79% 77% 75% 78% 76% 78% 79% 77% 73% 77% 80% 77% 78% 78% 78% 77% 76% 74% 75% 78% 76% 77% 77% 79% 76% 79% 74% 77% 77% 76% 79% 80% 79% 76% 77% 79% 77% 76% 75% 78% 79% 77% 76% 74% 76% 77% 80% 76% 76% 76% 74% 78% 77% 75% 74% 75% 75% 77% 78% 75% 77% 77% 73% 79% 74% 76% 74% 78% 79% 77% 81% 77% 75% 77% 79% 79% 77% 78% 79% 79% 76% 76% 78% 76% 75% 79% 76% 74% 80% 78% 73% 77% 76% 77% 78% 77% 77% 79% 77% 75% 75% 81% 80% 75% 79% 74% 77% 80% 77% 79% 77% 76% 76% 77% 78% 79% 78% 78% 78% 76% 80% 77% 75% 77% 75% 78% 77% 77%) -> (166k/230k) -> write(90% 88% 89% 89% 88% 90%)
0:06:09 INF [osm_pass2] -  nodes: [ 8.8B 100%    0/s ] 92G   ways: [ 445M  45% 2.6M/s ] rels: [    0   0%    0/s ] features: [ 1.9B 6.8M/s ] 147G  blocks: [  35k  81%   37/s ]
    cpus: 149.2 gc:  5% heap: 201G/214G direct: 58M postGC: 106G relInfo: 573M mpGeoms: 5.4G 
    read( 6%) ->  (88/262) -> process(76% 75% 77% 74% 79% 76% 77% 75% 78% 76% 78% 74% 78% 73% 78% 76% 76% 77% 78% 75% 76% 76% 75% 76% 79% 77% 76% 76% 74% 76% 79% 75% 78% 77% 76% 74% 78% 79% 76% 76% 78% 78% 78% 75% 74% 80% 77% 77% 78% 80% 79% 78% 76% 77% 78% 75% 76% 76% 78% 76% 77% 74% 77% 76% 78% 77% 73% 78% 74% 77% 74% 77% 79% 77% 75% 75% 77% 77% 78% 75% 79% 78% 77% 78% 76% 76% 77% 77% 78% 77% 77% 78% 77% 78% 75% 76% 76% 78% 78% 78% 78% 79% 78% 76% 78% 76% 76% 77% 77% 76% 76% 77% 77% 76% 76% 76% 78% 79% 76% 75% 77% 77% 75% 77% 76% 76% 78% 77% 77% 76% 76% 73% 74% 75% 76% 76% 76% 75% 79% 73% 80% 78% 79% 77% 76% 74% 79% 76% 78% 77% 77% 78% 78% 79% 77% 75% 74% 76% 78% 78% 76% 78% 75% 74% 74% 75% 78% 77% 77% 78% 74% 75% 74% 76%) -> (88k/230k) -> write(88% 87% 88% 88% 89% 86%)
0:06:19 INF [osm_pass2] -  nodes: [ 8.8B 100%    0/s ] 92G   ways: [ 473M  48% 2.7M/s ] rels: [    0   0%    0/s ] features: [ 1.9B 6.8M/s ] 151G  blocks: [  35k  82%   38/s ]
    cpus: 147 gc:  6% heap: 175G/214G direct: 58M postGC: 106G relInfo: 573M mpGeoms: 5.6G 
    read( 5%) ->  (88/262) -> process(76% 76% 77% 76% 73% 73% 75% 76% 74% 73% 74% 74% 78% 75% 76% 73% 74% 74% 78% 76% 75% 78% 76% 73% 77% 75% 75% 72% 74% 76% 74% 76% 74% 78% 73% 75% 75% 73% 76% 78% 74% 75% 75% 73% 77% 74% 75% 73% 72% 75% 77% 77% 74% 77% 74% 74% 77% 75% 75% 77% 78% 72% 77% 78% 76% 74% 74% 75% 77% 78% 75% 77% 77% 74% 76% 76% 73% 76% 75% 75% 74% 76% 75% 74% 76% 77% 76% 74% 77% 74% 73% 75% 78% 73% 76% 75% 75% 77% 76% 76% 76% 76% 74% 73% 74% 76% 78% 72% 77% 73% 79% 74% 78% 75% 80% 75% 75% 76% 75% 75% 75% 76% 76% 76% 75% 75% 75% 75% 74% 74% 75% 75% 75% 79% 74% 79% 72% 78% 77% 75% 74% 74% 78% 77% 73% 78% 76% 74% 76% 75% 74% 75% 76% 77% 74% 73% 74% 76% 76% 76% 73% 75% 77% 74% 73% 76% 74% 76% 74% 76% 77% 78% 75% 76%) -> (157k/230k) -> write(90% 89% 89% 88% 88% 88%)
0:06:29 INF [osm_pass2] -  nodes: [ 8.8B 100%    0/s ] 92G   ways: [ 501M  50% 2.8M/s ] rels: [    0   0%    0/s ] features: [   2B 6.8M/s ] 153G  blocks: [  35k  83%   37/s ]
    cpus: 148.1 gc:  6% heap: 157G/214G direct: 58M postGC: 106G relInfo: 573M mpGeoms: 5.8G 
    read( 6%) ->  (88/262) -> process(77% 78% 77% 75% 77% 73% 77% 75% 73% 74% 75% 79% 75% 75% 73% 74% 76% 77% 75% 76% 76% 72% 75% 75% 74% 75% 76% 74% 74% 74% 76% 75% 76% 74% 77% 76% 76% 75% 77% 75% 79% 76% 78% 77% 76% 74% 73% 74% 73% 74% 79% 74% 74% 75% 78% 75% 76% 76% 76% 74% 75% 78% 76% 76% 76% 78% 75% 73% 77% 77% 76% 76% 75% 76% 76% 77% 79% 76% 76% 73% 74% 77% 77% 75% 76% 73% 76% 74% 77% 73% 75% 73% 74% 74% 79% 75% 78% 78% 78% 77% 73% 77% 74% 72% 77% 75% 76% 76% 78% 73% 78% 78% 77% 76% 74% 79% 77% 78% 75% 75% 74% 75% 72% 77% 77% 76% 76% 74% 77% 78% 73% 74% 75% 73% 75% 77% 76% 76% 75% 74% 75% 75% 77% 75% 77% 77% 78% 76% 75% 76% 73% 72% 75% 76% 73% 76% 76% 74% 76% 75% 77% 73% 76% 75% 76% 78% 77% 77% 74% 74% 73% 76% 74% 77%) -> (152k/230k) -> write(89% 90% 88% 90% 89% 90%)
0:06:39 INF [osm_pass2] -  nodes: [ 8.8B 100%    0/s ] 92G   ways: [ 529M  53% 2.7M/s ] rels: [    0   0%    0/s ] features: [ 2.1B 6.7M/s ] 158G  blocks: [  36k  84%   37/s ]
    cpus: 147.8 gc:  6% heap: 127G/214G direct: 58M postGC: 106G relInfo: 573M mpGeoms: 6G   
    read( 6%) ->  (88/262) -> process(74% 82% 77% 74% 75% 74% 73% 75% 75% 78% 74% 76% 73% 77% 76% 75% 76% 76% 76% 75% 75% 75% 74% 78% 74% 75% 76% 79% 75% 79% 73% 77% 75% 76% 76% 74% 76% 73% 73% 78% 77% 75% 76% 77% 77% 77% 78% 74% 75% 80% 74% 72% 75% 78% 73% 77% 75% 75% 74% 73% 70% 76% 74% 77% 76% 74% 74% 74% 77% 78% 77% 75% 75% 76% 78% 76% 74% 76% 75% 74% 71% 76% 74% 76% 74% 75% 72% 73% 72% 74% 78% 77% 77% 76% 75% 78% 79% 75% 76% 77% 76% 76% 76% 71% 76% 77% 75% 73% 80% 77% 77% 75% 74% 72% 73% 75% 73% 74% 75% 77% 74% 77% 73% 74% 77% 75% 74% 78% 76% 75% 73% 73% 78% 77% 77% 75% 75% 70% 74% 73% 73% 76% 76% 75% 75% 76% 74% 75% 73% 75% 77% 73% 76% 76% 71% 76% 74% 75% 74% 73% 71% 79% 71% 77% 74% 72% 75% 78% 76% 73% 73% 78% 73% 74%) -> (163k/230k) -> write(87% 88% 88% 87% 89% 89%)
0:06:49 INF [osm_pass2] -  nodes: [ 8.8B 100%    0/s ] 92G   ways: [ 555M  56% 2.6M/s ] rels: [    0   0%    0/s ] features: [ 2.1B 6.8M/s ] 161G  blocks: [  36k  85%   36/s ]
    cpus: 148.8 gc:  5% heap: 195G/214G direct: 58M postGC: 143G relInfo: 573M mpGeoms: 6.2G 
    read( 6%) ->  (88/262) -> process(78% 83% 78% 74% 78% 75% 76% 80% 76% 77% 75% 77% 76% 77% 79% 76% 76% 78% 78% 76% 79% 77% 81% 80% 74% 78% 74% 75% 74% 73% 72% 75% 76% 75% 79% 74% 75% 76% 76% 76% 75% 77% 74% 76% 79% 75% 75% 76% 75% 76% 75% 77% 74% 76% 78% 77% 79% 75% 75% 74% 75% 77% 77% 76% 75% 78% 76% 76% 80% 75% 75% 79% 79% 76% 78% 77% 75% 76% 76% 75% 77% 81% 75% 77% 78% 77% 77% 77% 78% 77% 77% 75% 74% 77% 75% 75% 73% 79% 80% 82% 76% 75% 76% 77% 76% 75% 78% 77% 78% 76% 74% 79% 78% 77% 75% 75% 79% 76% 77% 75% 78% 75% 77% 73% 76% 75% 75% 78% 74% 72% 76% 77% 75% 74% 77% 76% 74% 76% 79% 75% 75% 78% 74% 77% 75% 76% 78% 79% 77% 74% 80% 76% 79% 75% 79% 76% 78% 75% 76% 77% 75% 74% 74% 73% 78% 78% 76% 75% 77% 76% 76% 75% 79% 76%) -> (162k/230k) -> write(90% 88% 90% 87% 87% 89%)
0:06:59 INF [osm_pass2] -  nodes: [ 8.8B 100%    0/s ] 92G   ways: [ 582M  59% 2.6M/s ] rels: [    0   0%    0/s ] features: [ 2.2B 6.8M/s ] 165G  blocks: [  36k  86%   37/s ]
    cpus: 148.6 gc:  6% heap: 160G/214G direct: 58M postGC: 139G relInfo: 573M mpGeoms: 6.5G 
    read( 5%) ->  (88/262) -> process(77% 76% 78% 76% 75% 77% 76% 76% 75% 75% 77% 76% 77% 76% 76% 80% 75% 75% 77% 75% 77% 77% 79% 76% 76% 75% 80% 78% 78% 76% 74% 75% 77% 76% 74% 73% 75% 76% 75% 77% 75% 73% 74% 76% 73% 76% 70% 76% 77% 76% 75% 77% 75% 73% 75% 77% 74% 79% 78% 76% 78% 73% 78% 74% 77% 78% 76% 77% 78% 76% 77% 77% 76% 75% 74% 78% 76% 76% 77% 76% 71% 74% 77% 77% 79% 77% 76% 78% 76% 75% 75% 74% 74% 74% 74% 78% 74% 76% 75% 78% 74% 75% 75% 75% 79% 75% 75% 76% 78% 72% 73% 74% 79% 76% 78% 76% 76% 77% 79% 74% 74% 78% 78% 75% 76% 77% 75% 75% 76% 76% 76% 77% 75% 76% 79% 72% 77% 74% 75% 77% 78% 75% 78% 76% 76% 77% 76% 76% 75% 74% 78% 75% 73% 76% 80% 76% 74% 77% 76% 79% 77% 74% 75% 76% 80% 76% 78% 76% 76% 77% 76% 77% 75% 76%) -> (158k/230k) -> write(90% 88% 88% 88% 90% 88%)
0:07:09 INF [osm_pass2] -  nodes: [ 8.8B 100%    0/s ] 92G   ways: [ 610M  61% 2.7M/s ] rels: [    0   0%    0/s ] features: [ 2.3B   7M/s ] 171G  blocks: [  37k  87%   40/s ]
    cpus: 148.8 gc:  6% heap: 123G/214G direct: 58M postGC: 107G relInfo: 573M mpGeoms: 6.8G 
    read( 6%) ->  (88/262) -> process(80% 78% 77% 75% 76% 74% 75% 74% 76% 79% 78% 76% 77% 73% 78% 78% 76% 75% 76% 76% 77% 74% 75% 75% 75% 75% 77% 75% 75% 74% 77% 74% 75% 78% 76% 75% 76% 77% 79% 78% 75% 74% 77% 79% 75% 74% 75% 73% 74% 78% 77% 74% 78% 77% 75% 78% 76% 77% 78% 75% 75% 76% 75% 77% 77% 75% 80% 75% 79% 75% 77% 75% 74% 77% 77% 74% 73% 76% 75% 75% 79% 76% 76% 79% 78% 75% 77% 74% 78% 76% 75% 76% 74% 77% 75% 79% 74% 76% 77% 77% 74% 72% 75% 79% 74% 76% 75% 75% 76% 75% 76% 76% 75% 76% 78% 76% 75% 76% 76% 72% 73% 77% 76% 78% 75% 76% 79% 78% 76% 73% 76% 78% 78% 75% 74% 76% 77% 76% 78% 78% 74% 76% 76% 77% 77% 74% 75% 79% 79% 76% 78% 77% 77% 77% 76% 77% 76% 75% 74% 75% 75% 78% 76% 78% 77% 78% 74% 76% 77% 75% 78% 76% 77% 76%) -> (152k/230k) -> write(89% 87% 89% 88% 89% 88%)
0:07:19 INF [osm_pass2] -  nodes: [ 8.8B 100%    0/s ] 92G   ways: [ 637M  64% 2.6M/s ] rels: [    0   0%    0/s ] features: [ 2.3B 6.8M/s ] 174G  blocks: [  37k  87%   37/s ]
    cpus: 154.2 gc:  6% heap: 196G/214G direct: 58M postGC: 107G relInfo: 573M mpGeoms: 7.1G 
    read( 6%) ->  (88/262) -> process(78% 81% 79% 79% 77% 80% 79% 80% 81% 80% 80% 79% 77% 77% 79% 83% 78% 80% 83% 76% 77% 79% 77% 83% 81% 78% 79% 81% 78% 78% 79% 80% 79% 80% 79% 81% 80% 79% 78% 78% 76% 83% 79% 82% 76% 78% 81% 80% 77% 76% 77% 79% 80% 75% 79% 79% 79% 77% 79% 79% 77% 79% 80% 79% 77% 80% 77% 80% 78% 77% 75% 79% 82% 83% 77% 78% 79% 74% 76% 80% 78% 78% 79% 76% 75% 79% 80% 78% 79% 76% 80% 77% 79% 78% 79% 80% 77% 79% 80% 80% 80% 78% 79% 79% 78% 76% 80% 75% 79% 81% 78% 78% 79% 80% 78% 78% 76% 80% 78% 78% 83% 81% 81% 77% 77% 79% 80% 79% 78% 79% 77% 78% 81% 79% 78% 78% 78% 79% 80% 80% 79% 83% 78% 80% 78% 79% 77% 78% 77% 82% 80% 80% 78% 80% 77% 76% 78% 79% 77% 80% 76% 79% 78% 80% 76% 79% 77% 80% 78% 76% 79% 80% 76% 79%) -> (113k/230k) -> write(87% 88% 85% 86% 88% 88%)
0:07:29 INF [osm_pass2] -  nodes: [ 8.8B 100%    0/s ] 92G   ways: [ 666M  67% 2.8M/s ] rels: [    0   0%    0/s ] features: [ 2.4B   7M/s ] 178G  blocks: [  38k  88%   37/s ]
    cpus: 150.8 gc:  6% heap: 186G/214G direct: 58M postGC: 108G relInfo: 573M mpGeoms: 7.4G 
    read( 6%) ->  (88/262) -> process(79% 80% 75% 76% 74% 75% 74% 77% 77% 75% 76% 78% 76% 79% 75% 84% 77% 75% 75% 78% 77% 76% 75% 76% 80% 75% 74% 76% 78% 78% 76% 76% 77% 80% 83% 78% 75% 77% 79% 77% 78% 80% 75% 75% 76% 77% 76% 78% 76% 77% 77% 74% 75% 79% 77% 76% 77% 78% 79% 77% 78% 76% 74% 76% 76% 76% 75% 78% 80% 79% 76% 79% 78% 75% 74% 79% 73% 77% 77% 77% 76% 77% 80% 74% 75% 76% 80% 75% 76% 79% 78% 74% 78% 77% 74% 73% 75% 76% 78% 80% 77% 76% 76% 76% 77% 79% 79% 77% 75% 76% 77% 77% 75% 77% 75% 77% 80% 77% 80% 78% 80% 77% 78% 76% 78% 76% 74% 75% 77% 76% 76% 76% 76% 76% 75% 75% 76% 79% 74% 80% 79% 75% 79% 77% 78% 86% 77% 78% 78% 80% 74% 72% 76% 82% 78% 77% 77% 77% 77% 79% 74% 77% 77% 80% 78% 78% 75% 76% 77% 74% 75% 75% 74% 80%) -> (140k/230k) -> write(87% 89% 88% 89% 87% 89%)
0:07:39 INF [osm_pass2] -  nodes: [ 8.8B 100%    0/s ] 92G   ways: [ 694M  70% 2.7M/s ] rels: [    0   0%    0/s ] features: [ 2.5B 6.9M/s ] 182G  blocks: [  38k  89%   40/s ]
    cpus: 150.2 gc:  6% heap: 178G/214G direct: 58M postGC: 143G relInfo: 573M mpGeoms: 7.7G 
    read( 6%) ->  (88/262) -> process(77% 75% 78% 76% 81% 79% 76% 75% 76% 74% 76% 74% 77% 79% 76% 77% 77% 79% 76% 72% 75% 77% 76% 75% 77% 77% 77% 78% 78% 75% 76% 75% 77% 77% 75% 77% 77% 74% 77% 76% 76% 76% 77% 78% 79% 78% 77% 77% 76% 77% 77% 80% 79% 75% 76% 72% 78% 76% 80% 72% 76% 77% 79% 78% 74% 74% 77% 76% 78% 77% 76% 75% 78% 75% 76% 78% 75% 79% 76% 75% 78% 76% 78% 76% 77% 80% 85% 79% 75% 77% 78% 73% 76% 69% 75% 77% 75% 76% 77% 78% 77% 75% 77% 79% 77% 78% 78% 76% 74% 76% 76% 76% 79% 77% 76% 77% 76% 75% 81% 78% 76% 75% 78% 73% 76% 78% 78% 76% 77% 77% 73% 77% 74% 75% 75% 75% 77% 74% 76% 77% 76% 76% 78% 77% 76% 74% 76% 76% 78% 75% 78% 77% 79% 82% 75% 76% 78% 75% 72% 77% 76% 78% 79% 77% 78% 78% 74% 75% 76% 78% 74% 79% 75% 81%) -> (162k/230k) -> write(89% 87% 89% 89% 89% 89%)
0:07:50 INF [osm_pass2] -  nodes: [ 8.8B 100%    0/s ] 92G   ways: [ 723M  73% 2.8M/s ] rels: [    0   0%    0/s ] features: [ 2.6B 6.9M/s ] 185G  blocks: [  38k  90%   39/s ]
    cpus: 150 gc:  6% heap: 178G/214G direct: 58M postGC: 145G relInfo: 573M mpGeoms: 7.9G 
    read( 5%) ->  (88/262) -> process(77% 80% 77% 78% 76% 77% 79% 75% 76% 76% 78% 78% 74% 77% 77% 78% 78% 76% 77% 75% 79% 78% 78% 78% 77% 76% 78% 78% 79% 76% 78% 76% 77% 77% 79% 76% 78% 78% 78% 78% 77% 78% 74% 79% 76% 75% 78% 78% 77% 80% 77% 78% 77% 76% 71% 76% 79% 76% 77% 76% 79% 77% 76% 78% 74% 77% 79% 80% 77% 76% 77% 79% 80% 75% 75% 76% 75% 79% 78% 77% 75% 77% 76% 75% 75% 79% 77% 75% 80% 75% 78% 78% 75% 77% 80% 79% 76% 76% 74% 76% 76% 78% 79% 74% 76% 80% 77% 77% 77% 77% 79% 80% 80% 79% 78% 75% 77% 77% 80% 78% 77% 77% 77% 79% 76% 76% 75% 78% 77% 79% 74% 77% 76% 76% 78% 76% 77% 80% 74% 77% 77% 76% 77% 75% 78% 79% 77% 77% 79% 76% 78% 78% 80% 76% 77% 77% 77% 77% 78% 76% 76% 75% 77% 76% 78% 78% 76% 77% 79% 78% 77% 76% 78% 77%) -> (139k/230k) -> write(88% 89% 90% 89% 89% 88%)
0:08:00 INF [osm_pass2] -  nodes: [ 8.8B 100%    0/s ] 92G   ways: [ 753M  76% 2.9M/s ] rels: [    0   0%    0/s ] features: [ 2.6B 6.9M/s ] 190G  blocks: [  39k  91%   40/s ]
    cpus: 151.9 gc:  6% heap: 192G/214G direct: 58M postGC: 151G relInfo: 573M mpGeoms: 8.1G 
    read( 6%) ->  (88/262) -> process(79% 79% 79% 79% 76% 79% 79% 74% 79% 76% 79% 78% 76% 77% 76% 77% 77% 80% 80% 77% 78% 78% 79% 79% 77% 80% 78% 77% 80% 78% 76% 75% 82% 82% 78% 78% 78% 78% 77% 78% 81% 78% 71% 78% 81% 77% 77% 80% 80% 77% 79% 77% 78% 79% 76% 80% 79% 80% 76% 76% 78% 77% 79% 81% 77% 76% 80% 77% 78% 78% 80% 79% 79% 77% 75% 78% 76% 78% 76% 78% 76% 76% 81% 78% 77% 81% 79% 79% 79% 76% 79% 76% 76% 80% 80% 78% 76% 80% 78% 76% 79% 78% 79% 77% 77% 73% 77% 76% 78% 77% 77% 79% 78% 78% 78% 78% 80% 78% 80% 74% 76% 80% 74% 77% 78% 79% 76% 80% 79% 76% 79% 76% 78% 77% 79% 78% 79% 78% 78% 78% 78% 77% 75% 77% 74% 78% 77% 75% 77% 79% 78% 79% 78% 79% 78% 76% 77% 79% 79% 78% 78% 76% 78% 77% 78% 75% 80% 76% 76% 78% 78% 79% 79% 79%) -> (137k/230k) -> write(88% 87% 89% 88% 90% 88%)
0:08:10 INF [osm_pass2] -  nodes: [ 8.8B 100%    0/s ] 92G   ways: [ 781M  79% 2.8M/s ] rels: [    0   0%    0/s ] features: [ 2.7B 6.7M/s ] 194G  blocks: [  39k  92%   38/s ]
    cpus: 152.5 gc:  6% heap: 110G/214G direct: 58M postGC: 109G relInfo: 573M mpGeoms: 8.4G 
    read( 5%) ->  (88/262) -> process(77% 78% 78% 81% 76% 77% 79% 80% 80% 76% 77% 78% 81% 78% 76% 82% 76% 79% 80% 79% 78% 78% 78% 80% 80% 74% 80% 80% 79% 78% 80% 79% 79% 77% 76% 79% 75% 80% 80% 77% 78% 79% 77% 79% 78% 79% 79% 77% 80% 76% 80% 78% 78% 78% 80% 76% 78% 77% 79% 76% 81% 76% 77% 76% 76% 81% 79% 77% 78% 79% 80% 77% 78% 79% 81% 80% 77% 79% 78% 77% 78% 76% 81% 80% 79% 79% 77% 81% 77% 75% 78% 80% 79% 80% 78% 80% 78% 76% 76% 78% 78% 77% 79% 78% 77% 73% 78% 77% 78% 80% 79% 76% 80% 79% 80% 79% 77% 78% 77% 78% 75% 76% 76% 79% 80% 80% 80% 78% 77% 79% 78% 79% 79% 77% 76% 79% 79% 80% 76% 79% 77% 77% 78% 77% 78% 79% 77% 78% 79% 78% 80% 76% 75% 81% 79% 78% 77% 79% 80% 79% 78% 78% 77% 79% 79% 77% 79% 78% 80% 78% 79% 78% 81% 79%) -> (144k/230k) -> write(88% 88% 87% 87% 86% 89%)
0:08:20 INF [osm_pass2] -  nodes: [ 8.8B 100%    0/s ] 92G   ways: [ 809M  82% 2.7M/s ] rels: [    0   0%    0/s ] features: [ 2.8B 6.6M/s ] 197G  blocks: [  40k  93%   40/s ]
    cpus: 153.7 gc:  6% heap: 119G/214G direct: 58M postGC: 109G relInfo: 573M mpGeoms: 8.6G 
    read( 6%) ->  (88/262) -> process(79% 80% 79% 77% 77% 80% 76% 80% 78% 79% 80% 80% 80% 78% 79% 77% 82% 80% 80% 79% 82% 80% 75% 78% 80% 76% 77% 78% 79% 78% 78% 78% 79% 75% 77% 80% 78% 80% 78% 78% 78% 79% 77% 79% 78% 80% 80% 78% 78% 77% 76% 78% 80% 79% 78% 78% 79% 82% 76% 74% 75% 77% 81% 78% 78% 78% 78% 77% 79% 79% 79% 79% 80% 79% 79% 80% 79% 80% 81% 80% 79% 78% 80% 81% 80% 77% 78% 79% 78% 75% 77% 78% 80% 80% 80% 76% 77% 78% 76% 78% 76% 79% 81% 78% 76% 79% 79% 79% 76% 77% 78% 79% 77% 75% 80% 79% 78% 78% 77% 81% 79% 80% 80% 80% 78% 78% 78% 81% 80% 79% 80% 78% 77% 76% 80% 82% 77% 83% 79% 79% 79% 80% 80% 80% 76% 81% 78% 78% 82% 78% 76% 81% 80% 79% 74% 78% 79% 79% 78% 79% 80% 81% 76% 77% 79% 78% 80% 74% 81% 78% 81% 77% 78% 81%) -> (147k/230k) -> write(87% 87% 88% 88% 87% 84%)
0:08:30 INF [osm_pass2] -  nodes: [ 8.8B 100%    0/s ] 92G   ways: [ 837M  84% 2.7M/s ] rels: [    0   0%    0/s ] features: [ 2.8B 6.3M/s ] 201G  blocks: [  40k  94%   36/s ]
    cpus: 149 gc:  6% heap: 111G/214G direct: 58M postGC: 110G relInfo: 573M mpGeoms: 9.2G 
    read( 5%) ->  (88/262) -> process(75% 78% 80% 78% 75% 78% 78% 79% 75% 73% 75% 77% 76% 77% 77% 78% 78% 78% 78% 75% 77% 77% 78% 76% 75% 76% 80% 75% 74% 77% 77% 75% 77% 77% 77% 78% 77% 75% 75% 76% 76% 75% 77% 80% 75% 76% 77% 76% 77% 78% 76% 78% 76% 75% 74% 77% 81% 74% 79% 77% 80% 75% 77% 77% 78% 77% 75% 75% 75% 75% 78% 79% 77% 76% 79% 77% 75% 77% 77% 76% 77% 75% 75% 77% 75% 76% 73% 77% 77% 76% 73% 77% 75% 77% 79% 77% 75% 75% 77% 76% 76% 76% 76% 78% 76% 78% 77% 76% 77% 76% 77% 75% 78% 75% 74% 75% 78% 77% 78% 75% 77% 77% 81% 79% 77% 76% 76% 76% 76% 77% 80% 76% 74% 75% 76% 76% 78% 75% 74% 77% 77% 75% 79% 79% 76% 78% 76% 76% 73% 77% 80% 77% 76% 75% 76% 76% 77% 78% 76% 73% 78% 78% 78% 78% 78% 77% 78% 75% 77% 73% 76% 76% 77% 79%) -> (158k/230k) -> write(85% 86% 86% 86% 86% 84%)
0:08:40 INF [osm_pass2] -  nodes: [ 8.8B 100%    0/s ] 92G   ways: [ 865M  87% 2.8M/s ] rels: [    0   0%    0/s ] features: [ 2.9B 6.6M/s ] 205G  blocks: [  40k  95%   38/s ]
    cpus: 152.6 gc:  5% heap: 150G/214G direct: 58M postGC: 110G relInfo: 573M mpGeoms: 9.4G 
    read( 6%) ->  (88/262) -> process(77% 78% 81% 79% 78% 76% 75% 80% 78% 79% 82% 78% 79% 79% 82% 79% 82% 80% 75% 80% 76% 79% 79% 80% 76% 78% 76% 80% 77% 79% 78% 79% 76% 79% 80% 80% 76% 79% 78% 81% 78% 80% 83% 77% 82% 78% 81% 78% 78% 80% 79% 78% 80% 78% 79% 81% 80% 78% 81% 76% 79% 80% 78% 81% 76% 80% 78% 79% 77% 79% 77% 79% 78% 75% 77% 78% 77% 77% 77% 78% 77% 79% 75% 77% 77% 79% 77% 78% 81% 77% 79% 79% 77% 81% 79% 76% 78% 80% 73% 82% 76% 80% 76% 76% 81% 80% 78% 80% 77% 80% 76% 78% 77% 79% 78% 79% 80% 78% 79% 84% 77% 80% 79% 78% 78% 77% 78% 79% 74% 76% 79% 77% 77% 79% 75% 78% 79% 80% 82% 77% 77% 79% 80% 76% 78% 80% 80% 78% 77% 77% 80% 78% 80% 77% 81% 77% 78% 79% 76% 80% 79% 78% 77% 78% 78% 77% 78% 77% 79% 77% 78% 77% 80% 78%) -> (142k/230k) -> write(89% 88% 88% 90% 89% 89%)
0:08:50 INF [osm_pass2] -  nodes: [ 8.8B 100%    0/s ] 92G   ways: [ 893M  90% 2.7M/s ] rels: [    0   0%    0/s ] features: [   3B 6.5M/s ] 208G  blocks: [  41k  96%   39/s ]
    cpus: 156.3 gc:  6% heap: 172G/214G direct: 58M postGC: 110G relInfo: 573M mpGeoms: 9.7G 
    read( 6%) ->  (88/262) -> process(82% 78% 83% 81% 79% 80% 79% 77% 82% 82% 80% 81% 82% 78% 80% 80% 82% 80% 80% 79% 80% 79% 80% 82% 83% 80% 80% 79% 81% 78% 78% 79% 82% 79% 81% 82% 80% 82% 80% 79% 81% 78% 78% 80% 82% 81% 81% 81% 78% 80% 83% 80% 83% 81% 82% 81% 79% 80% 80% 80% 78% 82% 82% 79% 81% 78% 82% 78% 82% 79% 82% 76% 79% 80% 81% 83% 78% 81% 78% 79% 80% 79% 80% 81% 81% 78% 80% 80% 82% 79% 80% 79% 82% 81% 78% 79% 81% 80% 79% 81% 81% 80% 81% 82% 78% 79% 78% 80% 80% 80% 81% 81% 80% 82% 83% 79% 81% 81% 80% 80% 81% 83% 79% 78% 79% 79% 82% 81% 80% 78% 82% 82% 81% 79% 79% 79% 78% 81% 81% 80% 79% 81% 82% 79% 80% 80% 77% 82% 78% 76% 77% 80% 80% 79% 83% 80% 81% 78% 81% 78% 79% 77% 80% 80% 82% 79% 79% 79% 82% 81% 82% 80% 79% 81%) -> (156k/230k) -> write(85% 85% 88% 88% 86% 86%)
0:09:00 INF [osm_pass2] -  nodes: [ 8.8B 100%    0/s ] 92G   ways: [ 921M  93% 2.7M/s ] rels: [    0   0%    0/s ] features: [   3B 6.3M/s ] 212G  blocks: [  41k  97%   36/s ]
    cpus: 157.1 gc:  6% heap: 115G/214G direct: 58M postGC: 110G relInfo: 573M mpGeoms: 10G  
    read( 5%) ->  (88/262) -> process(83% 79% 82% 82% 81% 80% 83% 79% 79% 82% 82% 81% 80% 80% 82% 81% 83% 82% 82% 82% 78% 78% 82% 81% 82% 83% 81% 83% 79% 80% 80% 80% 83% 82% 81% 79% 81% 80% 83% 84% 80% 82% 83% 81% 78% 83% 80% 81% 79% 83% 82% 81% 82% 81% 81% 80% 77% 82% 81% 82% 83% 81% 81% 78% 82% 81% 78% 83% 79% 79% 80% 79% 80% 81% 81% 82% 82% 82% 81% 81% 81% 79% 79% 82% 82% 83% 80% 81% 81% 80% 81% 81% 83% 79% 80% 79% 80% 82% 80% 82% 80% 80% 80% 79% 81% 85% 79% 81% 79% 83% 84% 84% 80% 82% 81% 79% 83% 81% 80% 80% 82% 80% 81% 80% 80% 81% 81% 79% 82% 82% 80% 81% 82% 80% 81% 81% 80% 79% 83% 78% 79% 82% 80% 81% 79% 79% 78% 83% 79% 80% 78% 80% 82% 81% 82% 81% 83% 82% 80% 82% 81% 80% 80% 82% 80% 82% 81% 82% 80% 80% 82% 82% 79% 78%) -> (111k/230k) -> write(84% 86% 87% 86% 85% 87%)
0:09:10 INF [osm_pass2] -  nodes: [ 8.8B 100%    0/s ] 92G   ways: [ 948M  95% 2.6M/s ] rels: [    0   0%    0/s ] features: [ 3.1B 6.2M/s ] 215G  blocks: [  42k  97%   38/s ]
    cpus: 160.3 gc:  6% heap: 169G/214G direct: 58M postGC: 155G relInfo: 573M mpGeoms: 10G  
    read( 7%) ->  (88/262) -> process(82% 82% 83% 82% 82% 80% 82% 86% 85% 80% 82% 81% 83% 83% 81% 83% 85% 82% 83% 83% 81% 84% 82% 84% 81% 83% 84% 81% 82% 84% 84% 82% 84% 82% 84% 83% 83% 83% 83% 83% 82% 83% 83% 82% 81% 84% 84% 81% 84% 84% 85% 83% 81% 84% 83% 84% 83% 82% 82% 81% 84% 83% 81% 84% 83% 82% 82% 83% 84% 82% 79% 84% 83% 81% 83% 83% 83% 82% 81% 81% 82% 85% 80% 80% 81% 81% 84% 84% 81% 83% 84% 83% 83% 83% 83% 81% 83% 85% 81% 84% 83% 85% 81% 81% 82% 85% 81% 84% 83% 82% 82% 82% 82% 84% 81% 86% 83% 82% 83% 84% 82% 82% 83% 83% 84% 80% 81% 83% 84% 80% 79% 81% 84% 81% 79% 83% 83% 82% 82% 83% 81% 81% 81% 81% 81% 81% 84% 85% 81% 83% 84% 82% 82% 83% 85% 83% 83% 81% 83% 80% 83% 82% 87% 84% 83% 83% 85% 82% 82% 82% 81% 78% 83% 81%) -> (144k/230k) -> write(86% 85% 86% 88% 85% 86%)
0:09:21 INF [osm_pass2] -  nodes: [ 8.8B 100%    0/s ] 92G   ways: [ 976M  98% 2.7M/s ] rels: [    0   0%    0/s ] features: [ 3.2B 6.3M/s ] 220G  blocks: [  42k  98%   37/s ]
    cpus: 157.4 gc:  6% heap: 120G/214G direct: 58M postGC: 111G relInfo: 573M mpGeoms: 10G  
    read( 6%) ->  (88/262) -> process(80% 83% 84% 83% 81% 77% 83% 80% 83% 80% 77% 82% 80% 81% 82% 82% 79% 81% 83% 83% 82% 83% 81% 83% 81% 82% 82% 80% 76% 79% 81% 84% 81% 84% 82% 80% 82% 81% 79% 81% 82% 81% 81% 82% 82% 79% 81% 83% 81% 82% 83% 84% 80% 81% 80% 81% 83% 82% 81% 79% 80% 79% 82% 81% 83% 82% 82% 82% 82% 84% 81% 80% 82% 83% 82% 83% 81% 82% 80% 80% 82% 80% 81% 82% 82% 77% 81% 80% 83% 79% 82% 80% 80% 80% 81% 78% 80% 77% 82% 83% 81% 81% 82% 78% 82% 82% 82% 79% 81% 79% 81% 79% 81% 80% 80% 84% 82% 80% 82% 82% 81% 80% 83% 82% 80% 83% 81% 82% 81% 83% 81% 81% 81% 81% 83% 81% 83% 81% 81% 78% 81% 80% 82% 83% 82% 82% 78% 81% 82% 82% 80% 82% 79% 82% 83% 81% 82% 82% 80% 82% 83% 83% 81% 83% 78% 82% 81% 84% 80% 79% 84% 79% 82% 81%) -> (144k/230k) -> write(85% 88% 86% 85% 87% 87%)
0:09:29 INF [osm_pass2:process] - Finished ways: 993,607,585 (2.4M/s) in 6m43s cpu:16h19m39s gc:23s avg:145.8
0:09:31 INF [osm_pass2] -  nodes: [ 8.8B 100%    0/s ] 92G   ways: [ 993M 100% 1.7M/s ] rels: [ 211k   2%  20k/s ] features: [ 3.2B 4.3M/s ] 223G  blocks: [  42k  99%   34/s ]
    cpus: 131 gc:  5% heap: 180G/214G direct: 58M postGC: 139G relInfo: 573M mpGeoms: 10G  
    read( 5%) ->  (88/262) -> process(73% 73% 75% 56% 77% 58% 55% 63% 76% 53% 69% 72% 54% 60% 61% 76% 63% 76% 76% 76% 54% 76% 52% 55% 52% 59% 64% 60% 59% 62% 66% 79% 77% 48% 57% 57% 51% 61% 74% 58% 61% 76% 85% 80% 64% 62% 52% 72% 81% 75% 81% 71% 54% 70% 54% 57% 67% 71% 66% 77% 58% 63% 70% 77% 83% 63% 65% 49% 59% 61% 80% 76% 61% 74% 74% 67% 66% 74% 76% 75% 75% 86% 68% 73% 67% 52% 63% 71% 72% 56% 71% 75% 80% 58% 78% 73% 59% 71% 73% 77% 65% 70% 57% 60% 58% 70% 71% 76% 50% 61% 73% 62% 70% 69% 73% 72% 81% 68% 68% 71% 73% 78% 70% 78% 76% 70% 74% 68% 50% 76% 77% 80% 72% 72% 54% 71% 77% 88% 68% 71% 81% 65% 67% 63% 66% 52% 55% 60% 55% 75% 52% 61% 54% 69% 69% 58% 54% 78% 56% 73% 63% 63% 73% 75% 60% 70% 61% 75% 74% 66% 76% 51% 49% 74%) -> (85k/230k) -> write(56% 54% 55% 55% 54% 54%)
0:09:41 INF [osm_pass2] -  nodes: [ 8.8B 100%    0/s ] 92G   ways: [ 993M 100%    0/s ] rels: [ 1.3M  11% 109k/s ] features: [ 3.2B 756k/s ] 223G  blocks: [  42k  99%   <1/s ]
    cpus: 168.8 gc:  5% heap: 155G/214G direct: 58M postGC: 112G relInfo: 573M mpGeoms: 10G  
    read( 0%) ->  (88/262) -> process(93% 94% 94% 93% 91% 93% 93% 93% 93% 93% 92% 91% 94% 93% 90% 92% 92% 91% 93% 94% 92% 92% 93% 92% 93% 94% 92% 92% 92% 91% 93% 93% 93% 93% 92% 92% 93% 92% 90% 93% 93% 93% 91% 94% 93% 93% 94% 93% 91% 91% 93% 93% 93% 93% 92% 94% 92% 92% 94% 91% 92% 93% 93% 93% 92% 93% 94% 93% 92% 93% 93% 92% 92% 93% 93% 92% 90% 91% 92% 91% 92% 92% 92% 92% 93% 93% 90% 93% 91% 93% 92% 92% 92% 92% 93% 93% 92% 93% 91% 92% 92% 92% 93% 92% 92% 92% 90% 91% 92% 93% 90% 92% 92% 92% 93% 93% 93% 93% 93% 92% 93% 92% 94% 92% 92% 91% 93% 93% 93% 91% 93% 93% 93% 91% 92% 92% 92% 92% 93% 93% 92% 93% 93% 92% 93% 91% 92% 92% 92% 93% 93% 93% 90% 93% 91% 91% 93% 92% 93% 91% 93% 91% 92% 93% 93% 93% 93% 92% 91% 92% 91% 92% 93% 93%) -> (85k/230k) -> write( 9%  9%  9%  9%  9% 10%)
0:09:51 INF [osm_pass2] -  nodes: [ 8.8B 100%    0/s ] 92G   ways: [ 993M 100%    0/s ] rels: [ 2.5M  21% 117k/s ] features: [ 3.2B 736k/s ] 224G  blocks: [  42k  99%   <1/s ]
    cpus: 170.3 gc:  3% heap: 170G/214G direct: 58M postGC: 112G relInfo: 573M mpGeoms: 10G  
    read( 0%) ->  (88/262) -> process(94% 94% 95% 95% 94% 96% 94% 94% 95% 95% 95% 93% 94% 95% 93% 93% 94% 95% 93% 94% 95% 94% 96% 94% 94% 95% 95% 95% 95% 95% 94% 94% 93% 96% 95% 94% 95% 93% 94% 95% 94% 95% 94% 95% 94% 92% 94% 94% 94% 92% 93% 94% 94% 94% 95% 93% 92% 93% 95% 92% 94% 94% 92% 94% 94% 95% 94% 93% 95% 92% 95% 93% 93% 94% 93% 93% 95% 95% 94% 94% 94% 94% 94% 95% 95% 94% 94% 95% 95% 95% 95% 93% 96% 93% 95% 95% 95% 94% 95% 95% 95% 95% 94% 94% 95% 93% 93% 95% 95% 95% 95% 94% 94% 94% 95% 95% 95% 94% 94% 94% 94% 94% 94% 94% 93% 94% 93% 94% 96% 93% 93% 94% 94% 94% 94% 94% 94% 95% 95% 92% 95% 94% 94% 94% 94% 94% 94% 93% 92% 95% 94% 95% 96% 94% 95% 94% 95% 96% 95% 95% 94% 94% 94% 94% 92% 93% 95% 93% 94% 92% 95% 94% 95% 95%) -> (86k/230k) -> write(10% 10% 10%  9% 12%  9%)
0:10:01 INF [osm_pass2] -  nodes: [ 8.8B 100%    0/s ] 92G   ways: [ 993M 100%    0/s ] rels: [ 3.7M  32% 119k/s ] features: [ 3.2B 899k/s ] 225G  blocks: [  42k  99%    1/s ]
    cpus: 170.5 gc:  2% heap: 117G/214G direct: 58M postGC: 112G relInfo: 573M mpGeoms: 10G  
    read( 0%) ->  (88/262) -> process(96% 95% 95% 95% 94% 96% 96% 94% 95% 94% 95% 95% 95% 96% 95% 96% 93% 94% 93% 94% 94% 92% 95% 94% 95% 94% 96% 95% 93% 94% 95% 94% 95% 93% 95% 94% 94% 93% 96% 94% 95% 95% 95% 94% 95% 95% 95% 95% 95% 94% 94% 96% 93% 95% 95% 95% 93% 95% 95% 95% 96% 95% 96% 95% 95% 94% 95% 94% 93% 95% 94% 95% 94% 95% 94% 94% 94% 94% 95% 96% 93% 94% 94% 94% 95% 93% 95% 95% 96% 94% 96% 95% 95% 96% 96% 95% 95% 96% 95% 95% 95% 96% 96% 94% 95% 95% 94% 96% 94% 96% 95% 95% 95% 96% 95% 93% 93% 95% 94% 96% 95% 94% 96% 95% 95% 95% 96% 96% 94% 94% 96% 91% 95% 96% 95% 95% 94% 96% 95% 95% 95% 95% 96% 95% 94% 94% 94% 95% 95% 95% 96% 94% 96% 96% 94% 95% 95% 94% 93% 94% 94% 95% 95% 94% 95% 93% 95% 95% 96% 94% 96% 95% 95% 95%) -> (89k/230k) -> write(11% 14% 11% 14% 12% 11%)
0:10:11 INF [osm_pass2] -  nodes: [ 8.8B 100%    0/s ] 92G   ways: [ 993M 100%    0/s ] rels: [ 4.9M  42% 121k/s ] features: [ 3.2B 1.7M/s ] 230G  blocks: [  42k  99%    5/s ]
    cpus: 168.3 gc:  3% heap: 146G/214G direct: 58M postGC: 143G relInfo: 573M mpGeoms: 10G  
    read( 1%) ->  (88/262) -> process(94% 92% 94% 94% 94% 93% 95% 94% 95% 94% 93% 94% 94% 94% 95% 95% 95% 93% 95% 92% 94% 93% 94% 94% 93% 95% 93% 96% 93% 94% 92% 94% 92% 96% 94% 93% 94% 94% 93% 93% 93% 93% 92% 94% 94% 93% 91% 92% 92% 94% 93% 92% 95% 95% 92% 95% 93% 92% 94% 93% 92% 92% 95% 94% 95% 94% 94% 93% 94% 93% 94% 93% 92% 96% 92% 94% 95% 92% 92% 90% 93% 94% 94% 94% 95% 94% 94% 92% 91% 94% 95% 92% 93% 94% 93% 94% 93% 93% 93% 94% 95% 95% 93% 93% 93% 95% 95% 92% 93% 93% 93% 93% 94% 93% 93% 92% 94% 93% 94% 95% 94% 95% 91% 93% 93% 94% 94% 93% 93% 93% 93% 96% 93% 92% 95% 95% 90% 93% 93% 94% 93% 91% 93% 95% 93% 93% 93% 93% 95% 94% 94% 95% 94% 94% 94% 94% 93% 93% 95% 93% 95% 91% 94% 93% 93% 93% 91% 92% 95% 93% 93% 93% 95% 94%) -> (83k/230k) -> write(13% 14% 15% 14% 14% 16%)
0:10:21 INF [osm_pass2] -  nodes: [ 8.8B 100%    0/s ] 92G   ways: [ 993M 100%    0/s ] rels: [ 6.1M  53% 122k/s ] features: [ 3.2B   1M/s ] 231G  blocks: [  42k  99%    4/s ]
    cpus: 169.7 gc:  3% heap: 197G/214G direct: 54M postGC: 112G relInfo: 573M mpGeoms: 10G  
    read( -%) ->  (69/262) -> process(95% 93% 95% 95% 95% 96% 95% 96% 96% 95% 94% 95% 96% 95% 95% 93% 95% 93% 95% 95% 95% 95% 95% 96% 96% 96% 96% 95% 95% 95% 95% 94% 96% 94% 96% 95% 95% 95% 95% 93% 94% 95% 95% 95% 96% 93% 96% 95% 95% 94% 95% 94% 94% 94% 94% 95% 95% 94% 95% 93% 95% 94% 95% 95% 96% 95% 95% 93% 95% 95% 94% 95% 95% 95% 95% 95% 93% 95% 95% 95% 94% 94% 94% 94% 94% 95% 96% 95% 95% 94% 96% 95% 95% 94% 95% 94% 94% 95% 95% 95% 95% 96% 95% 93% 94% 95% 96% 95% 96% 94% 95% 94% 93% 93% 96% 94% 94% 95% 95% 95% 94% 95% 95% 94% 95% 94% 95% 94% 94% 94% 95% 95% 94% 95% 95% 95% 94% 94% 94% 94% 94% 95% 95% 95% 95% 95% 95% 96% 95% 95% 94% 95% 94% 95% 95% 95% 94% 94% 96% 95% 95% 95% 94% 93% 95% 93% 95% 95% 96% 95% 95% 95% 95% 96%) -> (87k/230k) -> write(12% 10% 11% 10% 11% 11%)
0:10:31 INF [osm_pass2] -  nodes: [ 8.8B 100%    0/s ] 92G   ways: [ 993M 100%    0/s ] rels: [ 7.5M  64% 136k/s ] features: [ 3.3B 1.4M/s ] 233G  blocks: [  42k 100%    3/s ]
    cpus: 170.3 gc:  3% heap: 149G/214G direct: 54M postGC: 112G relInfo: 573M mpGeoms: 10G  
    read( -%) ->  (33/262) -> process(94% 95% 95% 95% 94% 96% 94% 94% 95% 95% 95% 95% 94% 95% 94% 94% 94% 94% 93% 94% 94% 96% 95% 94% 93% 93% 96% 94% 94% 95% 95% 96% 94% 95% 94% 94% 95% 95% 93% 92% 93% 92% 94% 94% 95% 94% 94% 93% 93% 96% 94% 94% 94% 94% 95% 96% 94% 94% 94% 93% 95% 93% 92% 95% 95% 96% 92% 94% 94% 93% 95% 94% 95% 94% 95% 94% 94% 95% 95% 96% 94% 95% 92% 93% 94% 95% 94% 95% 93% 94% 93% 93% 95% 95% 96% 95% 94% 93% 94% 95% 95% 94% 95% 93% 93% 93% 94% 95% 95% 96% 94% 94% 93% 94% 92% 95% 93% 93% 95% 95% 94% 93% 95% 94% 96% 95% 95% 94% 94% 95% 95% 94% 94% 94% 95% 95% 92% 94% 94% 93% 94% 93% 95% 94% 95% 95% 93% 95% 95% 95% 92% 94% 95% 94% 94% 94% 94% 95% 94% 94% 95% 95% 95% 93% 93% 94% 95% 95% 95% 96% 94% 93% 95% 92%) -> (131k/230k) -> write(15% 16% 15% 15% 17% 14%)
0:10:42 INF [osm_pass2] -  nodes: [ 8.8B 100%    0/s ] 92G   ways: [ 993M 100%    0/s ] rels: [ 8.9M  76% 139k/s ] features: [ 3.3B 1.1M/s ] 236G  blocks: [  43k 100%    3/s ]
    cpus: 170.2 gc:  3% heap: 180G/214G direct: 54M postGC: 112G relInfo: 573M mpGeoms: 10G  
    read( -%) ->   (0/262) -> process(95% 96% 95% 95% 95% 95% 96% 93% 96% 95% 94% 95% 94% 96% 94% 95% 95% 94% 96% 95% 94% 94% 94% 92% 96% 95% 95% 94% 94% 94% 94% 95% 95% 94% 93% 95% 95% 94% 94% 94% 94% 94% 95% 94% 93% 94% 95% 96% 95% 96% 96% 96% 95% 95% 94% 95% 96% 96% 96% 93% 96% 94% 95% 94% 94% 95% 95% 96% 95% 96% 95% 94% 95% 95% 94% 95% 94% 95% 93% 96% 94% 95% 95% 94% 95% 95% 95% 95% 94% 96% 95% 95% 95% 94% 94% 96% 96% 94% 95% 95% 95% 95% 96% 94% 95% 95% 95% 95% 94% 96% 93% 94% 93% 91% 93% 94% 95% 95% 95% 94% 95% 96% 94% 96% 95% 95% 95% 95% 95% 96% 95% 96% 95% 94% 95% 95% 94% 94% 94% 95% 95% 96% 94% 95% 94% 94% 94% 94% 95% 91% 96% 95% 95% 94% 95% 93% 94% 94% 95% 95% 95% 95% 95% 96% 96% 95% 94% 95% 95% 96% 95% 96% 95% 95%) -> (80k/230k) -> write(12% 13% 13% 16% 12% 12%)
0:10:52 INF [osm_pass2] -  nodes: [ 8.8B 100%    0/s ] 92G   ways: [ 993M 100%    0/s ] rels: [  10M  89% 140k/s ] features: [ 3.3B 811k/s ] 239G  blocks: [  43k 100%    5/s ]
    cpus: 169.5 gc:  3% heap: 127G/214G direct: 54M postGC: 111G relInfo: 573M mpGeoms: 10G  
    read( -%) ->   (0/262) -> process(95% 94% 95% 95% 95% 95% 95% 95% 93% 95% 95% 94% 95% 95% 92% 94% 94% 95% 94% 94% 96% 94% 94% 94% 95% 95% 95% 94% 96% 92% 95% 96% 96% 94% 95% 95% 95% 94% 95% 94% 93% 94% 95% 95% 96% 96% 95% 95% 94% 95% 94% 95% 94% 95% 95% 95% 93% 94% 93% 95% 94% 95% 95% 93% 94% 94% 95% 94% 95% 95% 94% 95% 95% 93% 91% 95% 93% 95% 95% 95% 94% 95% 93% 95% 95% 96% 95% 95% 96% 95% 94% 95% 94% 96% 94% 95% 95% 94% 95% 95% 93% 94% 93% 96% 94% 95% 95% 94% 93% 95% 94% 95% 94% 96% 95% 93% 95% 94% 96% 96% 93% 94% 95% 94% 95% 96% 95% 95% 96% 96% 96% 95% 95% 96% 94% 95% 96% 96% 93% 94% 95% 94% 93% 96% 96% 95% 94% 93% 93% 93% 95% 94% 95% 93% 95% 94% 95% 94% 94% 93% 93% 95% 94% 96% 94% 95% 95% 94% 94% 93% 95% 96% 95% 95%) -> (90k/230k) -> write(10% 10% 11% 10% 10% 12%)
0:11:02 INF [osm_pass2] -  nodes: [ 8.8B 100%    0/s ] 92G   ways: [ 993M 100%    0/s ] rels: [  11M 100% 128k/s ] features: [ 3.3B 641k/s ] 241G  blocks: [  43k 100%   10/s ]
    cpus: 169.7 gc:  2% heap: 165G/214G direct: 54M postGC: 134G relInfo: 573M mpGeoms: 10G  
    read( -%) ->   (0/262) -> process(95% 94% 96% 94% 96% 96% 96% 95% 95% 96% 94% 96% 95% 95% 96% 95% 96% 96% 95% 95% 94% 95% 95% 96% 95% 96% 96% 96% 95% 95% 94% 95% 96% 95% 95% 94% 96% 94% 95% 95% 95% 95% 94% 94% 96% 95% 95% 96% 95% 96% 96% 95% 96% 96% 95% 95% 95% 95% 95% 95% 94% 96% 95% 94% 95% 95% 95% 96% 95% 95% 95% 95% 96% 95% 95% 95% 95% 96% 95% 95% 95% 97% 96% 94% 94% 95% 94% 96% 94% 95% 95% 96% 96% 96% 95% 96% 93% 96% 94% 95% 95% 94% 94% 94% 95% 96% 95% 95% 95% 95% 96% 94% 96% 93% 95% 94% 94% 95% 95% 93% 95% 95% 95% 96% 95% 95% 95% 95% 95% 96% 96% 95% 95% 94% 96% 95% 94% 94% 94% 96% 95% 95% 95% 95% 95% 96% 95% 94% 94% 94% 95% 95% 95% 95% 96% 95% 95% 94% 94% 94% 94% 94% 94% 94% 96% 96% 95% 96% 95% 94% 96% 95% 95% 95%) -> (99k/230k) -> write(12%  9%  9%  9%  9%  9%)
0:11:04 INF [osm_pass2:process] - Finished relations: 11,749,466 (124k/s) in 1m34s cpu:4h22m23s gc:3s avg:166.7
0:11:06 INF [osm_pass2] -  nodes: [ 8.8B 100%    0/s ] 92G   ways: [ 993M 100%    0/s ] rels: [  11M 100% 9.8k/s ] features: [ 3.3B  84k/s ] 233G  blocks: [  43k 100%    2/s ]
    cpus: 16.4 gc:  0% heap: 137G/214G direct: 54M postGC: 110G relInfo: 573M mpGeoms: 10G  
    read( -%) ->   (0/262) -> processk) -> write( -%  -%  -%  -%  -%  -%)
0:11:06 DEB [osm_pass2] - Processed 43,182 blocks:
0:11:06 DEB [osm_pass2] -   nodes: 8,876,780,887 (150M/s) in 59s cpu:2h6m27s gc:4s avg:128.3
0:11:06 DEB [osm_pass2] -   ways: 993,607,585 (2.4M/s) in 6m43s cpu:16h19m39s gc:23s avg:145.8
0:11:06 DEB [osm_pass2] -   relations: 11,749,466 (124k/s) in 1m34s cpu:4h22m23s gc:3s avg:166.7
0:11:06 INF [osm_pass2] - Finished in 9m19s cpu:22h48m33s gc:29s avg:147
0:11:06 INF [osm_pass2] -   read     1x(11% 1m4s wait:7m20s done:49s)
0:11:06 INF [osm_pass2] -   process 174x(76% 7m6s block:10s wait:1m6s done:2s)
0:11:06 INF [osm_pass2] -   write    6x(70% 6m31s wait:2m6s)
0:11:06 INF [boundaries] - 
0:11:06 INF [boundaries] - Starting...
0:11:06 INF [boundaries] - Creating polygons for 218 boundaries
0:11:10 INF [boundaries] - Finished creating 218 country polygons
0:11:11 WAR [boundaries] - no left or right country for border between OSM country relations: [51477] around https://www.openstreetmap.org/#map=10/54.19118/7.52130
0:11:11 WAR [boundaries] - no left or right country for border between OSM country relations: [51477] around https://www.openstreetmap.org/#map=10/54.61356/12.41358
0:11:13 WAR [boundaries] - no left or right country for border between OSM country relations: [51477] around https://www.openstreetmap.org/#map=10/50.01340/6.13601
0:11:13 WAR [boundaries] - no left or right country for border between OSM country relations: [51477] around https://www.openstreetmap.org/#map=10/49.77642/6.51023
0:11:14 WAR [boundaries] - no left or right country for border between OSM country relations: [51477, 16239] around https://www.openstreetmap.org/#map=10/47.38554/10.16937
0:11:14 WAR [boundaries] - no left or right country for border between OSM country relations: [51477, 16239] around https://www.openstreetmap.org/#map=10/47.67866/12.16969
0:11:14 WAR [boundaries] - no left or right country for border between OSM country relations: [51477] around https://www.openstreetmap.org/#map=10/53.42387/6.88641
0:11:14 INF [boundaries] - Finished in 8s cpu:10s avg:1.2
0:11:14 INF [agg_stop] - 
0:11:14 INF [agg_stop] - Starting...
0:11:14 INF [agg_stop] - Processing 28687 agg_stop sets
0:11:14 INF [agg_stop] - Finished in 0.3s cpu:0.9s avg:3.4
0:11:14 INF - Deleting node.db to make room for output file
0:11:14 INF [sort] - 
0:11:14 INF [sort] - Starting...
0:11:14 INF [sort] - Grouped 226 chunks into 205
0:11:25 INF [sort] -  chunks: [  19 / 205   9% ] 237G 
    cpus: 54.2 gc: 10% heap: 171G/214G direct: 54M postGC: 171G
    -> (151/241) -> worker(20% 21% 17% 21% 18% 16% 19% 19% 14% 16% 17% 17% 16% 14% 16% 14% 15% 18% 14% 17% 14% 17%  5%  7% 14%  3%  3%  3%  3%  3%  0%  0%  0%  0%  0%)
0:11:35 INF [sort] -  chunks: [  37 / 205  18% ] 235G 
    cpus: 30.1 gc:  9% heap: 62G/214G direct: 54M postGC: 62G
    -> (133/241) -> worker( 4% 13% 13% 14% 16%  2% 11%  0%  2% 16%  1%  0%  0%  4%  0%  0%  0%  0%  0%  0%  0%  0%  9%  8%  0% 14% 16% 14% 15% 13% 14% 16% 16% 16% 13%)
0:11:46 INF [sort] -  chunks: [  52 / 205  25% ] 237G 
    cpus: 27.1 gc:  5% heap: 91G/214G direct: 54M postGC: 91G
    -> (118/241) -> worker(12%  0%  0%  0%  0% 15%  0% 11%  3%  0% 17% 17% 15% 13% 11% 17% 17% 11% 11%  4% 17% 16%  3%  3% 17%  0%  0%  2%  0%  0%  0%  0%  0%  0%  0%)
0:11:57 INF [sort] -  chunks: [  68 / 205  33% ] 234G 
    cpus: 26.2 gc:  4% heap: 34G/214G direct: 54M postGC: 34G
    -> (102/241) -> worker( 0%  1%  4% 13%  3%  0%  0%  0% 14%  1%  0%  0%  0%  0%  0%  0%  0%  0%  0% 13%  0%  0% 13% 14%  0% 16% 16% 10% 14% 16% 16% 17% 16%  4% 17%)
0:12:08 INF [sort] -  chunks: [  85 / 205  41% ] 235G 
    cpus: 30 gc:  6% heap: 60G/214G direct: 54M postGC: 60G
    ->  (85/241) -> worker(14% 13% 14%  0% 13% 17% 17% 18%  0% 16% 18% 17% 17% 17% 11% 16% 11%  3% 17%  0%  4%  4%  1%  1%  4%  0%  0%  0%  0%  0%  0%  0%  0% 14%  0%)
0:12:20 INF [sort] -  chunks: [ 101 / 205  49% ] 234G 
    cpus: 29.7 gc:  5% heap: 22G/214G direct: 54M postGC: 22G
    ->  (69/241) -> worker( 0%  1%  1%  2%  1%  0%  0%  0% 15%  0%  0%  0%  0%  0%  0%  0%  0% 13%  0% 15% 12% 13% 15% 14% 12% 13% 13% 15% 14% 13% 13% 16%  2%  0% 13%)
0:12:30 INF [sort] -  chunks: [ 120 / 205  59% ] 234G 
    cpus: 34 gc:  7% heap: 58G/214G direct: 54M postGC: 58G
    ->  (50/241) -> worker(18% 17% 18% 18% 18% 17% 19% 18%  0% 15% 19% 17% 15% 13% 18%  3% 15%  1% 17%  0%  2%  2%  2%  0%  3%  0%  0%  0%  1%  0%  0%  0% 16% 19%  0%)
0:12:40 INF [sort] -  chunks: [ 133 / 205  65% ] 234G 
    cpus: 28.9 gc:  5% heap: 42G/214G direct: 54M postGC: 34G
    ->  (37/241) -> worker( 0%  0%  2%  3%  0%  0%  0%  0% 18%  0%  0%  0%  0%  0%  0% 14%  0% 16%  0% 18% 15% 15% 15% 12% 14% 11%  4% 18%  4% 17% 19%  4%  0%  0%  4%)
0:12:51 INF [sort] -  chunks: [ 146 / 205  71% ] 237G 
    cpus: 35.4 gc:  7% heap: 31G/214G direct: 54M postGC: 31G
    ->  (24/241) -> worker(17% 16% 15% 13% 18% 18% 17%  1%  0% 17%  1%  1% 17%  5%  1%  0%  4%  0% 17%  0%  0%  0%  0%  0%  0%  0% 14%  0% 14%  0%  0%  7% 16% 18% 14%)
0:13:02 INF [sort] -  chunks: [ 163 / 205  80% ] 238G 
    cpus: 36.5 gc:  7% heap: 53G/214G direct: 54M postGC: 53G
    ->   (7/241) -> worker( 0%  0%  1%  2%  0%  0%  0% 11% 16%  0% 17% 12%  0% 11% 15% 17% 13% 17%  0% 16% 16% 17% 15% 14% 16%  5%  1% 13%  2% 16% 16%  3%  0%  0%  0%)
0:13:13 INF [sort] -  chunks: [ 184 / 205  90% ] 236G 
    cpus: 41.5 gc:  7% heap: 48G/214G direct: 54M postGC: 40G
    ->   (0/241) -> worker( -%  -%  -%  -%  -% 14%  -%  4%  0%  -%  2%  4%  -% 15% 13%  2% 16%  0%  -%  0%  0%  0%  1%  0%  3% 10%  -%  0%  -%  0%  0% 14%  -%  -%  -%)
0:13:20 INF [sort] -  chunks: [ 205 / 205 100% ] 233G 
    cpus: 35 gc:  7% heap: 70G/214G direct: 54M postGC: 65G
    ->   (0/241) -> worker( -%  -%  -%  -%  -%  -%  -%  -%  -%  -%  -%  -%  -%  -%  -%  -%  -%  -%  -%  -%  -%  -%  -%  -%  -%  -%  -%  -%  -%  -%  -%  -%  -%  -%  -%)
0:13:20 INF [sort] - Finished in 2m5s cpu:1h10m52s gc:8s avg:33.9
0:13:20 INF [sort] -   worker 35x(8% 10s wait:1m28s done:6s)
0:13:20 INF - read:737s write:355s sort:68s
0:13:20 INF [archive] - 
0:13:20 INF [archive] - Starting...
0:13:22 INF [archive:write] - Starting z0
0:13:22 INF [archive:write] - Finished z0 in 0s cpu:0.7s avg:532.1, now starting z1
0:13:22 INF [archive:write] - Finished z1 in 0s cpu:0.1s avg:24.6, now starting z2
0:13:23 INF [archive:write] - Finished z2 in 0.3s cpu:40s avg:136.1, now starting z3
0:13:23 INF [archive:write] - Finished z3 in 0s cpu:3s avg:164, now starting z4
0:13:25 INF [archive:write] - Finished z4 in 2s cpu:4m54s avg:150.3, now starting z5
0:13:25 INF [archive:write] - Finished z5 in 0s cpu:3s avg:175.8, now starting z6
0:13:27 INF [archive:write] - Finished z6 in 2s cpu:6m15s avg:164.6, now starting z7
0:13:31 INF [archive] -  features: [  48M   1% 4.8M/s ] 233G  tiles: [  14k 1.4k/s ] 107M 
    cpus: 153 gc: 22% heap: 48G/214G direct: 54M postGC: 22G
    read(69% 68%) -> merge(71%) ->   (0/10k) -> encode(72% 72% 73% 72% 73% 73% 68% 73% 71% 72% 72% 73% 72% 73% 68% 72% 71% 72% 73% 71% 70% 71% 71% 71% 73% 72% 72% 72% 72% 72% 73% 72% 73% 72% 74% 73% 72% 70% 72% 71% 73% 72% 71% 70% 71% 71% 73% 70% 70% 71% 73% 71% 72% 73% 71% 68% 72% 71% 68% 70% 71% 71% 71% 72% 71% 69% 73% 72% 70% 73% 70% 71% 69% 70% 72% 69% 72% 71% 73% 67% 71% 70% 70% 68% 70% 70% 71% 73% 70% 66% 71% 70% 67% 70% 72% 69% 71% 70% 69% 71% 69% 69% 67% 69% 67% 70% 71% 69% 72% 71% 71% 70% 70% 70% 67% 71% 70% 69% 71% 68% 67% 67% 70% 68% 69% 71% 70% 69% 69% 69% 70% 70% 68% 68% 67% 69% 70% 69% 68% 68% 68% 68% 70% 71% 68% 69% 67% 68% 68% 68% 70% 69% 67% 69% 70% 69% 68% 70% 70% 68% 69% 70% 69% 67% 66% 68% 74% 68% 69% 68% 68% 68% 67% 68% 67% 65% 66% 66%) -> (1.4k/10k) -> write( 2%)
    last tile: 7/77/41 (z7 85%) https://onthegomap.github.io/planetiler-demo/#7.5/53.32261/37.96875
0:13:31 INF [archive:write] - Finished z7 in 4s cpu:10m47s avg:151.7, now starting z8
0:13:38 INF [archive:write] - Finished z8 in 7s cpu:17m34s avg:154.4, now starting z9
0:13:41 INF [archive] -  features: [ 111M   3% 6.1M/s ] 233G  tiles: [ 122k  10k/s ] 611M 
    cpus: 137.7 gc: 10% heap: 42G/214G direct: 54M postGC: 27G
    read(87% 89%) -> merge(88%) ->   (0/10k) -> encode(72% 71% 64% 68% 71% 74% 70% 77% 76% 69% 73% 85% 65% 66% 68% 69% 69% 70% 72% 70% 68% 68% 70% 72% 70% 72% 74% 73% 71% 71% 71% 66% 73% 74% 68% 70% 65% 69% 70% 70% 73% 71% 76% 77% 73% 70% 61% 68% 72% 63% 69% 71% 64% 58% 66% 73% 69% 70% 68% 71% 66% 70% 69% 74% 62% 76% 64% 67% 61% 72% 60% 70% 74% 68% 68% 66% 73% 75% 67% 69% 70% 69% 69% 66% 64% 72% 69% 72% 73% 72% 73% 74% 66% 74% 66% 76% 72% 71% 73% 73% 71% 73% 73% 66% 60% 70% 74% 70% 75% 71% 65% 77% 71% 71% 66% 70% 72% 69% 73% 72% 64% 73% 72% 66% 72% 67% 65% 76% 69% 75% 67% 68% 73% 67% 71% 70% 73% 64% 72% 68% 64% 68% 75% 75% 70% 63% 69% 67% 65% 69% 73% 68% 64% 76% 66% 74% 70% 74% 73% 71% 75% 70% 83% 71% 67% 70% 74% 67% 71% 72% 63% 68% 66% 64% 68% 65% 74% 73%) -> (2.7k/10k) -> write( 5%)
    last tile: 9/123/172 (z9 21%) https://onthegomap.github.io/planetiler-demo/#9.5/50.5129/-93.16406
0:13:45 INF [archive:write] - Finished z9 in 7s cpu:16m22s avg:145.3, now starting z10
0:13:51 INF [archive] -  features: [ 175M   5% 6.3M/s ] 233G  tiles: [ 495k  37k/s ] 1.6G 
    cpus: 138.2 gc:  6% heap: 102G/214G direct: 54M postGC: 31G
    read(92% 89%) -> merge(90%) ->   (4/10k) -> encode(71% 76% 76% 72% 73% 76% 69% 66% 70% 69% 71% 75% 72% 70% 73% 72% 71% 71% 73% 71% 74% 73% 73% 72% 74% 72% 73% 71% 72% 72% 74% 77% 73% 69% 71% 74% 76% 68% 70% 73% 70% 72% 71% 73% 73% 70% 74% 70% 71% 73% 73% 71% 72% 72% 73% 70% 73% 71% 76% 71% 70% 72% 73% 73% 69% 73% 73% 75% 92% 72% 74% 76% 75% 76% 91% 70% 75% 73% 72% 74% 71% 71% 74% 72% 74% 71% 72% 70% 67% 73% 72% 76% 71% 73% 69% 72% 72% 76% 72% 72% 68% 71% 75% 73% 69% 72% 73% 91% 73% 68% 69% 72% 72% 73% 68% 69% 74% 74% 70% 71% 74% 78% 69% 71% 73% 72% 70% 73% 75% 70% 70% 70% 71% 76% 73% 73% 66% 71% 69% 74% 74% 69% 71% 72% 73% 74% 71% 71% 75% 70% 72% 72% 68% 72% 72% 71% 76% 70% 75% 73% 71% 73% 71% 71% 74% 70% 72% 76% 69% 72% 72% 73% 72% 74% 73% 72% 69% 78%) -> (4.9k/10k) -> write(12%)
    last tile: 10/172/399 (z10 20%) https://onthegomap.github.io/planetiler-demo/#10.5/36.73875/-119.35547
0:14:00 INF [archive:write] - Finished z10 in 15s cpu:22m36s gc:1s avg:89.8, now starting z11
0:14:01 INF [archive] -  features: [ 238M   7% 6.2M/s ] 233G  tiles: [ 2.7M 223k/s ] 3.8G 
    cpus: 70.8 gc:  7% heap: 142G/214G direct: 54M postGC: 42G
    read(65% 59%) -> merge(67%) ->   (0/10k) -> encode(32% 32% 33% 31% 34% 34% 32% 35% 33% 30% 33% 30% 35% 35% 51% 34% 37% 32% 36% 34% 33% 35% 33% 34% 40% 35% 33% 34% 31% 36% 32% 32% 35% 34% 31% 34% 32% 35% 34% 30% 54% 33% 33% 31% 33% 33% 34% 34% 31% 36% 58% 34% 31% 32% 31% 36% 31% 34% 36% 33% 33% 32% 37% 34% 34% 32% 33% 39% 39% 29% 39% 35% 35% 33% 32% 35% 34% 31% 37% 37% 30% 33% 38% 32% 39% 32% 30% 31% 34% 33% 36% 37% 32% 31% 31% 39% 34% 34% 33% 33% 35% 34% 36% 31% 36% 35% 33% 81% 35% 28% 42% 32% 32% 30% 38% 32% 30% 34% 35% 35% 31% 32% 33% 31% 33% 33% 32% 33% 33% 36% 31% 33% 31% 36% 34% 33% 38% 33% 30% 35% 36% 32% 32% 32% 35% 33% 34% 32% 37% 33% 41% 32% 29% 29% 39% 36% 31% 29% 48% 36% 36% 34% 35% 34% 31% 50% 33% 36% 39% 35% 37% 36% 34% 34% 30% 38% 33% 30%) -> (3.9k/10k) -> write(20%)
    last tile: 11/662/1245 (z11 47%) https://onthegomap.github.io/planetiler-demo/#11.5/-36.24424/-63.54492
0:14:06 INF [archive:write] - Finished z11 in 6s cpu:8m32s avg:88.6, now starting z12
0:14:11 INF [archive] -  features: [ 335M  10% 9.6M/s ] 233G  tiles: [ 7.6M 485k/s ] 7.7G 
    cpus: 88.4 gc:  4% heap: 48G/214G direct: 54M postGC: 36G
    read(88% 95%) -> merge(93%) ->   (0/10k) -> encode(44% 48% 49% 42% 49% 48% 49% 44% 49% 42% 47% 42% 48% 44% 46% 49% 41% 42% 49% 47% 46% 47% 49% 46% 48% 47% 44% 41% 44% 48% 44% 45% 42% 46% 46% 46% 49% 46% 47% 44% 47% 49% 45% 44% 44% 45% 47% 43% 45% 41% 45% 47% 45% 45% 46% 46% 46% 41% 45% 44% 45% 46% 44% 42% 45% 49% 44% 52% 45% 43% 50% 41% 44% 47% 45% 43% 45% 48% 42% 47% 46% 43% 46% 46% 47% 48% 47% 48% 46% 45% 47% 49% 44% 48% 47% 47% 44% 47% 50% 47% 42% 46% 51% 45% 46% 44% 46% 43% 48% 43% 43% 47% 47% 47% 48% 46% 43% 48% 44% 47% 48% 45% 43% 43% 47% 46% 44% 47% 47% 40% 45% 49% 49% 47% 49% 46% 47% 44% 47% 45% 45% 48% 48% 47% 41% 48% 45% 44% 46% 44% 48% 48% 47% 44% 48% 45% 41% 43% 44% 44% 44% 40% 42% 41% 48% 46% 44% 46% 46% 49% 46% 44% 48% 43% 43% 48% 47% 50%) -> (912/10k) -> write(45%)
    last tile: 12/686/1597 (z12 20%) https://onthegomap.github.io/planetiler-demo/#12.5/36.77408/-119.66309
0:14:21 INF [archive] -  features: [ 448M  13%  11M/s ] 233G  tiles: [  14M 709k/s ] 10G  
    cpus: 66.1 gc:  2% heap: 75G/214G direct: 54M postGC: 36G
    read(97% 94%) -> merge(94%) ->   (0/10k) -> encode(32% 35% 36% 33% 32% 37% 33% 35% 35% 34% 36% 38% 32% 32% 32% 34% 36% 32% 37% 35% 35% 33% 34% 33% 34% 34% 34% 33% 32% 33% 36% 34% 31% 30% 35% 33% 36% 31% 31% 33% 33% 34% 34% 33% 42% 34% 35% 32% 34% 31% 32% 33% 34% 35% 30% 32% 34% 30% 31% 35% 32% 39% 30% 34% 31% 40% 38% 33% 36% 32% 30% 32% 37% 33% 35% 33% 40% 35% 31% 33% 34% 33% 35% 40% 34% 34% 33% 31% 36% 37% 34% 35% 34% 32% 33% 33% 31% 35% 36% 32% 40% 31% 36% 34% 33% 38% 37% 38% 37% 34% 34% 35% 31% 32% 35% 33% 31% 34% 32% 32% 33% 36% 37% 34% 31% 34% 33% 31% 38% 32% 40% 35% 35% 34% 31% 34% 32% 38% 33% 33% 34% 31% 33% 33% 35% 33% 35% 34% 35% 40% 41% 33% 33% 35% 30% 33% 40% 34% 32% 31% 36% 40% 37% 32% 34% 35% 33% 36% 31% 31% 36% 33% 34% 33% 35% 36% 32% 34%) -> (1.2k/10k) -> write(43%)
    last tile: 12/3026/1762 (z12 82%) https://onthegomap.github.io/planetiler-demo/#12.5/24.32707/86.00098
0:14:31 INF [archive] -  features: [ 541M  16% 9.2M/s ] 233G  tiles: [  15M  73k/s ] 13G  
    cpus: 65.5 gc:  2% heap: 88G/214G direct: 54M postGC: 37G
    read(98% 79%) -> merge(87%) -> (829/10k) -> encode(38% 36% 36% 30% 35% 36% 33% 34% 35% 37% 36% 35% 33% 36% 34% 30% 35% 31% 34% 36% 34% 35% 33% 34% 35% 34% 32% 38% 34% 38% 33% 31% 41% 35% 27% 35% 36% 34% 35% 34% 37% 36% 36% 33% 37% 37% 38% 35% 36% 34% 34% 38% 36% 35% 32% 35% 31% 37% 33% 35% 36% 28% 36% 33% 39% 34% 35% 33% 39% 34% 38% 35% 36% 39% 34% 35% 35% 33% 33% 33% 30% 33% 33% 35% 37% 36% 35% 35% 32% 33% 34% 32% 31% 31% 36% 32% 36% 36% 31% 34% 31% 36% 29% 33% 32% 32% 33% 35% 31% 34% 38% 37% 37% 34% 37% 31% 34% 34% 31% 31% 33% 35% 33% 35% 35% 38% 34% 34% 32% 32% 36% 34% 38% 34% 31% 36% 36% 36% 31% 31% 33% 39% 30% 35% 37% 33% 30% 29% 37% 34% 32% 32% 35% 36% 35% 32% 32% 32% 34% 35% 33% 34% 35% 36% 31% 38% 35% 36% 35% 36% 34% 32% 32% 30% 37% 35% 33% 37%) -> (1.6k/10k) -> write(27%)
    last tile: 12/2771/1512 (z12 87%) https://onthegomap.github.io/planetiler-demo/#12.5/42.52069/63.58887
0:14:32 INF [archive:write] - Finished z12 in 26s cpu:30m avg:68.2, now starting z13
0:14:41 INF [archive] -  features: [ 593M  18% 5.1M/s ] 233G  tiles: [  25M   1M/s ] 14G  
    cpus: 135.3 gc:  9% heap: 76G/214G direct: 54M postGC: 44G
    read(82% 78%) -> merge(86%) ->  (4k/10k) -> encode(69% 71% 67% 68% 71% 69% 69% 70% 70% 69% 70% 69% 70% 70% 71% 70% 69% 66% 71% 69% 70% 69% 69% 70% 69% 70% 69% 69% 68% 70% 70% 68% 70% 70% 70% 70% 70% 69% 68% 68% 70% 70% 70% 69% 70% 68% 70% 69% 69% 70% 69% 68% 70% 69% 69% 69% 69% 69% 72% 69% 66% 69% 70% 72% 68% 69% 71% 68% 70% 69% 70% 70% 70% 70% 70% 70% 68% 70% 70% 70% 69% 68% 69% 69% 70% 70% 69% 69% 69% 67% 70% 69% 69% 69% 69% 70% 70% 70% 69% 70% 71% 70% 70% 70% 70% 70% 70% 69% 70% 67% 69% 70% 67% 68% 68% 69% 69% 70% 69% 68% 68% 69% 69% 71% 69% 70% 69% 70% 70% 69% 69% 70% 70% 69% 69% 70% 67% 71% 69% 69% 69% 69% 69% 70% 70% 71% 70% 67% 68% 69% 71% 69% 71% 69% 70% 69% 70% 70% 67% 69% 69% 69% 65% 66% 69% 69% 69% 69% 69% 71% 69% 68% 68% 69% 70% 69% 70% 70%) -> (6.6k/10k) -> write(33%)
    last tile: 13/2421/2930 (z13 13%) https://onthegomap.github.io/planetiler-demo/#13.5/45.50634/-73.58643
0:14:51 INF [archive] -  features: [ 623M  19% 2.9M/s ] 233G  tiles: [  26M 121k/s ] 15G  
    cpus: 168.1 gc: 12% heap: 79G/214G direct: 54M postGC: 49G
    read(65% 67%) -> merge(77%) -> (8.1k/10k) -> encode(87% 87% 86% 85% 87% 87% 87% 85% 85% 87% 86% 87% 86% 86% 87% 86% 86% 85% 87% 87% 87% 86% 87% 87% 87% 87% 86% 87% 87% 84% 87% 85% 87% 87% 87% 87% 86% 86% 87% 85% 86% 87% 87% 86% 87% 87% 87% 87% 86% 87% 87% 87% 87% 87% 87% 86% 87% 86% 87% 86% 86% 87% 86% 87% 86% 86% 87% 85% 86% 87% 87% 87% 82% 86% 86% 86% 85% 87% 87% 86% 86% 86% 86% 87% 87% 87% 87% 86% 86% 85% 87% 85% 86% 86% 85% 85% 87% 87% 85% 83% 87% 83% 85% 86% 87% 86% 87% 87% 86% 86% 87% 86% 87% 87% 87% 86% 82% 87% 87% 86% 86% 85% 86% 87% 86% 87% 87% 87% 86% 87% 86% 87% 86% 87% 87% 86% 87% 86% 86% 87% 87% 87% 86% 87% 86% 86% 86% 86% 86% 87% 85% 87% 87% 84% 86% 86% 86% 86% 86% 87% 87% 87% 87% 87% 85% 87% 87% 86% 87% 87% 86% 87% 86% 86% 86% 87% 86% 87%) ->  (9k/10k) -> write(17%)
    last tile: 13/4090/2723 (z13 15%) https://onthegomap.github.io/planetiler-demo/#13.5/51.52241/-0.2417
0:15:01 INF [archive] -  features: [ 654M  20%   3M/s ] 233G  tiles: [  26M 6.3k/s ] 15G  
    cpus: 168.8 gc: 12% heap: 71G/214G direct: 54M postGC: 55G
    read(36% 33%) -> merge(48%) ->  (8k/10k) -> encode(87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 86% 87% 86% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 85% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 86% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 86% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 85% 87% 87% 87% 87% 87% 87% 85% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87%) -> (10k/10k) -> write( 2%)
    last tile: 13/4083/2952 (z13 15%) https://onthegomap.github.io/planetiler-demo/#13.5/44.82471/-0.54932
0:15:12 INF [archive] -  features: [ 680M  20% 2.5M/s ] 233G  tiles: [  27M  91k/s ] 15G  
    cpus: 169.7 gc: 10% heap: 176G/214G direct: 54M postGC: 59G
    read(27% 26%) -> merge(34%) -> (7.9k/10k) -> encode(88% 88% 88% 88% 88% 88% 88% 88% 87% 88% 88% 88% 88% 88% 89% 88% 88% 88% 88% 88% 88% 88% 88% 88% 87% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 89% 88% 88% 88% 88% 88% 88% 88% 88% 88% 86% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 87% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 87% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 86% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 86% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 87% 88% 88% 86% 88% 88% 88% 88% 88% 87% 88% 88% 88% 88% 87% 88% 87% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 86% 88% 88%) -> (10k/10k) -> write( 8%)
    last tile: 13/4059/3812 (z13 17%) https://onthegomap.github.io/planetiler-demo/#13.5/12.36147/-1.604
0:15:22 INF [archive] -  features: [ 724M  22% 4.3M/s ] 233G  tiles: [  28M 104k/s ] 16G  
    cpus: 170.7 gc:  9% heap: 127G/214G direct: 54M postGC: 27G
    read(30% 28%) -> merge(36%) -> (5.5k/10k) -> encode(91% 90% 90% 92% 90% 87% 88% 92% 91% 90% 91% 90% 91% 92% 91% 90% 90% 92% 91% 89% 92% 92% 91% 91% 90% 89% 92% 89% 90% 92% 91% 90% 90% 91% 90% 90% 90% 91% 91% 89% 91% 91% 90% 89% 91% 89% 85% 90% 92% 92% 91% 91% 88% 90% 90% 89% 92% 89% 89% 88% 91% 91% 92% 92% 91% 89% 91% 89% 89% 85% 91% 91% 91% 90% 91% 92% 89% 91% 91% 87% 91% 91% 91% 91% 91% 92% 90% 91% 87% 91% 92% 90% 91% 89% 90% 89% 91% 90% 91% 91% 92% 91% 88% 90% 91% 87% 90% 91% 91% 91% 89% 90% 91% 90% 89% 89% 88% 92% 91% 91% 88% 91% 89% 91% 90% 89% 91% 91% 91% 91% 91% 92% 91% 88% 92% 92% 90% 91% 92% 90% 91% 90% 91% 91% 90% 92% 88% 91% 92% 92% 90% 92% 90% 90% 89% 90% 90% 89% 89% 89% 88% 91% 91% 88% 91% 89% 92% 87% 91% 91% 92% 89% 91% 90% 90% 91% 91% 92%) -> (8.4k/10k) -> write(10%)
    last tile: 13/2270/3104 (z13 18%) https://onthegomap.github.io/planetiler-demo/#13.5/39.89288/-80.22217
0:15:32 INF [archive] -  features: [ 758M  23% 3.2M/s ] 233G  tiles: [  29M  26k/s ] 16G  
    cpus: 169.6 gc: 11% heap: 109G/214G direct: 54M postGC: 36G
    read(41% 40%) -> merge(66%) -> (5.8k/10k) -> encode(88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 87% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 87% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 87% 88% 88% 88% 88% 88% 88% 88% 86% 88% 88% 88% 88% 88% 87% 87% 87% 88% 88% 88% 85% 88% 86% 88% 88% 88% 88% 88% 88% 88% 88% 87% 88% 87% 88% 88% 88% 88% 87% 88% 88% 87% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 86% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 87% 88% 88% 88% 88% 88% 87% 88% 88% 88% 87% 88% 88% 88% 88% 88% 88% 88% 88% 87% 87% 88% 88% 88% 88% 88% 88% 88% 88% 87% 88% 88% 88% 87% 87% 86% 88% 88% 88% 88% 88% 88% 88% 86% 87% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 86% 88% 88% 88%) -> (8.9k/10k) -> write( 7%)
    last tile: 13/2393/3846 (z13 19%) https://onthegomap.github.io/planetiler-demo/#13.5/10.89804/-74.81689
0:15:42 INF [archive] -  features: [ 790M  24% 3.1M/s ] 233G  tiles: [  30M  85k/s ] 16G  
    cpus: 168.8 gc: 11% heap: 54G/214G direct: 54M postGC: 38G
    read(11% 11%) -> merge(25%) -> (7.7k/10k) -> encode(88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 87% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 87% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 87% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 87% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88%) -> (10k/10k) -> write( 7%)
    last tile: 13/1430/3312 (z13 20%) https://onthegomap.github.io/planetiler-demo/#13.5/32.52829/-117.13623
0:15:52 INF [archive] -  features: [ 847M  25% 5.5M/s ] 233G  tiles: [  40M   1M/s ] 18G  
    cpus: 110.5 gc:  6% heap: 72G/214G direct: 54M postGC: 44G
    read(12%  9%) -> merge(15%) ->  (15/10k) -> encode(61% 60% 62% 62% 57% 70% 59% 57% 60% 59% 55% 58% 60% 58% 59% 58% 59% 58% 58% 58% 59% 59% 60% 57% 58% 57% 60% 58% 62% 60% 61% 56% 59% 58% 58% 57% 56% 58% 57% 58% 60% 61% 60% 60% 59% 59% 59% 58% 57% 58% 63% 56% 56% 59% 56% 57% 59% 62% 62% 55% 61% 59% 57% 62% 58% 61% 55% 59% 56% 60% 59% 59% 59% 60% 62% 57% 56% 58% 57% 59% 57% 62% 60% 59% 56% 60% 57% 55% 56% 59% 61% 58% 60% 57% 57% 59% 59% 59% 59% 61% 60% 55% 58% 57% 56% 59% 62% 59% 57% 56% 57% 60% 61% 61% 59% 60% 58% 61% 57% 56% 60% 56% 57% 59% 58% 56% 57% 58% 63% 55% 58% 56% 56% 56% 56% 62% 63% 57% 57% 60% 59% 57% 59% 59% 58% 57% 58% 55% 57% 59% 58% 57% 59% 55% 56% 59% 59% 61% 58% 60% 60% 58% 57% 58% 58% 60% 58% 61% 57% 61% 57% 58% 59% 59% 61% 55% 59% 57%) -> (2.8k/10k) -> write(33%)
    last tile: 13/3645/5644 (z13 44%) https://onthegomap.github.io/planetiler-demo/#13.5/-56.0843/-19.79736
0:16:02 INF [archive] -  features: [ 884M  26% 3.6M/s ] 233G  tiles: [  43M 276k/s ] 18G  
    cpus: 169.6 gc: 11% heap: 123G/214G direct: 54M postGC: 51G
    read(41% 43%) -> merge(70%) -> (1.7k/10k) -> encode(88% 88% 88% 87% 87% 88% 88% 88% 87% 88% 87% 87% 87% 88% 87% 88% 88% 88% 88% 88% 88% 87% 88% 88% 88% 88% 87% 88% 87% 88% 88% 88% 87% 88% 87% 88% 88% 87% 88% 88% 88% 88% 88% 88% 88% 88% 87% 88% 88% 88% 88% 88% 88% 87% 88% 87% 88% 88% 87% 86% 88% 87% 88% 87% 88% 87% 87% 88% 88% 88% 87% 88% 87% 88% 88% 88% 87% 88% 87% 88% 87% 88% 88% 86% 88% 87% 87% 87% 86% 87% 86% 87% 88% 88% 87% 88% 88% 88% 87% 88% 88% 87% 88% 88% 88% 87% 88% 88% 88% 88% 88% 88% 87% 88% 88% 86% 88% 87% 88% 87% 86% 88% 88% 87% 88% 88% 88% 87% 88% 88% 87% 87% 88% 87% 88% 87% 86% 87% 88% 87% 88% 88% 87% 88% 87% 87% 86% 87% 88% 87% 87% 88% 88% 88% 88% 88% 88% 87% 87% 88% 88% 87% 88% 87% 88% 88% 88% 88% 87% 86% 87% 87% 88% 88% 88% 87% 88% 88%) -> (7.1k/10k) -> write( 6%)
    last tile: 13/3040/4647 (z13 47%) https://onthegomap.github.io/planetiler-demo/#13.5/-23.54384/-46.38428
0:16:13 INF [archive] -  features: [ 907M  27% 2.3M/s ] 233G  tiles: [  43M  78k/s ] 19G  
    cpus: 168.9 gc: 12% heap: 74G/214G direct: 54M postGC: 55G
    read(36% 36%) -> merge(44%) -> (3.8k/10k) -> encode(88% 88% 87% 88% 88% 87% 88% 88% 88% 86% 88% 87% 87% 87% 87% 88% 88% 87% 88% 87% 87% 87% 87% 87% 88% 87% 87% 88% 86% 87% 87% 87% 87% 87% 87% 86% 88% 87% 88% 87% 86% 88% 87% 87% 87% 87% 87% 88% 87% 87% 88% 86% 86% 87% 87% 87% 87% 88% 87% 87% 88% 86% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 88% 88% 86% 87% 88% 88% 87% 87% 87% 87% 88% 87% 87% 86% 87% 88% 88% 88% 87% 87% 88% 87% 87% 87% 87% 88% 87% 87% 88% 87% 87% 87% 87% 87% 87% 87% 87% 87% 84% 86% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 86% 87% 88% 87% 87% 88% 87% 87% 86% 85% 87% 87% 88% 87% 88% 87% 87% 87% 87% 85% 87% 88% 87% 87% 87% 87% 87% 88% 87% 87% 87% 87% 87% 86% 87% 87% 88% 87% 87% 87% 87% 87% 86% 87% 88% 87% 87% 87% 88% 87% 87% 87% 87% 87%) -> (9.3k/10k) -> write(18%)
    last tile: 13/3034/4578 (z13 48%) https://onthegomap.github.io/planetiler-demo/#13.5/-20.73556/-46.64795
0:16:23 INF [archive] -  features: [ 932M  28% 2.4M/s ] 233G  tiles: [  44M  17k/s ] 19G  
    cpus: 170.1 gc:  9% heap: 130G/214G direct: 54M postGC: 24G
    read( 3%  3%) -> merge( 5%) -> (3.4k/10k) -> encode(89% 90% 88% 88% 90% 90% 90% 90% 90% 87% 90% 88% 89% 90% 89% 90% 89% 90% 90% 90% 90% 90% 89% 90% 89% 90% 87% 90% 90% 88% 89% 87% 89% 90% 88% 88% 87% 89% 88% 90% 89% 89% 89% 89% 89% 90% 90% 89% 90% 89% 88% 90% 90% 90% 87% 90% 90% 88% 88% 86% 90% 90% 89% 88% 90% 90% 88% 90% 89% 90% 89% 86% 87% 87% 90% 88% 90% 90% 90% 88% 90% 89% 88% 86% 90% 89% 87% 88% 89% 90% 90% 88% 89% 90% 87% 89% 90% 88% 89% 90% 90% 89% 87% 89% 86% 89% 90% 88% 88% 89% 88% 90% 88% 90% 88% 90% 88% 90% 89% 89% 90% 90% 90% 90% 90% 88% 88% 89% 90% 90% 88% 88% 89% 90% 88% 87% 90% 90% 90% 88% 90% 90% 89% 90% 90% 90% 90% 90% 87% 89% 88% 90% 90% 87% 90% 89% 89% 89% 90% 90% 88% 90% 90% 90% 90% 88% 89% 89% 88% 90% 90% 90% 90% 89% 89% 90% 88% 90%) -> (10k/10k) -> write( 5%)
    last tile: 13/3219/4181 (z13 49%) https://onthegomap.github.io/planetiler-demo/#13.5/-3.75463/-38.51807
0:16:33 INF [archive] -  features: [ 965M  29% 3.2M/s ] 233G  tiles: [  46M 190k/s ] 19G  
    cpus: 165.5 gc:  9% heap: 72G/214G direct: 54M postGC: 31G
    read(31% 29%) -> merge(39%) -> (2.1k/10k) -> encode(90% 86% 90% 90% 88% 87% 87% 91% 87% 85% 86% 88% 87% 86% 85% 87% 85% 89% 84% 90% 86% 85% 87% 86% 89% 86% 87% 87% 91% 89% 88% 87% 89% 89% 86% 87% 88% 84% 85% 87% 88% 91% 89% 85% 85% 85% 84% 85% 90% 85% 85% 89% 86% 86% 87% 88% 88% 88% 86% 87% 90% 88% 87% 87% 88% 91% 87% 87% 88% 87% 91% 90% 87% 85% 88% 88% 89% 87% 87% 86% 88% 87% 87% 91% 89% 87% 87% 86% 87% 88% 90% 88% 91% 87% 87% 89% 88% 87% 90% 87% 85% 86% 87% 87% 87% 87% 85% 88% 91% 89% 86% 86% 88% 91% 87% 87% 85% 86% 87% 87% 86% 89% 88% 86% 89% 86% 89% 87% 87% 87% 87% 88% 91% 87% 87% 84% 88% 89% 85% 86% 87% 85% 89% 88% 87% 87% 87% 86% 86% 86% 87% 86% 85% 86% 85% 84% 88% 86% 85% 91% 87% 88% 86% 87% 90% 86% 86% 91% 88% 87% 86% 89% 85% 90% 90% 88% 88% 88%) -> (10k/10k) -> write(17%)
    last tile: 13/4987/4252 (z13 52%) https://onthegomap.github.io/planetiler-demo/#13.5/-6.86098/39.17725
0:16:43 INF [archive] -  features: [ 980M  29% 1.4M/s ] 233G  tiles: [  53M 702k/s ] 20G  
    cpus: 169.1 gc: 12% heap: 121G/214G direct: 54M postGC: 36G
    read(25% 27%) -> merge(32%) -> (4.1k/10k) -> encode(88% 88% 88% 88% 88% 88% 88% 87% 87% 87% 88% 85% 88% 86% 88% 88% 88% 88% 87% 88% 88% 88% 88% 88% 88% 88% 88% 87% 87% 88% 88% 87% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 87% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 87% 88% 87% 88% 88% 88% 88% 88% 88% 88% 88% 87% 88% 88% 88% 88% 88% 87% 88% 87% 88% 88% 87% 88% 88% 88% 88% 88% 87% 88% 88% 88% 88% 84% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 87% 88% 88% 88% 88% 88% 88% 87% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 85% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 87% 88% 88% 87% 88% 85% 86% 88% 88% 88% 88% 88% 87% 86% 88% 88% 88% 88% 88% 88% 87% 88% 86% 86% 88% 88% 87% 87% 88% 85% 88% 88% 88% 88% 86% 87% 86% 88% 88% 88% 88% 88% 88% 88% 88%) -> (5.4k/10k) -> write(18%)
    last tile: 13/6526/4240 (z13 73%) https://onthegomap.github.io/planetiler-demo/#13.5/-6.33714/106.80908
0:16:53 INF [archive] -  features: [ 999M  30% 1.9M/s ] 233G  tiles: [  53M 1.3k/s ] 20G  
    cpus: 168.2 gc: 13% heap: 48G/214G direct: 54M postGC: 43G
    read(51% 51%) -> merge(69%) -> (9.1k/10k) -> encode(86% 86% 86% 86% 86% 86% 83% 86% 86% 86% 86% 86% 86% 83% 86% 86% 86% 86% 86% 84% 86% 84% 84% 86% 86% 86% 86% 86% 85% 86% 86% 84% 85% 86% 86% 86% 86% 86% 86% 86% 86% 86% 86% 86% 86% 86% 85% 86% 86% 85% 86% 85% 86% 85% 86% 86% 86% 86% 86% 86% 86% 86% 86% 83% 86% 86% 86% 85% 86% 86% 84% 85% 85% 85% 86% 86% 86% 86% 86% 86% 85% 86% 86% 86% 86% 86% 86% 86% 86% 85% 86% 86% 86% 86% 86% 86% 86% 86% 84% 86% 86% 86% 85% 86% 86% 86% 86% 86% 83% 86% 84% 86% 84% 86% 85% 86% 86% 86% 86% 85% 86% 86% 85% 83% 86% 86% 86% 86% 86% 86% 86% 86% 86% 86% 86% 86% 84% 86% 85% 86% 86% 86% 86% 86% 86% 86% 86% 86% 86% 86% 86% 86% 86% 86% 86% 86% 86% 86% 86% 84% 86% 86% 86% 86% 86% 86% 86% 83% 85% 86% 86% 86% 86% 86% 86% 86% 86% 86%) -> (10k/10k) -> write( 1%)
    last tile: 13/6607/4275 (z13 73%) https://onthegomap.github.io/planetiler-demo/#13.5/-7.86338/110.36865
0:17:03 INF [archive] -  features: [   1B  31% 2.7M/s ] 233G  tiles: [  53M 7.7k/s ] 20G  
    cpus: 169.1 gc: 10% heap: 107G/214G direct: 54M postGC: 46G
    read(13% 14%) -> merge(18%) -> (6.6k/10k) -> encode(89% 89% 89% 89% 89% 88% 89% 89% 89% 88% 89% 88% 89% 89% 89% 88% 89% 89% 89% 89% 89% 89% 89% 89% 88% 89% 89% 89% 89% 88% 89% 89% 88% 88% 89% 88% 89% 88% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 88% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 88% 89% 89% 89% 89% 89% 89% 89% 89% 89% 88% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 88% 88% 88% 89% 89% 89% 89% 89% 89% 89% 89% 88% 89% 89% 89% 89% 89% 89% 88% 89% 89% 88% 89% 89% 89% 89% 89% 88% 89% 89% 89% 88% 88% 88% 88% 87% 89% 89% 89% 89% 89% 89% 89% 89% 89% 88% 89% 89% 89% 89% 88% 87% 89% 89% 89% 88% 88% 89% 89% 88% 89% 88% 89% 89% 89% 89% 89% 89% 87% 89% 89% 87% 89% 87% 88%) -> (10k/10k) -> write( 2%)
    last tile: 13/6660/4261 (z13 73%) https://onthegomap.github.io/planetiler-demo/#13.5/-7.2535/112.69775
0:17:14 INF [archive] -  features: [   1B  32% 2.8M/s ] 233G  tiles: [  56M 276k/s ] 20G  
    cpus: 161.1 gc:  9% heap: 132G/214G direct: 54M postGC: 49G
    read(31% 34%) -> merge(42%) -> (6.9k/10k) -> encode(86% 86% 82% 82% 86% 83% 85% 91% 84% 84% 82% 85% 85% 86% 85% 87% 85% 86% 85% 82% 84% 86% 81% 85% 86% 89% 86% 83% 84% 83% 83% 84% 83% 89% 83% 85% 82% 86% 85% 86% 84% 84% 88% 84% 85% 89% 86% 91% 84% 87% 84% 86% 85% 86% 87% 83% 83% 89% 86% 84% 87% 84% 90% 85% 84% 86% 87% 83% 84% 89% 84% 86% 83% 85% 83% 87% 87% 83% 89% 88% 82% 83% 81% 85% 87% 85% 84% 84% 83% 82% 88% 85% 84% 83% 82% 82% 86% 86% 86% 83% 85% 86% 87% 83% 85% 84% 84% 86% 84% 89% 86% 87% 84% 90% 85% 84% 86% 84% 83% 85% 87% 85% 82% 83% 82% 83% 87% 87% 86% 85% 84% 86% 82% 87% 87% 89% 83% 84% 83% 83% 87% 84% 81% 83% 83% 84% 88% 84% 84% 85% 85% 84% 84% 85% 85% 86% 85% 83% 87% 84% 84% 83% 81% 84% 86% 82% 83% 84% 83% 82% 83% 86% 84% 83% 82% 84% 83% 84%) -> (8.7k/10k) -> write(22%)
    last tile: 13/7319/2968 (z13 78%) https://onthegomap.github.io/planetiler-demo/#13.5/44.32385/141.65771
0:17:24 INF [archive] -  features: [   1B  33% 3.7M/s ] 233G  tiles: [  56M  79k/s ] 21G  
    cpus: 168.8 gc: 12% heap: 55G/214G direct: 54M postGC: 55G
    read(29% 32%) -> merge(37%) -> (6.7k/10k) -> encode(86% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 85% 87% 85% 85% 87% 87% 87% 87% 87% 87% 87% 87% 87% 86% 87% 87% 87% 87% 87% 87% 87% 87% 86% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 86% 87% 87% 87% 87% 87% 86% 87% 87% 87% 87% 86% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 85% 87% 87% 86% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 86% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 85% 87% 85% 86% 87% 85% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87% 87%) -> (10k/10k) -> write(18%)
    last tile: 13/6154/3542 (z13 80%) https://onthegomap.github.io/planetiler-demo/#13.5/23.62439/90.46143
0:17:34 INF [archive] -  features: [ 1.1B  34% 2.8M/s ] 233G  tiles: [  57M  46k/s ] 21G  
    cpus: 169.5 gc: 11% heap: 73G/214G direct: 54M postGC: 26G
    read(31% 30%) -> merge(47%) -> (7.7k/10k) -> encode(88% 85% 86% 87% 88% 88% 86% 87% 85% 88% 89% 85% 89% 88% 89% 88% 87% 88% 88% 88% 88% 88% 88% 88% 88% 84% 89% 85% 88% 85% 88% 87% 88% 88% 88% 88% 88% 87% 87% 88% 88% 88% 88% 86% 88% 88% 88% 88% 87% 88% 87% 89% 89% 89% 87% 88% 86% 88% 88% 86% 87% 85% 88% 87% 88% 89% 88% 89% 88% 88% 86% 88% 88% 85% 88% 87% 88% 86% 88% 87% 88% 88% 88% 87% 87% 88% 87% 88% 88% 86% 87% 88% 85% 86% 88% 88% 87% 86% 88% 87% 88% 87% 86% 88% 87% 86% 88% 86% 88% 88% 88% 88% 88% 88% 84% 88% 88% 87% 85% 86% 87% 88% 86% 88% 86% 87% 88% 87% 88% 87% 87% 87% 87% 84% 85% 87% 86% 86% 87% 88% 86% 88% 87% 88% 86% 88% 88% 86% 87% 88% 88% 87% 86% 84% 84% 87% 88% 88% 84% 88% 87% 87% 87% 88% 87% 88% 88% 88% 84% 85% 87% 87% 88% 87% 87% 86% 86% 86%) -> (10k/10k) -> write(16%)
    last tile: 13/6850/3761 (z13 81%) https://onthegomap.github.io/planetiler-demo/#13.5/14.54105/121.04736
0:17:44 INF [archive] -  features: [ 1.1B  35% 2.8M/s ] 233G  tiles: [  57M  65k/s ] 22G  
    cpus: 169.9 gc: 10% heap: 140G/214G direct: 54M postGC: 30G
    read(28% 26%) -> merge(36%) -> (8.4k/10k) -> encode(88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 87% 88% 87% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 87% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 87% 88% 88% 88% 88% 88% 88% 88% 87% 88% 87% 88% 88% 88% 88% 88% 88% 88% 88% 87% 88% 88% 88% 88% 88% 88% 88% 87% 88% 88% 88% 88% 88% 88% 88% 88% 88% 86% 88% 87% 88% 88% 88% 88% 88% 88% 88% 87% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 86% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 87% 88% 88% 88% 88% 88% 88% 88% 88% 88% 87% 87% 87% 88% 88% 87% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 87% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88%) -> (9.7k/10k) -> write(11%)
    last tile: 13/5883/3693 (z13 82%) https://onthegomap.github.io/planetiler-demo/#13.5/17.41354/78.55225
0:17:54 INF [archive] -  features: [ 1.1B  36% 3.4M/s ] 233G  tiles: [  58M  12k/s ] 22G  
    cpus: 169.5 gc: 11% heap: 88G/214G direct: 54M postGC: 35G
    read(34% 33%) -> merge(41%) -> (8.3k/10k) -> encode(89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 88% 88% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 86% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 88% 89% 89% 88% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 88% 89% 88% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 88% 88% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 85% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 87% 89% 89% 89% 89%) -> (10k/10k) -> write( 5%)
    last tile: 13/6039/3439 (z13 82%) https://onthegomap.github.io/planetiler-demo/#13.5/27.70298/85.40771
0:18:04 INF [archive] -  features: [ 1.2B  36% 2.5M/s ] 233G  tiles: [  58M  64k/s ] 23G  
    cpus: 170.4 gc: 10% heap: 39G/214G direct: 54M postGC: 38G
    read(20% 21%) -> merge(30%) -> (7.8k/10k) -> encode(90% 90% 90% 90% 90% 90% 90% 90% 90% 90% 90% 89% 89% 90% 90% 90% 90% 89% 90% 90% 87% 90% 90% 90% 89% 90% 90% 90% 90% 90% 90% 90% 90% 90% 90% 90% 90% 90% 90% 90% 90% 90% 90% 87% 90% 90% 90% 90% 90% 90% 90% 90% 90% 89% 90% 90% 90% 90% 90% 90% 90% 90% 90% 90% 90% 90% 89% 90% 90% 89% 90% 90% 90% 90% 90% 90% 90% 90% 90% 90% 90% 90% 90% 90% 90% 90% 90% 90% 90% 90% 90% 90% 90% 90% 90% 90% 90% 90% 90% 90% 90% 90% 90% 90% 90% 90% 90% 90% 89% 90% 90% 90% 90% 90% 90% 90% 90% 90% 90% 90% 90% 90% 90% 90% 90% 90% 90% 89% 90% 89% 90% 90% 90% 90% 90% 90% 89% 90% 90% 90% 90% 90% 90% 90% 90% 90% 89% 90% 90% 90% 90% 90% 90% 90% 90% 90% 90% 90% 90% 90% 90% 90% 90% 90% 90% 90% 90% 90% 90% 86% 89% 90% 90% 90% 90% 90% 90% 89%) -> (10k/10k) -> write(15%)
    last tile: 13/5126/4048 (z13 83%) https://onthegomap.github.io/planetiler-demo/#13.5/2.08694/45.28564
0:18:15 INF [archive] -  features: [ 1.2B  37%   2M/s ] 233G  tiles: [  59M  30k/s ] 23G  
    cpus: 171.2 gc:  8% heap: 111G/214G direct: 54M postGC: 41G
    read(29% 28%) -> merge(39%) -> (8.6k/10k) -> encode(91% 91% 91% 91% 91% 91% 91% 91% 91% 91% 91% 91% 91% 91% 91% 91% 91% 91% 91% 91% 91% 91% 91% 91% 90% 91% 91% 91% 91% 91% 91% 91% 91% 90% 91% 91% 91% 91% 91% 91% 90% 91% 91% 91% 91% 90% 91% 91% 91% 91% 91% 91% 91% 91% 91% 91% 91% 91% 91% 91% 91% 91% 91% 91% 91% 91% 91% 91% 91% 91% 91% 90% 91% 91% 91% 91% 91% 90% 91% 91% 91% 91% 90% 91% 91% 91% 91% 91% 91% 91% 90% 91% 91% 91% 91% 91% 90% 91% 91% 91% 90% 89% 91% 91% 91% 91% 89% 89% 91% 91% 90% 91% 91% 91% 91% 91% 91% 91% 91% 91% 91% 91% 91% 91% 90% 91% 91% 91% 91% 91% 91% 91% 91% 91% 91% 91% 91% 91% 91% 89% 91% 91% 91% 91% 91% 91% 91% 90% 91% 91% 91% 91% 91% 91% 91% 91% 91% 91% 91% 90% 89% 91% 91% 91% 91% 91% 91% 91% 91% 91% 90% 91% 91% 90% 91% 91% 91% 91%) -> (9.4k/10k) -> write(11%)
    last tile: 13/4319/3861 (z13 83%) https://onthegomap.github.io/planetiler-demo/#13.5/10.25006/9.82178
0:18:25 INF [archive] -  features: [ 1.2B  38% 3.2M/s ] 233G  tiles: [  59M  27k/s ] 23G  
    cpus: 170.1 gc: 10% heap: 66G/214G direct: 54M postGC: 46G
    read(38% 39%) -> merge(44%) -> (8.8k/10k) -> encode(90% 90% 90% 90% 90% 90% 89% 89% 89% 89% 89% 89% 89% 90% 90% 89% 90% 89% 90% 90% 89% 89% 89% 90% 89% 87% 89% 88% 89% 90% 89% 90% 88% 89% 90% 90% 90% 89% 89% 89% 89% 90% 90% 90% 89% 90% 90% 89% 89% 89% 88% 86% 90% 90% 90% 90% 90% 90% 89% 89% 90% 90% 89% 90% 90% 89% 90% 88% 90% 90% 89% 89% 90% 89% 89% 90% 87% 89% 90% 89% 89% 89% 89% 89% 89% 89% 89% 90% 90% 89% 89% 89% 89% 90% 90% 90% 87% 90% 89% 89% 90% 87% 89% 90% 87% 90% 90% 90% 90% 89% 90% 89% 90% 89% 89% 89% 90% 89% 89% 90% 90% 89% 88% 89% 89% 89% 89% 90% 87% 89% 89% 89% 89% 89% 90% 90% 89% 89% 89% 89% 90% 89% 90% 88% 90% 90% 90% 89% 88% 90% 87% 89% 90% 89% 89% 90% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 90% 89% 89% 88% 89% 89% 89% 90% 89%) -> (10k/10k) -> write( 8%)
    last tile: 13/4636/3160 (z13 84%) https://onthegomap.github.io/planetiler-demo/#13.5/37.97884/23.75244
0:18:35 INF [archive] -  features: [ 1.3B  39%   5M/s ] 233G  tiles: [  59M  44k/s ] 24G  
    cpus: 170.4 gc:  9% heap: 64G/214G direct: 54M postGC: 51G
    read(39% 40%) -> merge(48%) -> (7.3k/10k) -> encode(87% 90% 90% 89% 88% 90% 90% 90% 89% 90% 88% 89% 90% 90% 90% 90% 87% 90% 90% 90% 90% 90% 90% 90% 90% 90% 90% 90% 90% 90% 90% 90% 90% 89% 89% 89% 90% 90% 90% 90% 89% 89% 89% 89% 89% 90% 90% 90% 89% 89% 90% 90% 90% 90% 90% 90% 90% 89% 90% 89% 90% 90% 90% 90% 90% 90% 90% 89% 88% 89% 90% 90% 90% 90% 90% 89% 88% 90% 90% 89% 90% 90% 90% 90% 90% 89% 90% 90% 90% 90% 90% 90% 90% 89% 90% 90% 90% 90% 88% 90% 90% 89% 87% 90% 89% 90% 89% 89% 90% 88% 90% 88% 90% 90% 90% 90% 90% 90% 90% 90% 90% 90% 90% 90% 90% 89% 90% 90% 89% 90% 90% 90% 88% 90% 90% 90% 90% 90% 90% 90% 90% 90% 87% 90% 90% 90% 90% 89% 90% 90% 90% 89% 90% 89% 89% 90% 90% 89% 89% 88% 90% 90% 90% 90% 89% 90% 89% 90% 90% 90% 90% 87% 90% 87% 90% 90% 90% 90%) -> (8.4k/10k) -> write(21%)
    last tile: 13/4669/2996 (z13 85%) https://onthegomap.github.io/planetiler-demo/#13.5/43.43696/25.20264
0:18:45 INF [archive] -  features: [ 1.3B  41% 3.5M/s ] 233G  tiles: [  59M 8.5k/s ] 25G  
    cpus: 170.1 gc: 11% heap: 159G/214G direct: 54M postGC: 58G
    read(77% 77%) -> merge(72%) -> (9.9k/10k) -> encode(87% 87% 87% 88% 88% 84% 87% 88% 87% 88% 88% 88% 88% 88% 88% 87% 88% 88% 88% 88% 88% 89% 88% 88% 88% 88% 88% 88% 87% 88% 88% 88% 88% 85% 88% 87% 88% 88% 88% 86% 88% 87% 86% 88% 88% 88% 88% 88% 88% 88% 88% 87% 88% 88% 88% 88% 88% 88% 88% 88% 87% 87% 88% 88% 88% 88% 88% 88% 88% 88% 88% 86% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 88% 87% 88% 87% 88% 88% 88% 88% 88% 88% 88% 87% 87% 88% 87% 88% 88% 88% 87% 88% 88% 88% 88% 88% 84% 88% 88% 88% 88% 88% 88% 88% 88% 87% 88% 85% 87% 88% 88% 88% 88% 88% 88% 88% 88% 88% 82% 88% 88% 87% 88% 88% 86% 88% 88% 86% 88% 88% 88% 88% 88% 87% 85% 86% 88% 88% 88% 88% 86% 88% 88% 88% 88% 88% 88% 87% 88% 88% 87% 88% 88% 87% 85% 88% 87% 87% 88% 88% 88% 87% 88% 88% 88% 87% 88% 87%) -> (10k/10k) -> write( 7%)
    last tile: 13/4329/2983 (z13 85%) https://onthegomap.github.io/planetiler-demo/#13.5/43.85037/10.26123
0:18:55 INF [archive] -  features: [ 1.3B  41% 2.4M/s ] 233G  tiles: [  59M 1.5k/s ] 25G  
    cpus: 168.9 gc: 10% heap: 48G/214G direct: 54M postGC: 24G
    read( 8%  7%) -> merge( 8%) -> (8.1k/10k) -> encode(87% 89% 89% 86% 89% 87% 89% 89% 89% 89% 87% 88% 89% 89% 87% 89% 89% 89% 89% 89% 88% 88% 85% 89% 89% 88% 89% 89% 89% 87% 89% 89% 89% 87% 89% 88% 88% 89% 89% 89% 88% 89% 86% 88% 89% 88% 87% 89% 89% 87% 89% 89% 89% 89% 87% 89% 88% 87% 86% 88% 88% 88% 89% 89% 88% 88% 89% 89% 89% 89% 86% 87% 89% 89% 89% 89% 88% 87% 89% 89% 89% 89% 87% 89% 88% 86% 88% 88% 89% 89% 87% 87% 89% 89% 88% 89% 88% 89% 89% 88% 89% 88% 87% 87% 89% 86% 88% 88% 88% 87% 89% 88% 88% 86% 89% 88% 88% 89% 89% 89% 88% 87% 88% 87% 86% 88% 88% 89% 87% 89% 87% 87% 88% 87% 89% 88% 89% 89% 85% 87% 88% 89% 88% 87% 89% 88% 88% 89% 89% 89% 88% 87% 88% 87% 88% 89% 89% 87% 87% 89% 88% 87% 87% 89% 89% 88% 88% 88% 89% 89% 87% 87% 89% 89% 89% 89% 89% 87%) -> (10k/10k) -> write( 1%)
    last tile: 13/4146/3059 (z13 85%) https://onthegomap.github.io/planetiler-demo/#13.5/41.39329/2.21924
0:19:06 INF [archive] -  features: [ 1.4B  42% 3.1M/s ] 233G  tiles: [  59M 4.1k/s ] 25G  
    cpus: 172.9 gc:  6% heap: 139G/214G direct: 54M postGC: 29G
    read(54% 55%) -> merge(55%) -> (9.8k/10k) -> encode(93% 93% 92% 93% 92% 93% 92% 92% 93% 93% 91% 92% 93% 93% 93% 92% 92% 92% 93% 92% 93% 93% 92% 93% 93% 92% 91% 92% 92% 92% 91% 93% 92% 93% 90% 93% 93% 92% 93% 93% 93% 92% 93% 93% 93% 92% 93% 93% 93% 93% 93% 93% 93% 92% 93% 93% 93% 90% 93% 93% 93% 93% 93% 93% 92% 93% 93% 90% 92% 91% 93% 92% 93% 92% 93% 93% 93% 93% 93% 93% 89% 92% 92% 93% 88% 93% 93% 92% 92% 92% 91% 90% 92% 91% 92% 93% 91% 90% 93% 93% 92% 93% 93% 93% 93% 92% 93% 93% 92% 92% 92% 92% 93% 93% 93% 92% 92% 92% 89% 92% 93% 93% 93% 93% 93% 92% 93% 93% 93% 92% 92% 91% 93% 92% 91% 92% 93% 93% 92% 93% 92% 93% 93% 91% 92% 91% 92% 92% 92% 93% 92% 92% 92% 93% 93% 92% 92% 93% 92% 92% 92% 93% 93% 93% 93% 93% 92% 92% 93% 91% 92% 93% 92% 92% 91% 93% 92% 91%) -> (10k/10k) -> write( 6%)
    last tile: 13/4293/2816 (z13 85%) https://onthegomap.github.io/planetiler-demo/#13.5/48.90806/8.6792
0:19:16 INF [archive] -  features: [ 1.4B  43% 2.6M/s ] 233G  tiles: [  59M 1.2k/s ] 26G  
    cpus: 169.4 gc: 11% heap: 112G/214G direct: 54M postGC: 35G
    read(32% 32%) -> merge(33%) -> (10k/10k) -> encode(89% 89% 89% 89% 89% 89% 88% 89% 88% 89% 89% 89% 89% 89% 89% 89% 89% 88% 87% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 88% 89% 89% 89% 88% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 88% 88% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 88% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 88% 89% 88% 89% 89% 89% 89% 89% 89% 89% 88% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 89% 88%) -> (10k/10k) -> write( 2%)
    last tile: 13/4249/2696 (z13 85%) https://onthegomap.github.io/planetiler-demo/#13.5/52.25471/6.74561
0:19:26 INF [archive] -  features: [ 1.4B  44% 2.2M/s ] 233G  tiles: [  59M  840/s ] 26G  
    cpus: 170.5 gc:  9% heap: 40G/214G direct: 54M postGC: 37G
    read(19% 19%) -> merge(27%) -> (9.7k/10k) -> encode(91% 91% 91% 91% 91% 90% 91% 91% 91% 91% 91% 91% 90% 91% 91% 90% 91% 91% 91% 91% 91% 90% 91% 90% 91% 90% 91% 91% 91% 91% 91% 91% 91% 91% 91% 91% 90% 91% 91% 91% 90% 91% 91% 91% 91% 91% 91% 91% 91% 90% 91% 91% 91% 91% 91% 91% 90% 91% 91% 91% 91% 91% 90% 90% 90% 89% 90% 91% 91% 91% 91% 91% 90% 91% 91% 90% 91% 90% 91% 91% 91% 91% 91% 91% 91% 91% 89% 90% 91% 91% 91% 90% 91% 91% 91% 91% 91% 91% 91% 91% 91% 91% 91% 90% 90% 91% 91% 91% 91% 90% 91% 91% 90% 91% 91% 90% 91% 90% 91% 91% 90% 91% 91% 91% 91% 90% 90% 90% 90% 91% 91% 91% 91% 90% 91% 90% 90% 90% 90% 91% 91% 90% 90% 91% 91% 91% 90% 91% 91% 91% 91% 91% 91% 90% 91% 91% 90% 90% 91% 91% 90% 90% 91% 91% 91% 91% 90% 91% 90% 91% 91% 91% 91% 90% 90% 91% 91% 91%) -> (10k/10k) -> write( 1%)
    last tile: 13/4168/2752 (z13 85%) https://onthegomap.github.io/planetiler-demo/#13.5/50.72254/3.18604
0:19:36 INF [archive] -  features: [ 1.4B  44% 2.1M/s ] 233G  tiles: [  59M 1.3k/s ] 26G  
    cpus: 171.4 gc:  8% heap: 93G/214G direct: 54M postGC: 40G
    read(22% 22%) -> merge(35%) -> (9.8k/10k) -> encode(92% 91% 91% 91% 91% 92% 91% 91% 91% 92% 92% 92% 91% 91% 91% 91% 91% 92% 91% 91% 91% 91% 91% 91% 92% 91% 92% 91% 91% 91% 91% 91% 91% 91% 91% 92% 91% 91% 91% 92% 92% 91% 91% 91% 91% 91% 91% 91% 92% 91% 91% 91% 91% 91% 91% 91% 91% 91% 91% 92% 90% 91% 91% 92% 91% 92% 92% 91% 91% 91% 91% 91% 92% 91% 91% 91% 92% 91% 91% 91% 91% 92% 91% 92% 91% 91% 92% 91% 91% 92% 91% 92% 91% 91% 91% 91% 91% 92% 92% 92% 91% 91% 91% 91% 91% 90% 91% 91% 91% 91% 91% 91% 91% 91% 91% 92% 91% 91% 91% 91% 91% 91% 92% 91% 92% 91% 91% 92% 92% 91% 91% 91% 91% 92% 91% 91% 91% 92% 91% 91% 91% 91% 91% 91% 91% 91% 91% 91% 92% 91% 91% 91% 91% 91% 91% 91% 91% 91% 91% 91% 92% 91% 91% 91% 91% 91% 91% 91% 91% 91% 91% 91% 91% 91% 91% 91% 91% 92%) -> (10k/10k) -> write( 2%)
    last tile: 13/4194/2703 (z13 85%) https://onthegomap.github.io/planetiler-demo/#13.5/52.066/4.32861
0:19:46 INF [archive] -  features: [ 1.5B  46% 3.6M/s ] 233G  tiles: [  60M 6.8k/s ] 26G  
    cpus: 171.7 gc:  8% heap: 90G/214G direct: 54M postGC: 44G
    read(23% 23%) -> merge(47%) -> (10k/10k) -> encode(92% 92% 92% 92% 92% 92% 92% 91% 92% 92% 92% 92% 92% 91% 92% 92% 92% 92% 92% 92% 92% 92% 92% 92% 92% 92% 92% 92% 92% 92% 92% 92% 92% 92% 92% 92% 92% 91% 92% 92% 92% 92% 92% 92% 92% 92% 92% 92% 92% 92% 92% 92% 92% 91% 92% 92% 91% 92% 92% 92% 92% 92% 91% 92% 92% 92% 92% 92% 92% 92% 92% 92% 92% 92% 92% 91% 92% 92% 92% 92% 92% 92% 92% 92% 92% 91% 92% 92% 92% 92% 92% 91% 92% 92% 91% 92% 92% 92% 92% 92% 92% 92% 91% 92% 92% 92% 92% 92% 92% 91% 91% 92% 92% 91% 92% 92% 91% 92% 91% 92% 92% 91% 92% 91% 91% 92% 91% 92% 92% 91% 92% 92% 92% 91% 92% 92% 92% 92% 92% 92% 91% 92% 92% 92% 92% 92% 92% 92% 92% 92% 92% 92% 92% 92% 92% 92% 92% 92% 92% 92% 92% 91% 92% 92% 92% 91% 92% 92% 92% 92% 92% 91% 91% 92% 92% 92% 92% 92%) -> (10k/10k) -> write( 6%)
    last tile: 13/4482/2738 (z13 85%) https://onthegomap.github.io/planetiler-demo/#13.5/51.11042/16.98486
0:19:56 INF [archive] -  features: [ 1.5B  47% 6.4M/s ] 233G  tiles: [  60M  64k/s ] 28G  
    cpus: 168.2 gc:  9% heap: 65G/214G direct: 54M postGC: 48G
    read( 3%  3%) -> merge(11%) -> (9.6k/10k) -> encode(90% 90% 89% 90% 91% 89% 90% 90% 89% 89% 90% 89% 90% 90% 90% 89% 89% 89% 90% 90% 90% 90% 88% 87% 90% 90% 90% 89% 89% 89% 90% 89% 88% 89% 89% 90% 89% 89% 89% 90% 89% 89% 89% 89% 89% 89% 90% 90% 90% 90% 89% 88% 91% 90% 89% 90% 89% 88% 90% 90% 89% 89% 89% 90% 90% 90% 89% 89% 90% 90% 89% 90% 90% 89% 89% 89% 89% 90% 90% 89% 89% 89% 90% 88% 90% 88% 90% 90% 90% 89% 88% 90% 89% 89% 90% 89% 90% 90% 89% 90% 89% 90% 91% 90% 90% 89% 89% 90% 89% 89% 89% 89% 89% 89% 89% 90% 90% 89% 88% 89% 88% 88% 89% 90% 89% 90% 89% 90% 91% 89% 91% 89% 90% 89% 90% 90% 90% 89% 89% 90% 89% 89% 89% 89% 89% 89% 88% 90% 89% 89% 90% 89% 90% 90% 90% 90% 88% 89% 89% 89% 89% 90% 89% 88% 90% 89% 88% 90% 88% 89% 90% 90% 90% 90% 89% 90% 89% 89%) -> (10k/10k) -> write(27%)
    last tile: 13/5463/2520 (z13 86%) https://onthegomap.github.io/planetiler-demo/#13.5/56.74067/60.09521
0:20:01 INF [archive:write] - Finished z13 in 5m29s cpu:15h8m57s gc:32s avg:165.9, now starting z14
0:20:06 INF [archive] -  features: [ 1.6B  51% 9.9M/s ] 233G  tiles: [ 100M 3.9M/s ] 30G  
    cpus: 69.3 gc:  4% heap: 49G/214G direct: 54M postGC: 48G
    read(40% 43%) -> merge(52%) ->   (1/10k) -> encode(33% 38% 35% 35% 36% 36% 34% 37% 34% 34% 35% 36% 34% 33% 36% 33% 37% 34% 33% 37% 37% 35% 34% 35% 33% 34% 34% 36% 34% 36% 33% 35% 33% 35% 36% 35% 36% 34% 34% 34% 35% 36% 35% 37% 36% 34% 37% 34% 36% 34% 35% 34% 36% 35% 33% 36% 33% 34% 35% 38% 33% 35% 36% 34% 34% 35% 35% 34% 38% 35% 37% 34% 34% 34% 37% 35% 35% 36% 34% 35% 37% 34% 37% 33% 35% 36% 39% 37% 36% 35% 35% 35% 37% 35% 34% 34% 37% 34% 36% 35% 35% 37% 33% 36% 38% 36% 35% 35% 34% 36% 37% 34% 37% 35% 34% 35% 35% 34% 34% 34% 36% 34% 37% 35% 35% 35% 35% 33% 33% 35% 34% 33% 37% 36% 34% 36% 37% 34% 34% 37% 35% 40% 35% 35% 33% 35% 37% 34% 36% 36% 36% 35% 37% 35% 34% 34% 36% 35% 36% 36% 35% 35% 39% 38% 34% 33% 37% 34% 36% 34% 35% 35% 38% 34% 35% 36% 34% 37%) -> (569/10k) -> write(84%)
    last tile: 14/4696/5932 (z14 13%) https://onthegomap.github.io/planetiler-demo/#14.5/44.39454/-76.80542
0:20:16 INF [archive] -  features: [ 1.8B  55%  13M/s ] 233G  tiles: [ 109M 848k/s ] 34G  
    cpus: 43.6 gc:  2% heap: 97G/214G direct: 54M postGC: 47G
    read(98% 98%) -> merge(98%) ->   (0/10k) -> encode(23% 24% 22% 20% 22% 21% 21% 21% 22% 21% 21% 21% 21% 21% 22% 20% 21% 22% 22% 21% 23% 21% 23% 22% 20% 22% 23% 23% 22% 21% 21% 23% 22% 20% 24% 22% 20% 22% 24% 22% 23% 21% 22% 21% 21% 23% 21% 22% 21% 23% 22% 22% 22% 22% 24% 22% 22% 24% 23% 22% 21% 20% 21% 23% 23% 21% 23% 22% 22% 22% 22% 21% 22% 23% 21% 20% 21% 21% 22% 21% 21% 20% 21% 19% 23% 21% 21% 22% 22% 20% 21% 21% 20% 21% 23% 21% 20% 23% 22% 21% 20% 20% 24% 21% 22% 20% 20% 22% 20% 20% 22% 21% 22% 20% 21% 22% 21% 21% 20% 23% 23% 21% 23% 20% 23% 24% 18% 19% 22% 21% 23% 23% 23% 22% 22% 21% 21% 23% 18% 21% 22% 23% 21% 19% 22% 21% 22% 23% 23% 23% 21% 22% 21% 23% 21% 21% 19% 22% 23% 20% 22% 22% 22% 21% 23% 22% 20% 20% 24% 22% 21% 23% 19% 23% 21% 21% 23% 22%) -> (188/10k) -> write(44%)
    last tile: 14/7476/7518 (z14 16%) https://onthegomap.github.io/planetiler-demo/#14.5/14.63674/-15.72144
0:20:26 INF [archive] -  features: [ 1.9B  59%  13M/s ] 233G  tiles: [ 118M 864k/s ] 37G  
    cpus: 42.6 gc:  2% heap: 144G/214G direct: 54M postGC: 47G
    read(98% 98%) -> merge(98%) ->   (0/10k) -> encode(19% 20% 20% 21% 22% 21% 20% 21% 22% 23% 22% 21% 20% 19% 23% 22% 25% 21% 21% 19% 20% 21% 22% 21% 21% 19% 23% 20% 23% 21% 22% 20% 19% 21% 22% 24% 21% 22% 23% 22% 21% 21% 19% 19% 20% 21% 24% 21% 23% 17% 21% 20% 21% 22% 19% 18% 21% 22% 21% 22% 20% 20% 22% 21% 23% 20% 19% 23% 20% 19% 22% 22% 22% 23% 19% 21% 21% 22% 21% 20% 21% 21% 20% 22% 24% 20% 21% 20% 21% 18% 21% 20% 21% 25% 21% 23% 21% 21% 24% 21% 23% 23% 19% 21% 23% 20% 20% 23% 22% 22% 20% 21% 21% 20% 21% 19% 22% 22% 21% 19% 22% 21% 22% 21% 20% 20% 20% 21% 21% 21% 21% 20% 22% 23% 21% 20% 21% 20% 20% 21% 23% 21% 21% 20% 21% 22% 20% 23% 22% 20% 20% 22% 21% 20% 20% 22% 21% 22% 21% 22% 20% 19% 21% 21% 21% 21% 22% 22% 23% 21% 20% 22% 20% 20% 22% 20% 21% 22%) ->  (54/10k) -> write(41%)
    last tile: 14/2527/6200 (z14 20%) https://onthegomap.github.io/planetiler-demo/#14.5/40.03603/-124.46411
0:20:36 INF [archive] -  features: [   2B  62%  11M/s ] 233G  tiles: [ 121M 364k/s ] 40G  
    cpus: 48.7 gc:  2% heap: 63G/214G direct: 54M postGC: 54G
    read(97% 83%) -> merge(94%) ->  (8k/10k) -> encode(24% 23% 25% 24% 25% 25% 25% 23% 25% 25% 24% 25% 23% 24% 25% 23% 23% 24% 25% 25% 24% 22% 25% 25% 24% 27% 23% 25% 26% 23% 23% 23% 24% 25% 22% 22% 25% 23% 22% 23% 25% 27% 24% 26% 27% 24% 25% 22% 24% 24% 22% 25% 23% 24% 25% 23% 26% 25% 23% 23% 23% 23% 24% 24% 26% 23% 25% 24% 24% 24% 23% 23% 24% 22% 26% 26% 25% 25% 27% 26% 22% 25% 23% 25% 25% 24% 27% 23% 23% 26% 25% 24% 23% 26% 24% 22% 24% 22% 24% 26% 26% 25% 24% 23% 23% 23% 27% 23% 25% 22% 24% 25% 25% 24% 23% 24% 23% 24% 26% 23% 26% 22% 24% 25% 26% 24% 23% 26% 25% 26% 25% 23% 23% 24% 24% 23% 24% 24% 23% 24% 26% 23% 24% 24% 26% 26% 22% 24% 24% 24% 24% 23% 23% 23% 24% 25% 24% 24% 24% 23% 23% 23% 27% 24% 24% 24% 25% 22% 24% 27% 27% 26% 24% 23% 23% 25% 25% 23%) -> (9.7k/10k) -> write(62%)
    last tile: 14/3009/5363 (z14 22%) https://onthegomap.github.io/planetiler-demo/#14.5/52.64973/-113.87329
0:20:47 INF [archive] -  features: [ 2.2B  66%  13M/s ] 233G  tiles: [ 178M 5.6M/s ] 43G  
    cpus: 43.5 gc:  1% heap: 143G/214G direct: 54M postGC: 51G
    read(73% 73%) -> merge(85%) -> (648/10k) -> encode(21% 21% 22% 23% 21% 23% 22% 24% 21% 22% 21% 21% 19% 20% 21% 23% 22% 22% 24% 23% 24% 20% 21% 22% 20% 23% 21% 22% 21% 21% 22% 21% 24% 22% 23% 25% 21% 22% 23% 23% 22% 20% 22% 23% 22% 22% 22% 22% 20% 21% 21% 20% 23% 23% 24% 23% 21% 22% 19% 23% 20% 21% 20% 24% 23% 24% 21% 22% 23% 19% 20% 20% 22% 22% 23% 22% 21% 22% 23% 22% 21% 22% 23% 21% 23% 22% 22% 22% 24% 23% 23% 23% 22% 20% 21% 21% 22% 21% 23% 20% 22% 20% 21% 21% 23% 23% 21% 23% 24% 22% 20% 22% 23% 20% 22% 21% 21% 23% 23% 23% 21% 20% 23% 21% 19% 22% 20% 24% 22% 21% 20% 24% 24% 22% 21% 23% 22% 21% 21% 22% 22% 21% 21% 22% 20% 20% 24% 23% 22% 21% 23% 22% 21% 22% 22% 20% 19% 22% 23% 23% 23% 25% 22% 20% 21% 22% 23% 20% 25% 21% 20% 22% 21% 21% 22% 23% 20% 22%) -> (2.6k/10k) -> write(91%)
    last tile: 14/8750/8445 (z14 50%) https://onthegomap.github.io/planetiler-demo/#14.5/-5.56132/12.27173
0:20:57 INF [archive] -  features: [ 2.3B  72%  17M/s ] 233G  tiles: [ 212M 3.3M/s ] 46G  
    cpus: 42.5 gc:  2% heap: 113G/214G direct: 54M postGC: 51G
    read(92% 88%) -> merge(98%) ->   (0/10k) -> encode(22% 20% 21% 20% 21% 19% 22% 21% 20% 19% 21% 20% 22% 23% 21% 22% 22% 21% 20% 21% 21% 23% 21% 21% 20% 18% 20% 21% 19% 21% 20% 22% 21% 23% 19% 21% 22% 20% 21% 22% 19% 19% 20% 20% 20% 21% 22% 25% 21% 24% 22% 22% 24% 20% 22% 22% 20% 20% 23% 20% 22% 20% 19% 22% 21% 20% 20% 22% 20% 22% 19% 22% 22% 22% 23% 23% 21% 20% 20% 22% 21% 22% 21% 21% 20% 21% 22% 21% 21% 20% 21% 21% 21% 21% 22% 22% 23% 22% 21% 19% 19% 20% 18% 23% 22% 20% 21% 20% 22% 18% 22% 21% 21% 19% 20% 20% 18% 19% 20% 21% 22% 20% 21% 18% 19% 22% 19% 23% 20% 21% 19% 20% 20% 21% 22% 19% 20% 24% 21% 21% 19% 21% 21% 21% 20% 20% 22% 19% 19% 24% 21% 22% 19% 20% 19% 20% 20% 19% 23% 22% 19% 22% 22% 21% 20% 22% 20% 22% 21% 21% 21% 23% 20% 22% 21% 21% 19% 19%) -> (2.1k/10k) -> write(66%)
    last tile: 14/14924/10025 (z14 74%) https://onthegomap.github.io/planetiler-demo/#14.5/-37.32649/147.93091
0:20:58 WAR [archive:encode] - {x=14553 y=6450 z=14} 1303kb uncompressed
0:21:06 WAR [archive:encode] - {x=13722 y=7013 z=14} 1080kb uncompressed
0:21:07 INF [archive] -  features: [ 2.5B  76%  13M/s ] 233G  tiles: [ 225M 1.3M/s ] 49G  
    cpus: 61.5 gc:  4% heap: 59G/214G direct: 55M postGC: 53G
    read(96% 93%) -> merge(96%) ->   (0/10k) -> encode(31% 29% 30% 32% 32% 30% 31% 33% 31% 30% 30% 31% 31% 30% 30% 30% 31% 30% 29% 30% 29% 32% 30% 29% 30% 30% 29% 31% 28% 29% 29% 30% 31% 30% 30% 31% 30% 31% 29% 30% 29% 30% 29% 30% 30% 31% 31% 29% 30% 31% 31% 30% 31% 29% 31% 30% 30% 31% 30% 29% 33% 31% 32% 31% 31% 31% 28% 31% 29% 32% 30% 31% 29% 29% 30% 29% 30% 33% 31% 33% 31% 31% 31% 29% 30% 30% 32% 31% 30% 29% 34% 31% 30% 27% 31% 28% 29% 32% 31% 32% 31% 30% 31% 30% 30% 29% 29% 31% 30% 31% 30% 29% 30% 32% 31% 29% 29% 29% 31% 30% 32% 31% 31% 30% 30% 30% 29% 27% 30% 30% 28% 31% 30% 28% 32% 28% 30% 30% 29% 29% 30% 30% 31% 32% 29% 30% 32% 29% 32% 29% 32% 31% 33% 32% 32% 33% 30% 29% 33% 28% 30% 30% 30% 28% 30% 31% 30% 30% 29% 31% 28% 29% 30% 31% 28% 31% 30% 33%) -> (2.9k/10k) -> write(79%)
    last tile: 14/13688/7494 (z14 81%) https://onthegomap.github.io/planetiler-demo/#14.5/15.14637/120.77271
0:21:17 INF [archive] -  features: [ 2.6B  81%  16M/s ] 233G  tiles: [ 232M 722k/s ] 53G  
    cpus: 51 gc:  1% heap: 143G/214G direct: 55M postGC: 50G
    read(90% 94%) -> merge(99%) ->   (0/10k) -> encode(25% 27% 26% 26% 28% 28% 27% 25% 25% 25% 25% 29% 25% 26% 27% 27% 27% 26% 27% 27% 24% 26% 27% 24% 23% 25% 26% 27% 23% 24% 27% 26% 27% 25% 26% 25% 26% 25% 25% 24% 26% 24% 27% 26% 24% 26% 27% 26% 25% 26% 27% 25% 23% 25% 26% 25% 24% 27% 29% 26% 28% 23% 25% 26% 25% 28% 23% 31% 24% 29% 27% 26% 26% 26% 24% 26% 28% 25% 26% 25% 25% 26% 28% 24% 27% 27% 31% 29% 24% 27% 26% 28% 27% 28% 28% 25% 27% 27% 25% 27% 28% 25% 27% 25% 26% 27% 24% 28% 27% 26% 25% 28% 27% 26% 27% 24% 26% 27% 25% 24% 24% 26% 27% 26% 25% 27% 26% 23% 27% 24% 26% 26% 26% 28% 26% 26% 26% 26% 26% 29% 28% 26% 23% 27% 27% 25% 26% 27% 24% 27% 26% 28% 24% 26% 26% 26% 26% 24% 26% 24% 24% 25% 26% 27% 25% 25% 28% 25% 24% 27% 27% 27% 26% 27% 26% 24% 27% 26%) -> (1.1k/10k) -> write(77%)
    last tile: 14/8192/6915 (z14 84%) https://onthegomap.github.io/planetiler-demo/#14.5/26.99062/0.01099
0:21:27 INF [archive] -  features: [ 2.8B  85%  13M/s ] 233G  tiles: [ 235M 254k/s ] 57G  
    cpus: 44.5 gc:  1% heap: 68G/214G direct: 55M postGC: 49G
    read(96% 99%) -> merge(97%) ->   (0/10k) -> encode(24% 22% 24% 21% 21% 23% 23% 22% 23% 23% 23% 22% 23% 22% 22% 21% 22% 21% 22% 23% 21% 22% 20% 24% 22% 22% 21% 23% 21% 24% 23% 21% 21% 23% 23% 22% 20% 22% 21% 22% 22% 21% 24% 22% 25% 22% 24% 22% 22% 23% 22% 21% 21% 22% 22% 24% 22% 21% 22% 22% 24% 24% 23% 23% 23% 23% 23% 22% 22% 23% 22% 22% 22% 22% 24% 23% 23% 20% 24% 22% 21% 23% 24% 24% 22% 23% 21% 22% 22% 23% 22% 23% 24% 20% 21% 23% 22% 23% 21% 24% 22% 22% 24% 21% 24% 21% 26% 21% 24% 21% 22% 23% 20% 22% 23% 23% 22% 23% 24% 21% 23% 24% 21% 23% 22% 22% 22% 24% 22% 22% 22% 22% 24% 23% 26% 21% 24% 20% 26% 25% 22% 22% 21% 21% 22% 23% 23% 21% 23% 22% 23% 23% 24% 22% 20% 25% 23% 22% 25% 21% 23% 23% 21% 24% 22% 22% 21% 23% 22% 23% 22% 22% 23% 24% 22% 22% 21% 24%) ->  (40/10k) -> write(51%)
    last tile: 14/8869/5670 (z14 85%) https://onthegomap.github.io/planetiler-demo/#14.5/48.36355/14.88647
0:21:30 WAR [archive:encode] - {x=8290 y=6118 z=14} 1082kb uncompressed
0:21:30 WAR [archive:encode] - {x=8290 y=6119 z=14} 1067kb uncompressed
0:21:37 INF [archive] -  features: [ 2.9B  89%  13M/s ] 233G  tiles: [ 235M  36k/s ] 60G  
    cpus: 35.1 gc:  1% heap: 57G/214G direct: 55M postGC: 49G
    read(98% 99%) -> merge(90%) ->   (0/10k) -> encode(18% 18% 18% 18% 18% 17% 16% 17% 19% 17% 16% 19% 18% 17% 18% 19% 17% 17% 17% 19% 17% 18% 19% 17% 18% 18% 16% 16% 18% 18% 18% 16% 17% 19% 17% 18% 18% 18% 18% 18% 18% 19% 18% 18% 17% 17% 18% 16% 17% 18% 19% 18% 18% 19% 17% 17% 16% 17% 17% 18% 18% 19% 18% 17% 17% 16% 17% 18% 18% 16% 18% 19% 16% 17% 17% 18% 17% 17% 17% 17% 17% 18% 18% 18% 17% 17% 17% 17% 18% 20% 16% 18% 17% 18% 17% 16% 18% 16% 17% 14% 19% 16% 19% 17% 19% 16% 19% 16% 17% 17% 18% 18% 18% 18% 19% 17% 16% 18% 17% 17% 18% 18% 17% 19% 17% 19% 18% 16% 18% 18% 16% 18% 15% 17% 19% 17% 17% 17% 17% 17% 17% 16% 19% 20% 17% 18% 18% 17% 17% 18% 17% 18% 17% 18% 21% 17% 17% 18% 20% 20% 18% 18% 18% 15% 17% 17% 17% 17% 19% 17% 18% 17% 19% 20% 17% 19% 16% 17%) ->  (42/10k) -> write(19%)
    last tile: 14/8699/5576 (z14 85%) https://onthegomap.github.io/planetiler-demo/#14.5/49.71738/11.15112
0:21:47 INF [archive] -  features: [ 3.1B  93%  14M/s ] 233G  tiles: [ 235M  30k/s ] 63G  
    cpus: 30.1 gc:  1% heap: 113G/214G direct: 55M postGC: 49G
    read(99% 99%) -> merge(90%) ->   (0/10k) -> encode(15% 15% 14% 15% 15% 16% 15% 13% 15% 15% 14% 14% 14% 14% 14% 14% 17% 16% 15% 14% 16% 14% 16% 14% 14% 15% 16% 14% 16% 15% 16% 14% 13% 15% 15% 16% 14% 15% 14% 14% 17% 15% 16% 16% 15% 15% 16% 15% 17% 15% 14% 17% 15% 13% 14% 16% 16% 13% 15% 14% 14% 16% 14% 14% 16% 14% 15% 16% 15% 14% 15% 15% 13% 14% 15% 14% 14% 15% 15% 15% 15% 15% 14% 14% 15% 16% 15% 15% 16% 15% 15% 17% 17% 13% 14% 14% 15% 16% 15% 17% 14% 15% 16% 15% 15% 14% 16% 13% 15% 15% 15% 16% 16% 15% 16% 16% 17% 16% 15% 14% 15% 15% 15% 15% 17% 15% 15% 17% 14% 13% 15% 15% 14% 13% 15% 16% 14% 15% 15% 14% 15% 14% 15% 15% 15% 15% 16% 15% 16% 15% 15% 16% 15% 15% 16% 15% 14% 15% 15% 15% 15% 13% 15% 13% 15% 15% 14% 14% 16% 16% 14% 15% 17% 15% 16% 15% 14% 15%) ->  (34/10k) -> write(14%)
    last tile: 14/8922/5370 (z14 85%) https://onthegomap.github.io/planetiler-demo/#14.5/52.55632/16.05103
0:21:57 INF [archive] -  features: [ 3.2B  97%  13M/s ] 233G  tiles: [ 237M 173k/s ] 66G  
    cpus: 40.1 gc:  1% heap: 123G/214G direct: 55M postGC: 50G
    read(97% 99%) -> merge(94%) ->   (0/10k) -> encode(22% 22% 20% 19% 19% 21% 22% 18% 21% 18% 20% 20% 21% 19% 18% 22% 19% 19% 19% 21% 22% 19% 22% 23% 20% 22% 19% 21% 19% 20% 18% 17% 20% 22% 20% 22% 20% 21% 21% 17% 20% 21% 22% 21% 19% 22% 20% 20% 21% 18% 20% 22% 20% 23% 20% 20% 20% 20% 21% 22% 20% 20% 21% 19% 20% 20% 20% 19% 22% 20% 20% 18% 19% 19% 18% 21% 21% 21% 24% 21% 21% 20% 20% 22% 20% 22% 21% 20% 21% 19% 21% 20% 19% 19% 20% 21% 19% 21% 20% 20% 19% 20% 21% 20% 22% 20% 20% 20% 21% 20% 20% 21% 21% 21% 23% 19% 22% 19% 20% 21% 22% 21% 19% 21% 18% 23% 21% 22% 21% 19% 20% 19% 22% 20% 20% 20% 20% 22% 20% 21% 20% 21% 20% 19% 20% 19% 21% 20% 19% 21% 20% 19% 20% 21% 19% 19% 20% 19% 20% 19% 20% 20% 20% 19% 20% 20% 21% 21% 19% 20% 22% 20% 20% 21% 20% 21% 20% 19%) ->  (72/10k) -> write(39%)
    last tile: 14/9509/4714 (z14 86%) https://onthegomap.github.io/planetiler-demo/#14.5/60.47346/28.94897
0:22:07 INF [archive] -  features: [ 3.3B 100% 8.1M/s ] 233G  tiles: [ 264M 2.7M/s ] 69G  
    cpus: 31 gc:  1% heap: 166G/214G direct: 55M postGC: 53G
    read(57% 67%) -> merge(55%) ->   (0/10k) -> encode(16% 14% 15% 16% 14% 15% 14% 15% 17% 15% 16% 15% 14% 15% 17% 14% 15% 15% 16% 15% 14% 17% 18% 15% 17% 14% 14% 15% 17% 15% 15% 16% 15% 16% 15% 16% 16% 15% 14% 16% 15% 16% 15% 15% 15% 16% 16% 15% 15% 14% 16% 14% 17% 14% 15% 16% 14% 17% 16% 13% 16% 16% 14% 15% 17% 14% 15% 15% 16% 15% 16% 14% 14% 16% 16% 14% 16% 15% 15% 15% 16% 16% 15% 14% 16% 18% 17% 14% 15% 15% 15% 15% 14% 14% 16% 15% 15% 16% 12% 17% 16% 16% 15% 16% 16% 17% 14% 15% 16% 16% 15% 18% 17% 16% 15% 17% 15% 16% 15% 16% 17% 14% 17% 16% 15% 15% 17% 14% 16% 15% 16% 17% 16% 15% 14% 15% 15% 17% 14% 14% 17% 15% 15% 15% 17% 15% 14% 15% 14% 14% 15% 15% 15% 15% 13% 15% 17% 16% 15% 16% 16% 16% 18% 15% 13% 15% 14% 17% 16% 16% 15% 17% 16% 16% 16% 15% 16% 17%) ->   (0/10k) -> write(83%)
    last tile: 14/16333/3936 (z14 98%) https://onthegomap.github.io/planetiler-demo/#14.5/67.8714/178.89038
0:22:09 INF [archive:write] - Finished z14 in 2m9s cpu:1h30m36s gc:2s avg:42.3
0:22:09 INF [archive:write] - Building directories with 14085 entries per leaf, attempt 1...
0:22:15 INF [archive:write] - Built directories with 3501 leaves, 16467B root directory
0:22:15 INF [archive:write] - Building directories with 16902 entries per leaf, attempt 2...
0:22:17 INF [archive] -  features: [ 3.3B 100% 571k/s ] 233G  tiles: [ 270M 552k/s ] 69G  
    cpus: 1.4 gc:  0% heap: 176G/214G direct: 55M postGC: 53G
    read( -%  -%) -> merge( -%) ->   (0/10k) -> encodek) -> write(78%)
    last tile: 14/16383/0 (z14 100%) https://onthegomap.github.io/planetiler-demo/#14.5/85.05018/179.98901
0:22:20 INF [archive:write] - Built directories with 2917 leaves, 14102B root directory
0:22:20 INF [archive:write] - Writing metadata and leaf directories...
0:22:21 INF [archive:write] - Writing header...
0:22:21 INF [archive:write] - # addressed tiles: 270436913
0:22:21 INF [archive:write] - # of tile entries: 49299873
0:22:21 INF [archive:write] - # of tile contents: 40261320
0:22:21 INF [archive:write] - Root directory: 14kB
0:22:21 INF [archive:write] - # leaves: 2917
0:22:21 INF [archive:write] - Leaf directories: 87MB
0:22:21 INF [archive:write] - Avg leaf size: 29kB
0:22:21 INF [archive:write] - Total dir bytes: 87MB
0:22:21 INF [archive:write] - Average bytes per addressed tile: 0.323166223983632
0:22:21 INF [archive] -  features: [ 3.3B 100%    0/s ] 233G  tiles: [ 270M    0/s ] 69G  
    cpus: 1.1 gc:  0% heap: 178G/214G direct: 141M postGC: 53G
    read( -%  -%) -> merge( -%) ->   (0/10k) -> encodek) -> write( -%)
    last tile: 14/16383/0 (z14 100%) https://onthegomap.github.io/planetiler-demo/#14.5/85.05018/179.98901
0:22:21 DEB [archive] - Tile stats:
0:22:21 DEB [archive] - Biggest tiles (gzipped)
1. 14/14553/6450 (747k) https://onthegomap.github.io/planetiler-demo/#14.5/35.70192/139.77905 (poi:979k)
2. 14/8290/6118 (675k) https://onthegomap.github.io/planetiler-demo/#14.5/41.40154/2.16431 (poi:537k)
3. 14/8290/6119 (661k) https://onthegomap.github.io/planetiler-demo/#14.5/41.38505/2.16431 (poi:611k)
4. 14/13722/7013 (617k) https://onthegomap.github.io/planetiler-demo/#14.5/25.05574/121.51978 (poi:685k)
5. 14/6437/8362 (592k) https://onthegomap.github.io/planetiler-demo/#14.5/-3.74367/-38.55103 (building:605k)
6. 14/7990/6392 (592k) https://onthegomap.github.io/planetiler-demo/#14.5/36.73008/-4.42749 (building:380k)
7. 14/13722/7014 (588k) https://onthegomap.github.io/planetiler-demo/#14.5/25.03584/121.51978 (poi:627k)
8. 14/14552/6450 (577k) https://onthegomap.github.io/planetiler-demo/#14.5/35.70192/139.75708 (poi:744k)
9. 14/6435/8361 (573k) https://onthegomap.github.io/planetiler-demo/#14.5/-3.72175/-38.59497 (building:710k)
10. 14/6436/8361 (558k) https://onthegomap.github.io/planetiler-demo/#14.5/-3.72175/-38.573 (building:607k)
0:22:21 INF [archive] - Other tiles with large layers
14/8414/5384 (313k) https://onthegomap.github.io/planetiler-demo/#14.5/52.36889/4.88892 (housenumber:313k)
14/3411/6216 (333k) https://onthegomap.github.io/planetiler-demo/#14.5/39.76632/-105.04028 (landcover:333k)
10/236/413 (176k) https://onthegomap.github.io/planetiler-demo/#10.5/32.69474/-96.85547 (landuse:176k)
13/1596/3157 (337k) https://onthegomap.github.io/planetiler-demo/#13.5/38.08269/-109.84131 (mountain_peak:337k)
5/5/11 (144k) https://onthegomap.github.io/planetiler-demo/#5.5/44.9512/-118.125 (park:144k)
3/5/3 (558k) https://onthegomap.github.io/planetiler-demo/#3.5/20.48995/67.5 (place:558k)
12/3229/2032 (313k) https://onthegomap.github.io/planetiler-demo/#12.5/1.36218/103.84277 (transportation:313k)
14/9618/6751 (179k) https://onthegomap.github.io/planetiler-demo/#14.5/30.15463/31.34399 (transportation_name:179k)
12/3415/1774 (165k) https://onthegomap.github.io/planetiler-demo/#12.5/23.36242/120.19043 (water:165k)
0:22:21 DEB [archive] - Max tile sizes
                      z0    z1    z2    z3    z4    z5    z6    z7    z8    z9   z10   z11   z12   z13   z14   all
           boundary 5.4k   37k   43k   25k   19k   24k   18k   14k   14k   28k   23k   17k   31k   18k  9.4k   43k
          landcover 1.5k   982    8k  4.6k  3.2k   31k   17k  271k  333k  235k  153k  175k  166k  111k  333k  333k
              place  52k  145k  546k  558k  351k  183k  109k   58k   41k   52k   62k   69k   50k  122k  221k  558k
              water 8.4k  4.1k   10k    9k   14k   13k   89k  113k  126k  109k  132k   94k  165k  115k   91k  165k
         water_name 8.5k   19k   26k   14k   12k  7.4k    5k  4.7k   12k  8.6k  5.6k  3.8k  3.1k  9.4k   29k   29k
           waterway    0     0     0   546  3.7k  1.6k   17k   13k  9.8k   28k   20k   16k   59k   75k   88k   88k
            landuse    0     0     0     0  2.6k  1.5k   32k   66k  125k  113k  176k  129k   63k  124k   47k  176k
               park    0     0     0     0   54k  144k   99k   76k   71k   82k   90k   55k   47k   19k   50k  144k
     transportation    0     0     0     0   60k  107k   62k  122k   89k  135k   91k   67k  313k  187k  128k  313k
transportation_name    0     0     0     0     0     0   34k   20k   19k   15k   37k   22k   33k   27k  179k  179k
      mountain_peak    0     0     0     0     0     0     0   12k   12k   10k   10k  9.5k  9.4k  337k  234k  337k
    aerodrome_label    0     0     0     0     0     0     0     0  4.1k  2.8k  3.9k  2.9k  2.7k  2.7k  2.7k  4.1k
            aeroway    0     0     0     0     0     0     0     0     0     0   16k   25k   35k   31k   18k   35k
                poi    0     0     0     0     0     0     0     0     0     0     0   175   35k   17k  979k  979k
           building    0     0     0     0     0     0     0     0     0     0     0     0     0  141k  710k  710k
        housenumber    0     0     0     0     0     0     0     0     0     0     0     0     0     0  313k  313k
          full tile  76k  204k  626k  590k  401k  349k  271k  396k  370k  343k  272k  204k  379k  341k  1.3M  1.3M
            gzipped  46k  119k  334k  314k  238k  204k  172k  284k  268k  250k  182k  141k  188k  227k  747k  747k
0:22:21 DEB [archive] -    Max tile: 1.3M (gzipped: 747k)
0:22:21 DEB [archive] -    Avg tile: 99k (gzipped: 64k) using weighted average based on OSM traffic
0:22:21 DEB [archive] -     # tiles: 270,436,913
0:22:21 DEB [archive] -  # features: 3,338,872,773
0:22:21 INF [archive] - Finished in 9m1s cpu:18h41m14s gc:40s avg:124.4
0:22:21 INF [archive] -   read    2x(51% 4m38s wait:3m40s done:11s)
0:22:21 INF [archive] -   merge   1x(57% 5m8s wait:2m31s done:12s)
0:22:21 INF [archive] -   encode 178x(64% 5m49s block:39s wait:1m40s done:12s)
0:22:21 INF [archive] -   write   1x(24% 2m8s wait:6m29s done:12s)
0:22:21 INF - Finished in 22m21s cpu:44h34m7s gc:1m23s avg:119.7
0:22:21 INF - FINISHED!
0:22:21 INF - 
0:22:21 INF - ----------------------------------------
0:22:21 INF - data errors:
0:22:21 INF - 	render_snap_fix_input	21,388,532
0:22:21 INF - 	merge_snap_fix_input	21,243
0:22:21 INF - 	feature_polygon_osm_invalid_multipolygon_empty_after_fix	254
0:22:21 INF - 	omt_park_area_osm_invalid_multipolygon_empty_after_fix	23
0:22:21 INF - 	feature_centroid_if_convex_osm_invalid_multipolygon_empty_after_fix	17
0:22:21 INF - 	feature_point_on_surface_osm_invalid_multipolygon_empty_after_fix	4
0:22:21 INF - 	feature_centroid_osm_invalid_multipolygon_empty_after_fix	2
0:22:21 INF - 	omt_place_island_poly_osm_invalid_multipolygon_empty_after_fix	2
0:22:21 INF - 	merge_snap_fix_input2	1
0:22:21 INF - 	merge_snap_fix_input3	1
0:22:21 INF - ----------------------------------------
0:22:21 INF - 	overall          22m21s cpu:44h34m7s gc:1m23s avg:119.7
0:22:21 INF - 	lake_centerlines 3s cpu:9s avg:3.5
0:22:21 INF - 	  read     2x(17% 0.4s done:2s)
0:22:21 INF - 	  process 174x(0% 0s wait:2s)
0:22:21 INF - 	  write    6x(0% 0s wait:2s)
0:22:21 INF - 	water_polygons   32s cpu:22m5s avg:40.9
0:22:21 INF - 	  read     2x(16% 5s wait:9s done:18s)
0:22:21 INF - 	  process 174x(20% 6s wait:25s)
0:22:21 INF - 	  write    6x(74% 24s wait:8s)
0:22:21 INF - 	natural_earth    14s cpu:25s avg:1.7
0:22:21 INF - 	  read     2x(24% 3s wait:2s done:9s)
0:22:21 INF - 	  process 174x(0% 0.1s wait:11s done:3s)
0:22:21 INF - 	  write    6x(0% 0s wait:11s done:3s)
0:22:21 INF - 	osm_pass1        58s cpu:1h30m37s gc:5s avg:94
0:22:21 INF - 	  read     1x(65% 38s wait:2s done:13s)
0:22:21 INF - 	  process 179x(45% 26s block:16s wait:11s done:1s)
0:22:21 INF - 	osm_pass2        9m19s cpu:22h48m33s gc:29s avg:147
0:22:21 INF - 	  read     1x(11% 1m4s wait:7m20s done:49s)
0:22:21 INF - 	  process 174x(76% 7m6s block:10s wait:1m6s done:2s)
0:22:21 INF - 	  write    6x(70% 6m31s wait:2m6s)
0:22:21 INF - 	boundaries       8s cpu:10s avg:1.2
0:22:21 INF - 	agg_stop         0.3s cpu:0.9s avg:3.4
0:22:21 INF - 	sort             2m5s cpu:1h10m52s gc:8s avg:33.9
0:22:21 INF - 	  worker 35x(8% 10s wait:1m28s done:6s)
0:22:21 INF - 	archive          9m1s cpu:18h41m14s gc:40s avg:124.4
0:22:21 INF - 	  read    2x(51% 4m38s wait:3m40s done:11s)
0:22:21 INF - 	  merge   1x(57% 5m8s wait:2m31s done:12s)
0:22:21 INF - 	  encode 178x(64% 5m49s block:39s wait:1m40s done:12s)
0:22:21 INF - 	  write   1x(24% 2m8s wait:6m29s done:12s)
0:22:21 INF - ----------------------------------------
0:22:21 INF - 	archive	69GB
0:22:21 INF - 	features	233GB
